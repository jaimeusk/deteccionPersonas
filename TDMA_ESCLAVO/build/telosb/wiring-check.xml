<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="27:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fa03c9b1480"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fa03cd3ce50"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fa03cd3ce50"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fa03cd37aa0"/></to>
    </wire>
    <wire loc="28:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa03c9b1ac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa03cc859a0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa03cc859a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa03cc82620"/></to>
    </wire>
    <wire loc="30:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7fa03c9a2e50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c8d8980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c8d8980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa03c8cfb60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7fa03c99e360"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c5a7260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c5a7260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa03c8cfb60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="TimerDormir" scoped="" ref="0x7fa03c999860"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c5a1b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c5a1b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa03c8cfb60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="TimerComienzaDormir" scoped="" ref="0x7fa03c994d30"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c59a560"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c59a560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa03c8cfb60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa03c935910"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa03b7e8c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa03b7e8c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa03ae96aa0"/></to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa03c9258d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa03b7e78b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa03b7e78b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa03ae95720"/></to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fa03c912a50"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa03b88e360"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa03b88e360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa03c586080"/></to>
    </wire>
    <wire loc="37:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa03c91a8f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa03b7e8020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa03b7e8020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa03ae98e60"/></to>
    </wire>
    <wire loc="38:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa03c915180"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03b7dc910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa03b7dc910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03b88b5c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03c90ac20"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03c580930"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03c580930"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03c5482f0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03b95fdd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03b9e8b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03ba07750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03ba28080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03bb78620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03bc6fc60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03c4047e0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03b01c020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03c140020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03c4b5cc0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03c8c88c0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fa03cc9c140"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fa03d1e41e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fa03d1e41e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fa03cd89140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fa03cc9cb60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03cd3a280"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03cd3a280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03cd2a4e0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cc9b3a0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fa03cd2c3a0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fa03cd2ab50"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fa03cd28220"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fa03cd2bbe0"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fa03cd2bbe0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03ccf8b60"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fa03cd28900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03cd35a10"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fa03cd27020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03cc5add0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03ccf8b60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03ccde820"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fa03ccee2c0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fa03ccdd020"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa03ce5fc80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa03ccdc320"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03cd88040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fa03cd83490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fa03cfbc9a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03cc5add0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03cc82020"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fa03cc7ab50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fa03cc83590"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fa03cc83590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c9dc9e0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fa03cc80e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fa03cc5c830"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fa03cc5c830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c9c6020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fa03cc79020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fa03cc5bb50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fa03cc5bb50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c9c0630"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c9cbc50"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fa03cbed020"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fa03cbed020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca96540"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c9c42f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fa03cbeb8a0"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fa03cbeb8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca91b90"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c9bf7a0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fa03cbe8020"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fa03cbe8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca8b060"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fa03cc3fd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb46b90"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fa03cc26e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb0e060"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fa03cb9b3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cafe060"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fa03cba03e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca60b90"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fa03cbc93f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caf9540"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fa03cc21e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb04b90"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fa03cc06020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cacd060"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fa03cbd8020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca6a060"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fa03cbc43f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caed060"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fa03cbb03e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca81b90"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fa03cb913f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca5a060"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fa03cc37580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb35b90"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fa03cbc2bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cae8540"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fa03cc32580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb2a540"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fa03cc18710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caf4b90"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fa03cbff8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cabc060"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fa03cbe68a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca86540"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fa03cbd18a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca5a060"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fa03cc44d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb50060"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fa03cc2bd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb196d0"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fa03cc11e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cae3b90"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fa03cbccbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cafe060"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fa03cba9bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca70b90"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fa03cb94bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca5a060"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fa03cbb8bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca9b060"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fa03cc0ce50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cad8740"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fa03cbf2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caa2b90"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fa03cbdd020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca76540"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fa03cba53e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca6a060"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fa03cbbf3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caac060"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fa03cc3c580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb3f060"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fa03cc23710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb09540"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fa03cbe2020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca81b90"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fa03cc1e710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cafe060"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fa03cc048a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cac8540"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fa03cbd68a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca65540"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fa03cbba3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caa2b90"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fa03cc47cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb5b540"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fa03cc30d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb25b90"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fa03cc16e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caed060"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fa03cbfc020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cab7540"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fa03cbb53f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cae3b90"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fa03cbaebb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca7b060"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fa03cb9ebb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca5a060"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fa03cbf7020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caac060"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fa03cbb3bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cadd060"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fa03cc41580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb4b540"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fa03cc28710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb14b90"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fa03cc0e710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cadd060"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fa03cbbdbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caa7540"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fa03cba3bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca65540"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fa03cc098a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cad3b90"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fa03cbf08a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca9b060"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fa03cbdb8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca70b90"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fa03cc3ad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb3a540"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fa03cbe08a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca7b060"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fa03cc35d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb2f060"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fa03cc1be50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caf9540"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fa03cc01020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cac2b90"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fa03cbd3020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca60b90"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fa03cc46580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb56b90"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fa03cc2d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb1f060"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fa03cc13710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cae8540"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fa03cbfa8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cab2b90"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fa03cbab3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca76540"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fa03cb99ba0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caf4b90"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fa03cbc7bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caf4b90"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fa03cbf58a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03caa7540"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fa03cb963e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca60b90"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fa03cb8fbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03ca86540"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fa03cbce060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fa03cb04b90"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fa03c8cfb60"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa03c8c4700"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fa03c8c4700"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c5cf8e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03c8c88c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03c67d020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c5cf8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03b20fdb0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fa03c8bd1a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa03c5c0020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03c67d020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03b404b10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fa03c5c8020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c6502f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa03c64b850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa03c67d870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa03c67d870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa03b3fe890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa03c5b6300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa03c6f68c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa03c6f68c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa03c6d9cf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03b404b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03b3e8660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fa03b3f70a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa03b4034f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa03b4034f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa03b3e7020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa03b3fac00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa03c6f68c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03b3e3190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03b3ed340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03b3ed340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c88a990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03b3e2770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03b3eca80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03b3eca80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c887720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03b3e1a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03b3ebda0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03b3ebda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03c8851d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c88a990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa03c8719e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fa03c8719e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c81b260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c887720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fa03c86f280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fa03c86f280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa03c7b96d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03c8851d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fa03c86e700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fa03c86e700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa03c7b7ac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c88a990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa03c8719e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c887720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fa03c869a50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fa03c869a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa03c7a9220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03c8851d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fa03c867020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fa03c867020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa03c7a7610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c88a990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa03c8719e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c887720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fa03c866d40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fa03c866d40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa03c7a16d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03c8851d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fa03c864160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fa03c864160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa03c7a0ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c88a990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa03c8719e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c887720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fa03c862020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fa03c862020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa03c79ab30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03c8851d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fa03c861570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fa03c861570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa03c798020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c88a990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa03c8719e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c887720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fa03c85f5a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fa03c85f5a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa03c791220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03c8851d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fa03c85da20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fa03c85da20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa03c790610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c88a990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa03c8719e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c887720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fa03c85b8c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fa03c85b8c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa03c78a6d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03c8851d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fa03c85ad40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fa03c85ad40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa03c789ac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fa03c874730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa03c7c0220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fa03c875700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c7c6cb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fa03c863020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c79f7a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fa03c87b890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa03c7c6020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fa03c859ae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c7877a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fa03c87f0c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa03c8146d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fa03c86aa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c7afcb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fa03c86bbb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa03c7af020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fa03c86c730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa03c7b1b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fa03c872a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c7be2f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fa03c860570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c798cb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fa03c873bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa03c7bf610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fa03c884830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c8223e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fa03c87c410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fa03c7c8b30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fa03c876410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c7ce7a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fa03c867da0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c7a62f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fa03c87e570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fa03c7cfac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fa03c85c890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c78f2f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fa03c86d700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c7b67a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fa03c8202f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c821bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fa03c820940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fa03c7803f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fa03c81f020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fa03c780b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c7cd610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c8223e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa03c7ccc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c821bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c7c5b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c8223e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa03c7c32f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c821bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c7bd160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c8223e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa03c7bc7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c821bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fa03c819100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c81aa60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fa03c819750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fa03c77f430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fa03c819da0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fa03c77fbc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c7b5610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c81b260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa03c7b4c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c81aa60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c7aeb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c81b260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa03c7ac2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c81aa60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c7a5160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c81b260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa03c7a47a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c81aa60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c79e610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c81b260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa03c79dc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c81aa60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c796b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c81b260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa03c7942f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c81aa60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c78e160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c81b260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa03c78d7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c81aa60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03c786610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fa03c81b260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fa03c785c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fa03c81aa60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fa03c6bb0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa03c6f48e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa03c6f48e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa03c6edb80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c6dfc50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fa03c8719e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fa03c6479c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fa03b2083d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7fa03c5c8020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7fa03b201a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7fa03c5c3450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fa03b2025d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fa03cd2c3a0"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fa03b200100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa03c586080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa03c55a420"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa03c55a420"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa03b953b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03c56e7a0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03b91c8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fa03c55d640"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fa03b91dce0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa03c582c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa03b91ea80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa03c5851d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa03b922020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fa03c583020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fa03b920df0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03c5482f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03baf9670"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03c5675b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03c546320"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03c546320"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03b953080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa03c5843f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03b920210"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03c577350"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03c5471a0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03c5471a0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fa03baf66e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa03c560880"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa03c546e10"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa03c546e10"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa03b93e020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa03c583650"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa03b91f470"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa03c575470"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa03c547b50"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa03c547b50"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa03baf5a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fa03b9130f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c553960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa03b91b860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fa03c552e20"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fa03c552e20"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fa03b9bcc90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa03b91a690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fa03c54ab70"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fa03c54ab70"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fa03b9bba50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa03b9154d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa03bd27b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03b91ace0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03baf9670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03baf9670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03baebd20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03b918b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03baf50c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03baf50c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03bae7640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fa03b917610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fa03c4b9550"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fa03c4b9550"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fa03c4af0c0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fa03b9141f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03c540490"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03c540490"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03c53a970"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa03b913d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa03cc859a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa03b953b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fa03b950d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa03baf5a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa03bae5020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fa03b93e020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fa03b93c410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fa03b9bcc90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fa03b9b1a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03b953080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03b94c2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fa03c557a30"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03b9bc5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa03b9bc5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fa03b9b1370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa03baf66e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fa03bae8c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03c553960"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03b9bebe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03b9bebe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03b9b37b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fa03c549c90"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa03b9bd8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa03b9bd8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fa03b9b24d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fa03c552130"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fa03b9ba170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fa03b9ba170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fa03b9af020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fa03b9bba50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fa03b9b0840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fa03b950d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa03c544590"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fa03c544590"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fa03c53b020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa03b9b96b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa03ba0c220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa03ba0c220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa03ba0aa10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa03ba0b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa03b941350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa03b941350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa03b93ed70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa03b93ed70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa03b957ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa03b957ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa03b951860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa03b951860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa03c5410c0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa03c5410c0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa03c53bb10"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa03b9b9020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03b954980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa03b954980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa03b950690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa03b950690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03b9efaa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa03b9efaa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03b9ebe30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa03b9ec950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03c541d60"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa03c541d60"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03bb7d7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa03bb7d7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03bb76020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03c5397d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c4c7020"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03c4c7020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c4b0390"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fa03c531cd0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fa03c4c54b0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fa03c4c54b0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fa03c4ac020"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fa03c52d840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa03bc7e6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fa03c52d840"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa03bb805c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fa03bb805c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa03bb78ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fa03bc7e6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa03bc6e320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa03c5266c0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa03bc7b020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa03bc7b020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa03bc6ebc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fa03c52e570"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03bc7bcb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03bc7bcb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03bc6d970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03c523970"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03baf9670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03c520020"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03baf50c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa03c5229d0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa03ba2da20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa03ba2da20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa03ba27a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fa03c515720"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa03ba2faa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa03ba2faa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa03c1451d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa03c5242e0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa03cc859a0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fa03c5102a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fa03c5112a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fa03c5132b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fa03c4b3850"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fa03c4ab500"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fa03c4a9350"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa03c401220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa03c401220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa03c3fbaf0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa03c4a4580"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fa03c3bce60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa03c3bce60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c3ae630"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fa03c4a3830"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fa03c3b86a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fa03c3b86a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c39d630"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fa03c4a2b50"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fa03c3b6ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fa03c3b6ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c392020"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fa03c49b5b0"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fa03c375400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fa03c375400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa03c216680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa03c489520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03bdb3e20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03bdb3e20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c1c44d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa03c488570"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fa03bdaf7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa03bdaf7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa03c488c80"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fa03bdaeae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa03bdaeae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa03c48ad70"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fa03bdb1ad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa03bdb1ad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03c48a450"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03bdad160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03bdad160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa03c48e1d0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fa03bda3870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa03bda3870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa03c48ea80"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fa03bda0880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa03bda0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa03c4923c0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fa03bd9f0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa03bd9f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03c492c90"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03bda9e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03bda9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03c4915f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bda8670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bda8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa03c49a9a0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fa03bd92500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa03bd92500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa03c49a020"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fa03bd93ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa03bd93ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03c48d020"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03bda6e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03bda6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa03c48d8c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fa03bda8e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa03bda8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa03c48c1d0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bda7e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bda7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fa03c486180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03bd80a80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03bd80a80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c1c44d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fa03c4873d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03bd549e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03bd549e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c1c44d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa03c498dd0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa03bd27b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa03c4a7940"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa03bd26d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa03bd26d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa03bd0b310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fa03c47bca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fa03c47cdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03c4047e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03c3fb260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03c3fb260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03b1a8af0"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa03c3fbaf0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa03b1a6370"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03b1a8af0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03b1a0ab0"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa03b1a6370"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa03b1995f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03b1a0ab0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03b180510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fa03b190d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa03b19f360"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fa03b19f360"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fa03b180da0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa03b1969b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa03c3e5080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa03c3e5080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa03c3e0cd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03b17c020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03b1861b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03b1861b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c88a990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03b17b760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03b1858f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03b1858f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c887720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03b17aa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03b184c10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03b184c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03c8851d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fa03c3dc0f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa03c6f48e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fa03c3ba090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c3a9b00"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fa03c3b9390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c3a2020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fa03c402b10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c3b3020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fa03c3b79b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c398af0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c3b22f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fa03cc3fd50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c3ad7a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fa03cc06020"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c3a7c60"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fa03cc41580"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c3a12f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fa03cc47cb0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c39c7a0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fa03cbfc020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c397c60"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fa03cc098a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c3912f0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fa03cbff8a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fa03c372700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fa03c36fc20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa03c374060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fa03c206b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c359760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fa03c86c730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fa03c358a80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fa03c86aa20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c357930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fa03cc098a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fa03c2132f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fa03c3453f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fa03c3453f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fa03c32e3f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fa03c2057a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fa03c348620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fa03c348620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fa03c3357a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fa03c3383f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fa03c3223f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fa03c342d50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fa03c32bd50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fa03c33f3f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fa03c3283f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fa03c34dbc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fa03c331d50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fa03c33bd50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fa03c325d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fa03c344710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fa03c32d710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fa03c337710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fa03c321710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fa03c33e710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fa03c327710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fa03c346020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fa03c32f020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fa03c339100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fa03c323100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fa03c343a30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fa03c32ca30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fa03c340020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fa03c329020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fa03c34e8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fa03c332a30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fa03c33ca30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fa03c326a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa03bdaf160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bda1880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa03bd990a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa03bda00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa03bd8e500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa03bd90500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bdae490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa03bd96880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bd91500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa03bd9c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa03bd9d0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bdb2a90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03c1c3350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03c1c3350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03c1bb660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bdade00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa03bdac490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa03bd95c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa03bdacbe0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03bd91ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa03bd960a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa03bda7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa03bd970a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa03bd99880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa03bd97880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bd8fce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa03bd90ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa03bd9d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa03bd980a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa03bd92ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa03bd9f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa03bd8ece0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa03bdb1480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa03bda9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa03bda6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa03bd9a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa03bd9a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bda10a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa03bdab2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa03bda9020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03bdad7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa03bd93500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa03bd8f500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa03bd9c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa03bd98880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa03bdafe00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa03bd9e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa03bdab940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa03bd9e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa03bd950a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bd8c9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1b9890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1b8ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1b6a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03c1c44d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c1ba510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1b58b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fa03c1a8b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa03c14a770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa03c14a770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa03c1451d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa03c1b4060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c128c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03c128c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03b0a3940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa03c1b1c70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa03c1278f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa03c1278f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa03b0a2d70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa03c1a82e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa03bddb020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa03bddb020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa03b09f020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa03c1b2a70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa03cc859a0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fa03c1a5bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa03c1451d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa03c140b70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa03b09f020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa03c0c0850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa03b0a2d70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa03c0c1110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03b0a3940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c0c6d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03b0a25d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03b097020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03b097020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03bf438a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fa03c0c1110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fa03c045440"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fa03b0a1410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fa03c0c1790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fa03c0c1790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fa03c045a50"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa03c0bba40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa03b09f7c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03b08a760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03c0bd8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fa03c0bc690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03b098340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03b098340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03bf445c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa03c0b6b40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa03b092c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa03b092c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa03bf48a80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03c0bd8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03c046c40"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fa03c0c0850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fa03c043700"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03c0c6d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c047e80"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa03c042e00"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa03c0bba40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fa03c042060"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fa03c0bc690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa03c03dde0"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa03c0b6b40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fa03c041490"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa03c0358a0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa03c0358a0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fa03c02cd00"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa03c03c5a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa03cc859a0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fa03c03bc50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa03c02b8a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa03c023290"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa03c02e3b0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa03c024910"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fa03bff5700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fa03cbccbc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fa03bff3e40"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fa03cbc93f0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fa03bff0570"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fa03cbc7bc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fa03bfeed40"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fa03cbc2bc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fa03bfeb570"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fa03cbc43f0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fa03bffa5b0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fa03be96390"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa03b091440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa03bf459a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa03b091a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa03bea28c0"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa03bea28c0"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fa03be96390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa03b096020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa03c0358a0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03b0977c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03bf41130"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03bf41130"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03beab930"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03bf40020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03b08a760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03bf438a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03beac530"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03beac530"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03b0196c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fa03bf48a80"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fa03bf3e5c0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03bf445c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03bead6a0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03bead6a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03b01a850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa03bf459a0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa03bf2d020"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03beab930"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03b018a70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03beaa270"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03bf40020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03bf2b4b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03beab930"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fa03bf2d690"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa03c02e3b0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fa03bf2de70"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa03c02b8a0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa03beaccb0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa03b019e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03b0179d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03beaa270"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fa03b0172d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fa03beaa9f0"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa03b0152b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa03b01c630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fa03b013480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fa03be8f250"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fa03c02cd00"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fa03be8bd40"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fa03cbccbc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fa03be88570"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fa03cbc7bc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03bd73c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa03bd7eda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03bd77b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bd71670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa03bd6ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa03bd71e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa03bd5d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa03bd5f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bd7c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa03bd65670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bd612f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa03bd76c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bd74c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa03bd6b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa03bd6de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa03bd70670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bd7f760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03c1c3350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bd7aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa03bd79120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa03bd64a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa03bd79870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03bd61ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03bd7cdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa03bd66e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa03bd74480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bd76480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa03bd7e750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa03bd67e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa03bd69670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa03bd66670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bd5ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa03bd5fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa03bd6c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa03bd69e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa03bd62ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa03bd6f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa03bd5dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa03bd7e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa03bd77370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa03bd73480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa03bd6be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa03bd70e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa03bd6a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa03bd72670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa03bd7d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bd72e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa03bd78020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa03bd78cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa03bd622f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa03bd63ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03bd7a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa03bd632f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa03bd5e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa03bd6ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa03bd67670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa03bd7daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa03bd7c770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa03bd6fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa03bd78670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa03bd6d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa03bd65e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bd5c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03bd47c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa03bd52da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03bd4ab50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bd44670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa03bd3de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa03bd44e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa03bd302f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa03bd332f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bd4f120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa03bd39670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bd342f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa03bd49c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bd48c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa03bd3e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa03bd41e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa03bd43670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bd53760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03c1c3350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bd4eaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa03bd4d120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa03bd38a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa03bd4d870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03bd34ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03bd4fdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa03bd3ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa03bd48480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bd49480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa03bd52750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa03bd3be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa03bd3c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa03bd3a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bd32ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa03bd33ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa03bd40670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa03bd3ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa03bd35ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa03bd42670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa03bd30ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa03bd52100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa03bd4a370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa03bd47480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa03bd3ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa03bd43e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa03bd3d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa03bd46670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa03bd50450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bd46e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa03bd4b020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa03bd4bcc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa03bd352f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa03bd36ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03bd4e450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa03bd362f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa03bd322f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa03bd40e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa03bd3b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa03bd50aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa03bd4f770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa03bd42e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa03bd4b670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa03bd41670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa03bd39e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bd2f7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fa03bd08880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fa03bcfd020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fa03bcfd020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fa03bcf7140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fa03bcf3bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fa03bcfcc50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fa03bcfcc50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fa03bcdf150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fa03bcf6530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fa03bc8a1b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fa03bce3540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fa03bce4590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fa03bce4590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fa03bc939e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fa03bcd9950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fa03bce1ca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fa03bce1ca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fa03bcb7a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fa03bcdf9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fa03bce3540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa03bca6020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fa03bca1530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fa03bca1530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa03bc9de50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03bc9a020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fa03c884830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03bc92c50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fa03cc2bd50"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa03bc77990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa03bc6c900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fa03bc79150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fa03bc6b0f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fa03bc6bae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa03c401220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fa03bc58690"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fa03c402b10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa03bc509b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fa03c3bce60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fa03bc4ecd0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fa03c3b79b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fa03bc59a80"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fa03c372700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa03bc4c020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03bbb1c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03bbb1c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c1c44d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bc4cd10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bbb08f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bbb08f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03c1c3350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa03bc496d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fa03bbaf2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa03bbaf2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa03bc49de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fa03bbaecc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa03bbaecc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bc48530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bbac370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bbac370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bc48c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bbabd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bbabd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bc4ae00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bba5c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bba5c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bc4b780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bb8d7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bb8d7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bc4a550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bb912f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bb912f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bc473e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bba6480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bba6480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bc465e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bba3e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bba3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bc45020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bba2670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bba2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa03bc47e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fa03bba97b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa03bba97b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bc449c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bb8fad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bb8fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa03bc45890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fa03bb902f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa03bb902f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa03bc44130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fa03bb90ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa03bb90ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fa03bc3ed40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fa03bb80df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fa03bb80df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fa03bb77550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03bc67d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03baf9670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03bc66bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03baf50c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa03bc60c60"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa03baf4550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa03baf4550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa03bae5a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa03bc51e80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa03baec480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa03baec480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa03bade8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa03bc426c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa03cc859a0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03bba4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa03bbae020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03bba8c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa03bb9be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa03bba2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa03bb8e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa03bb96670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa03bba6c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa03bb9c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa03bb9ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa03bba0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa03bbaa370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa03bb95a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa03bbaaac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03bb91ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03bbab060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa03bb97e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa03bba5480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa03bbaf940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa03bb98e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa03bb99670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa03bb97670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa03bb9d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa03bb99e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa03bb92ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa03bb9f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa03bb8ead0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa03bba8490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa03bba4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa03bb9ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa03bba0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa03bb9b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa03bba3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa03bbae670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa03bba9160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa03bba9e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa03bb922f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa03bb94ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03bbab6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa03bb942f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa03bb8f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa03bb9de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa03bb98670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa03bbac9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa03bb9fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa03bb9e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa03bb96e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fa03bb7c020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fa03bb767c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fa03bb61150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fa03cc859a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fa03bb75020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fa03c3bce60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fa03bb74380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fa03c3ba090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fa03bb736b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fa03c3b9390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa03bb72a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa03c374060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fa03bb716e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03ba7bd00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fa03ba7bd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fa03c1c44d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa03bb70530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fa03ba58ad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fa03ba58ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03bb6fad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03ba756b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03ba756b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa03bb6f3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fa03ba74370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fa03ba74370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03bb6e330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03baf9670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03bb6d1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03baf50c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa03bb6bd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa03baf4550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fa03bb6db90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fa03c4b9550"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bb663e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03ba6de50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03ba6de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bb66cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03ba6c670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03ba6c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa03bb67b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fa03ba73160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fa03ba73160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa03bb636d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fa03ba582f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fa03ba582f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa03bb64590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fa03ba5a2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fa03ba5a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa03bb64e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fa03ba5aad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fa03ba5aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03bb62020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03ba5cad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03ba5cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa03bb628b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fa03ba79300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fa03ba79300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fa03bb559d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa03baf0660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa03bae2af0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fa03ba88300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fa03c3e5080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fa03badb3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa03ba89020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fa03bada6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fa03c8bd1a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fa03ba83450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fa03c8cfb60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03ba6ec60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fa03ba78020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03ba72c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fa03ba65e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fa03ba6ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fa03ba77370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fa03ba60670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03ba5c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fa03ba71c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fa03ba6fc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fa03ba66670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fa03ba68e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fa03ba6b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03ba7a970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03c1c3350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03ba75d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa03ba5fa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fa03ba74ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03ba75060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fa03ba61e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fa03ba6f480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03ba71480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fa03ba79950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fa03ba63e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fa03ba64670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fa03ba61670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fa03ba59ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fa03ba67670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fa03ba64e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fa03ba5dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fa03ba6a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fa03ba72490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fa03ba6e480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fa03ba66e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fa03ba6be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fa03ba65670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fa03ba6d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fa03ba78670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fa03ba73e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fa03ba5d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fa03ba5ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa03ba5e2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fa03ba592f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fa03ba67e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fa03ba63670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fa03ba78cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fa03ba779c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fa03ba6ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fa03ba737b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fa03ba68670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fa03ba60e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fa03ba577a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fa03ba2b920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fa03ba28940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fa03ba31990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fa03ba28080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa03ba07e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa03ba0b020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa03ba06ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa03ba08690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa03ba08690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa03c1451d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fa03ba058f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fa03ba2da20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03ba04170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03baf50c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa03b9ec200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa03b9e8570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa03b9e73f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa03b9ec950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03b9e7a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03baf50c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fa03b9afd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fa03b9b96b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fa03b9aeb10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fa03b9b9020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03b9ad2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03baf9670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03b9ac170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03baf50c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fa03b9acb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fa03b95e410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fa03b980db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fa03b952800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa03b94e580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fa03b94e580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fa03c1451d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03b9391c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03c5471a0"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa03b88d3f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa03c5851d0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fa03b88a1d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fa03c583020"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa03b88a7e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa03c582c20"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa03b887a20"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa03baf4550"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03b87f890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03c5675b0"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fa03b88b5c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fa03c5843f0"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03b888b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03c577350"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa03b889470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa03c583650"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa03b883af0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa03baf0660"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa03ae98e60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa03ae8a7f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa03ae96aa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa03b88a7e0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa03ae95720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa03b889470"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa03b7e5020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fa03ae94da0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fa03ae94da0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03b888b20"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa03ae895f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa03b84f930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa03ae88270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa03b889470"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fa03b84f930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fa03b7ffdf0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fa03b7fd400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fa03b88d3f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa03b7fc060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa03b889470"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa03b7fb720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa03b88a7e0"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fa03b7fa480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fa03b7fac60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fa03b7db020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fa03b88a7e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fa03b7dbc30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fa03b889470"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="7:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03c641530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.TimerDormir" loc="44(SlaveAppC.TimerDormir):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.TimerComienzaDormir" loc="44(SlaveAppC.TimerComienzaDormir):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd45640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa03cd459b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd45640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa03cd459b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fa03cb89810" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fa03cb89bc0" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fa03cb88020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fa03cb883d0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fa03cb88740" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fa03c854930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fa03c854cd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fa03c8530d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fa03c853450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fa03c8537d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fa03c853b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fa03c852020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fa03c8523b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fa03c852780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fa03c816c80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fa03c8130d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fa03c72ecb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fa03c72ecb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fa03c6eea40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fa03c6eea40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fa03c6d8570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fa03c6d8570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fa03c6d8d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fa03c6d8d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fa03c6d7160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fa03c6d7160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fa03c6d7940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fa03c6d7940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fa03c6d7d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fa03c6d6540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fa03c6d6540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fa03c6b76d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fa03c6b76d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fa03c6b4020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fa03c6b4020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fa03c6b4410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fa03c6b4410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fa03c6b4bf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fa03c6b4bf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fa03c6b3020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03c678cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03c678cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03c641530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03c641530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fa03c641880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03c634980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03c634980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fa03c634cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03c5bf550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03c5bf550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fa03bf26020" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fa03bf182f0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fa03beff9f0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03bcb5020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03bcb5020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa03bcb57b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03bcb57b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fa03b877660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fa03b86c360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fa03b8630d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fa03b84bc80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fa03b7e1330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fa03cd38320" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cd38320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cd386a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fa03cd3ce50" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fa03cd3ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa03cd3b210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03cd3a280" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03cd3a280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cd3a600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fa03cd2c3a0" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fa03cd2c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fa03cd364d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fa03cd36660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fa03cd2ca40"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fa03cd2cbd0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fa03cd2cd60"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fa03cd36020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fa03cd361b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fa03cd36340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fa03cd2c720"/>
        <function-ref name="node_id" scoped="" ref="0x7fa03cd2c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fa03cd28900" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fa03cd28900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cd28c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03cd2a4e0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03cd2a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cd2a860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fa03cd28220" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fa03cd28220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cd285a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fa03cd27020" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fa03cd27020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cd273a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fa03cd2ab50" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fa03cd2ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fa03cd29ca0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fa03cd29e30"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fa03cd29340"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fa03cd294d0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fa03cd29660"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fa03cd297f0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fa03cd29980"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fa03cd29b10"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fa03cd29020"/>
        <function-ref name="node_id" scoped="" ref="0x7fa03cd291b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03cd35a10" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03cd35a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cd35d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fa03cd2bbe0" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fa03cd2bbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03ccf8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fa03ccee2c0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fa03ccee2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fa03ccf41b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fa03ccee7d0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fa03ccee960"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fa03cceeaf0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fa03ccee640"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fa03cceec80"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fa03cceee10"/>
        <function-ref name="initClocks" scoped="" ref="0x7fa03ccf4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03ccf8b60" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03ccf8b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03ccf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fa03ccdd020" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fa03ccdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fa03ccdc020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fa03ccdd530"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fa03ccdd6c0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fa03ccdd850"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fa03ccdd3a0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fa03ccdd9e0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fa03ccddb70"/>
        <function-ref name="initClocks" scoped="" ref="0x7fa03ccddd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fa03ccdc320" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa03ccdc320"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fa03ccdc6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03ccde820" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03ccde820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03ccdeba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fa03ce5fc80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fa03ce5fc80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fa03d03a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fa03cfbc9a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fa03cfbc9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fa03cfbcd20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fa03d0d7020"/>
        <function-ref name="sleep" scoped="" ref="0x7fa03d0d71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fa03cefd3d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fa03cefd3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fa03cefd750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fa03cca9240" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fa03cca9240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fa03cca81b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fa03cca9750"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fa03cca98e0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fa03cca9a70"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fa03cca95c0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fa03cca9c00"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fa03cca9d90"/>
        <function-ref name="initClocks" scoped="" ref="0x7fa03cca8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fa03cc9b3a0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fa03cc9b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cc9b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fa03cd37aa0" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fa03cd37aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa03cd37e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fa03cc9cb60" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fa03cc9cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cc9b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fa03cc9c140" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fa03cc9c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cc9c4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fa03cc9c650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fa03cc9c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fa03d1d7940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fa03d1d7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03d1d7cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03d1d7e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fa03d1e41e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fa03d1e41e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03d1e4560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fa03d1e46f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fa03d1e4880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fa03cd88040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fa03cd88040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03cd883c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03cd88550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fa03cd83490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fa03cd83490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fa03cd83810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fa03cd839a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fa03cd83b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fa03cd89140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fa03cd89140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cd894c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fa03cd89650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fa03cd897e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fa03cc859a0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03cc859a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03cc85d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03cc90020"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03cc901b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03cc90340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03cc904d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc90660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03cc907f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03cc90e30"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc90980"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03cc90b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03cc90ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fa03cc7ab50" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fa03cc7ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc80020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc801b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc80340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc804d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc80660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc807f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc80980"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc80b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03cc82020" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03cc82020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cc823a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fa03cc80e30" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fa03cc80e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc7f1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc7f370"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc7f500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc7f690"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc7f820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc7f9b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc7fb40"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc7fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fa03cc82620" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03cc82620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03cc829a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03cc82b30"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03cc82cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03cc82e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03cc81020"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc811b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03cc81340"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03cc81980"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc814d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03cc81660"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03cc817f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fa03cc79020" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fa03cc79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc793a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc79530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc796c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc79850"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc799e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc79b70"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc79d00"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc78020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fa03cc83590" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fa03cc83590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc83910"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc83aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc83c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc83dc0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc5c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc5c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc5c340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fa03cc5c830" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fa03cc5c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc5cbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc5cd40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc5b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc5b1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc5b340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc5b4d0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc5b660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc5b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fa03cc5add0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03cc5add0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03cc59180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fa03cc5bb50" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fa03cc5bb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc5a020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc5a1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc5a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc5a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc5a660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc5a7f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc5a980"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc5ab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fa03cc3fd50" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fa03cc3fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc3e100"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc3e290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc3e420"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc3c1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc3e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc3e8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc3ea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc3ebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc3ed80"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc3d020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc3d1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc3d340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc3d4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc3d760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc3d8f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc3da80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc3dc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc3e5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc3dda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc3c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fa03cc26e50" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fa03cc26e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc25210"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc253a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc25530"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc23340"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc25850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc259e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc25b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc25d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc24020"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc241b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc24340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc244d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc24660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc248f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc24a80"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc24c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc24da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc256c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc23020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc231b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fa03cb9b3d0" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fa03cb9b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb9b750"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb9b8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb9ba70"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb997f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb9bd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb9a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb9a1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb9a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb9a4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb9a660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb9a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb9a980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb9ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb9ada0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb99020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb991b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb99340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb9bc00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb994d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb99660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fa03cba03e0" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fa03cba03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cba0760"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cba08f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cba0a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb9e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cba0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb9f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb9f1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb9f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb9f4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb9f660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb9f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb9f980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb9fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb9fda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb9e020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb9e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb9e340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cba0c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb9e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb9e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fa03cbc93f0" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fa03cbc93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbc9770"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbc9900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbc9a90"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbc77f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbc9db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbc8020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbc81b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbc8340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbc84d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbc8660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbc87f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbc8980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbc8b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbc8da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbc7020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbc71b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbc7340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbc9c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbc74d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbc7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fa03cc21e50" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fa03cc21e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc20210"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc203a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc20530"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc1e340"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc20850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc209e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc20b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc20d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc1f020"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc1f1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc1f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc1f4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc1f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc1f8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc1fa80"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc1fc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc1fda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc206c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc1e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc1e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fa03cc06020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fa03cc06020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc063a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc06530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc066c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc044d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc069e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc06b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc06d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc05020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc051b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc05340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc054d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc05660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc057f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc05a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc05c10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc05da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc04020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc06850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc041b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc04340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fa03cbed020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fa03cbed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbed3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbed530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbed6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbeb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbed9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbedb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbedd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbec1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbec340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbec4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbec660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbec7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbeca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbecc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbecda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbeb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbed850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbeb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbeb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fa03cbd8020" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fa03cbd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbd83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbd8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbd86c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbd64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbd89e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbd8b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbd8d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbd7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbd71b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbd7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbd74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbd7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbd77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbd7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbd7c10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbd7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbd6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbd8850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbd61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbd6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fa03cbc43f0" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fa03cbc43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbc4770"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbc4900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbc4a90"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbc27f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbc4db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbc3020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbc31b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbc3340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbc34d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbc3660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbc37f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbc3980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbc3b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbc3da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbc2020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbc21b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbc2340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbc4c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbc24d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbc2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fa03cbb03e0" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fa03cbb03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbb0760"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbb08f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbb0a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbae7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbb0da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbaf020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbaf1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbaf340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbaf4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbaf660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbaf7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbaf980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbafb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbafda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbae020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbae1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbae340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbb0c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbae4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fa03cb913f0" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fa03cb913f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb91770"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb91900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb91a90"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb8f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb91db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb90020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb901b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb90340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb904d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb90660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb907f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb90980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb90b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb90da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb8f020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb8f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb8f340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb91c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb8f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb8f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fa03cc37580" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fa03cc37580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc37900"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc37a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc37c20"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc35980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc36020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc361b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc36340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc364d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc36660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc367f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc36980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc36b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc36ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc35020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc351b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc35340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc354d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc37db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc35660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc357f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fa03cbc2bc0" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fa03cbc2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbc1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbc11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbc1340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbbf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbc1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbc17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbc1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbc1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbc1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbc1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbc0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbc01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbc0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbc05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbc0760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbc08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbc0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbc14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbc0c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbc0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fa03cc32580" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fa03cc32580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc32900"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc32a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc32c20"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc30980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc31020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc311b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc31340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc314d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc31660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc317f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc31980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc31b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc31ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc30020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc301b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc30340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc304d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc32db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc30660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc307f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fa03cc18710" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fa03cc18710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc18a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc18c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc18db0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc16a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc171b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc17340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc174d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc17660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc177f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc17980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc17b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc17ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc17e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc16120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc162b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc16440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc165d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc17020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc16760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fa03cbff8a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fa03cbff8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbffc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbffdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbfe020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbfdc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbfe340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbfe4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbfe660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbfe7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbfe980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbfeb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbfeca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbfee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbfd020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbfd2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbfd440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbfd5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbfd760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbfe1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbfd8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbfda80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fa03cbe68a0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fa03cbe68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbe6c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbe6db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbe5020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbe4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbe5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbe54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbe5660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbe57f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbe5980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbe5b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbe5ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbe5e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbe4020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbe42b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbe4440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbe45d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbe4760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbe51b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbe48f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbe4a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fa03cbd18a0" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fa03cbd18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbd1c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbd1db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbd0020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbcfc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbd0340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbd04d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbd0660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbd07f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbd0980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbd0b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbd0ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbd0e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbcf020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbcf2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbcf440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbcf5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbcf760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbd01b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbcf8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbcfa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fa03cc44d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fa03cc44d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc43100"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc43290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc43420"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc411b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc43740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc438d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc43a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc43bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc43d80"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc42020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc421b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc42340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc424d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc42760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc428f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc42a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc42c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc435b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc42da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc41020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fa03cc2bd50" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fa03cc2bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc2a210"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc2a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc2a530"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc28340"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc2a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc2a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc2ab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc2ad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc29020"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc291b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc29340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc294d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc29660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc298f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc29a80"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc29c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc29da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc2a6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc28020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc281b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fa03cc11e50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fa03cc11e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc10210"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc103a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc10530"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc0e340"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc10850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc109e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc10b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc10d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc0f020"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc0f1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc0f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc0f4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc0f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc0f8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc0fa80"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc0fc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc0fda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc106c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc0e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc0e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fa03cbccbc0" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fa03cbccbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbcb020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbcb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbcb340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbc9020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbcb660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbcb7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbcb980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbcbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbcbca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbcbe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbca020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbca1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbca340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbca5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbca760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbca8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbcaa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbcb4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbcac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbcada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fa03cba9bb0" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fa03cba9bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cba7020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cba71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cba7340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cba5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cba7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cba77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cba7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cba7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cba7ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cba7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cba6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cba61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cba6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cba65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cba6760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cba68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cba6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cba74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cba6c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cba6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fa03cb94bb0" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fa03cb94bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb93020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb931b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb93340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb91020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb93660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb937f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb93980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb93b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb93ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb93e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb92020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb921b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb92340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb925d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb92760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb928f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb92a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb934d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb92c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb92da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fa03cbb8bc0" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fa03cbb8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbb7020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbb71b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbb7340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbb5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbb7660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbb77f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbb7980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbb7b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbb7ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbb7e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbb6020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbb61b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbb6340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbb65d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbb6760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbb68f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbb6a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbb74d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbb6c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbb6da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fa03cc0ce50" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fa03cc0ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc0b410"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc0b5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc0b730"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc094d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc0ba50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc0bbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc0bd70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc0a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc0a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc0a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc0a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc0a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc0a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc0aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc0ac10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc0ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc09020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc0b8c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc091b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc09340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fa03cbf2020" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fa03cbf2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbf23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbf2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbf26c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbf04d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbf29e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbf2b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbf2d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbf1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbf11b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbf1340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbf14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbf1660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbf17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbf1a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbf1c10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbf1da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbf0020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbf2850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbf01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbf0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fa03cbdd020" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fa03cbdd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbdd3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbdd530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbdd6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbdb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbdd9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbddb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbddd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbdc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbdc1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbdc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbdc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbdc660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbdc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbdca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbdcc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbdcda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbdb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbdd850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbdb1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbdb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fa03cba53e0" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fa03cba53e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cba5760"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cba58f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cba5a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cba37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cba5da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cba4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cba41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cba4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cba44d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cba4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cba47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cba4980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cba4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cba4da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cba3020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cba31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cba3340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cba5c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cba34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cba3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fa03cbbf3e0" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fa03cbbf3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbbf760"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbbf8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbbfa80"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbbd7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbbfda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbbe020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbbe1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbbe340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbbe4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbbe660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbbe7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbbe980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbbeb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbbeda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbbd020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbbd1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbbd340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbbfc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbbd4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbbd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fa03cc3c580" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fa03cc3c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc3c900"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc3ca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc3cc20"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc3a980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc3b020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc3b1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc3b340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc3b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc3b660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc3b7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc3b980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc3bb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc3bca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc3a020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc3a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc3a340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc3a4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc3cdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc3a660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc3a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fa03cc23710" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fa03cc23710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc23a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc23c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc23db0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc21a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc221b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc22340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc224d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc22660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc227f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc22980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc22b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc22ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc22e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc21120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc212b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc21440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc215d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc22020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc21760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc218f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fa03cbe2020" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fa03cbe2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbe23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbe2530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbe26c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbe04d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbe29e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbe2b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbe2d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbe1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbe11b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbe1340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbe14d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbe1660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbe17f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbe1a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbe1c10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbe1da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbe0020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbe2850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbe01b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbe0340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fa03cc1e710" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fa03cc1e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc1ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc1ec20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc1edb0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc1ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc1c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc1c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc1c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc1c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc1c7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc1c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc1cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc1cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc1ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc1b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc1b2b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc1b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc1b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc1c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc1b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc1b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fa03cc048a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fa03cc048a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc04c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc04db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc03020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc02c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc03340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc034d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc03660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc037f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc03980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc03b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc03ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc03e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc02020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc022b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc02440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc025d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc02760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc031b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc028f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc02a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fa03cbeb8a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fa03cbeb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbebc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbebdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbea020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbe9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbea340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbea4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbea660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbea7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbea980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbeab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbeaca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbeae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbe9020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbe92b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbe9440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbe95d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbe9760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbea1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbe98f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbe9a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fa03cbd68a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fa03cbd68a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbd6c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbd6db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbd5020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbd4c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbd5340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbd54d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbd5660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbd57f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbd5980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbd5b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbd5ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbd5e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbd4020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbd42b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbd4440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbd45d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbd4760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbd51b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbd48f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbd4a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fa03cbba3f0" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fa03cbba3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbba770"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbba900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbbaa90"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbb87f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbbadb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbb9020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbb91b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbb9340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbb94d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbb9660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbb97f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbb9980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbb9b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbb9da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbb8020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbb81b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbb8340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbbac20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbb84d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbb8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fa03cc47cb0" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fa03cc47cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc550a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc55230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc553c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc461b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc556e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc55870"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc55a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc55b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc55d20"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc54020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc541b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc54340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc544d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc54760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc548f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc54a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc54c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc55550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc54da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc46020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fa03cc30d50" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fa03cc30d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc2f100"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc2f290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc2f420"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc2d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc2f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc2f8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc2fa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc2fbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc2fd80"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc2e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc2e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc2e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc2e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc2e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc2e8f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc2ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc2ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc2f5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc2eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc2d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fa03cc16e50" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fa03cc16e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc15210"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc153a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc15530"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc13340"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc15850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc159e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc15b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc15d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc14020"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc141b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc14340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc144d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc14660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc148f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc14a80"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc14c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc14da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc156c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc13020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc131b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fa03cbfc020" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fa03cbfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbfc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbfc530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbfc6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbfa4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbfc9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbfcb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbfcd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbfb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbfb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbfb340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbfb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbfb660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbfb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbfba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbfbc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbfbda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbfa020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbfc850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbfa1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbfa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fa03cbb53f0" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fa03cbb53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbb5770"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbb5900"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbb5a90"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbb37f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbb5db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbb4020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbb41b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbb4340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbb44d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbb4660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbb47f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbb4980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbb4b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbb4da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbb3020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbb31b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbb3340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbb5c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbb34d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbb3660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fa03cbaebb0" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fa03cbaebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbad020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbad1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbad340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbab020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbad660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbad7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbad980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbadb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbadca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbade30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbac020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbac1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbac340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbac5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbac760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbac8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbaca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbad4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbacc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbacda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fa03cb9ebb0" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fa03cb9ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb9d020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb9d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb9d340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb9b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb9d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb9d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb9d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb9db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb9dca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb9de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb9c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb9c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb9c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb9c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb9c760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb9c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb9ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb9d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb9cc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb9cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fa03cbf7020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fa03cbf7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbf73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbf7530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbf76c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbf54d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbf79e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbf7b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbf7d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbf6020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbf61b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbf6340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbf64d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbf6660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbf67f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbf6a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbf6c10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbf6da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbf5020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbf7850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbf51b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbf5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fa03cbb3bc0" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fa03cbb3bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbb2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbb21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbb2340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbb0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbb2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbb27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbb2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbb2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbb2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbb2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbb1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbb11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbb1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbb15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbb1760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbb18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbb1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbb24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbb1c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbb1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fa03cc41580" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fa03cc41580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc41900"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc41a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc41c20"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc3f980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc40020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc401b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc40340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc404d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc40660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc407f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc40980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc40b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc40ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc3f020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc3f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc3f340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc3f4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc41db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc3f660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc3f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fa03cc28710" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fa03cc28710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc28a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc28c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc28db0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc26a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc271b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc27340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc274d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc27660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc277f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc27980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc27b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc27ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc27e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc26120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc262b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc26440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc265d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc27020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc26760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc268f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fa03cc0e710" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fa03cc0e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc0ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc0ec20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc0edb0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc0ca80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc0d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc0d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc0d4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc0d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc0d7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc0d980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc0db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc0dca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc0de30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc0c120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc0c2b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc0c440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc0c5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc0d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc0c760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc0c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fa03cbbdbc0" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fa03cbbdbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbbc020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbbc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbbc340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbba020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbbc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbbc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbbc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbbcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbbcca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbbce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbbb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbbb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbbb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbbb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbbb760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbbb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbbba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbbc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbbbc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbbbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fa03cba3bb0" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fa03cba3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cba2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cba21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cba2340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cba0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cba2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cba27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cba2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cba2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cba2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cba2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cba1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cba11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cba1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cba15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cba1760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cba18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cba1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cba24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cba1c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cba1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fa03cc098a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fa03cc098a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc09c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc09db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc08020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc07c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc08340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc084d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc08660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc087f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc08980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc08b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc08ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc08e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc07020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc072b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc07440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc075d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc07760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc081b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc078f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc07a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fa03cbf08a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fa03cbf08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbf0c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbf0db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbef020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbeec10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbef340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbef4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbef660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbef7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbef980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbefb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbefca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbefe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbee020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbee2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbee440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbee5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbee760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbef1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbee8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbeea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fa03cbdb8a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fa03cbdb8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbdbc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbdbdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbda020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbd9c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbda340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbda4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbda660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbda7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbda980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbdab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbdaca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbdae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbd9020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbd92b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbd9440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbd95d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbd9760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbda1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbd98f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbd9a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fa03cc3ad50" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fa03cc3ad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc39100"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc39290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc39420"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc371b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc39740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc398d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc39a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc39bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc39d80"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc38020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc381b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc38340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc384d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc38760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc388f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc38a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc38c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc395b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc38da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc37020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fa03cbe08a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fa03cbe08a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbe0c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbe0db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbdf020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbdec10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbdf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbdf4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbdf660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbdf7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbdf980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbdfb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbdfca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbdfe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbde020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbde2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbde440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbde5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbde760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbdf1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbde8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbdea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fa03cc35d50" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fa03cc35d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc34100"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc34290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc34420"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc321b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc34740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc348d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc34a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc34bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc34d80"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc33020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc331b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc33340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc334d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc33760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc338f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc33a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc33c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc345b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc33da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fa03cc1be50" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fa03cc1be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc1a210"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc1a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc1a530"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc18340"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc1a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc1a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc1ab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc1ad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc19020"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc191b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc19340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc194d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc19660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc198f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc19a80"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc19c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc19da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc1a6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc18020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fa03cc01020" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fa03cc01020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc013a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc01530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc016c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbff4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc019e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc01b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc01d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc001b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc00340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc004d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc00660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc007f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc00a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc00c10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc00da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbff020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc01850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbff1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbff340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fa03cbe8020" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fa03cbe8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbe83a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbe8530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbe86c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbe64d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbe89e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbe8b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbe8d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbe7020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbe71b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbe7340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbe74d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbe7660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbe77f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbe7a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbe7c10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbe7da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbe6020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbe8850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbe61b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbe6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fa03cbd3020" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fa03cbd3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbd33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbd3530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbd36c0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbd14d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbd39e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbd3b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbd3d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbd2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbd21b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbd2340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbd24d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbd2660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbd27f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbd2a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbd2c10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbd2da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbd1020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbd3850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbd11b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbd1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fa03cc46580" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fa03cc46580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc46900"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc46a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc46c20"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc44980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc45020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc451b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc45340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc454d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc45660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc457f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc45980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc45b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc45ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc44020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc441b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc44340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc444d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc46db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc44660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc447f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fa03cc2d580" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fa03cc2d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc2d900"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc2da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc2dc20"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc2b980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc2c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc2c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc2c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc2c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc2c660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc2c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc2c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc2cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc2cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc2b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc2b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc2b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc2b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc2ddb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc2b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc2b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fa03cc13710" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fa03cc13710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cc13a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cc13c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cc13db0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cc11a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cc121b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cc12340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cc124d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cc12660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cc127f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cc12980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cc12b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cc12ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cc12e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cc11120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cc112b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cc11440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cc115d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cc12020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cc11760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cc118f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fa03cbfa8a0" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fa03cbfa8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbfac20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbfadb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbf9020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbf8c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbf9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbf94d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbf9660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbf97f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbf9980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbf9b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbf9ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbf9e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbf8020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbf82b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbf8440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbf85d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbf8760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbf91b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbf88f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbf8a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fa03cbab3e0" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fa03cbab3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbab760"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbab8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbaba80"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cba97f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbabda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbaa020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbaa1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbaa340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbaa4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbaa660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbaa7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbaa980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbaab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbaada0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cba9020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cba91b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cba9340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbabc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cba94d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cba9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fa03cb99ba0" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fa03cb99ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb98020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb981b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb98340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb96020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb98660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb987f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb98980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb98b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb98ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb98e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb97020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb971b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb97340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb975d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb97760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb978f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb97a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb984d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb97c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb97da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fa03cbc7bc0" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fa03cbc7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbc6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbc61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbc6340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbc4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbc6660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbc67f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbc6980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbc6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbc6ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbc6e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbc5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbc51b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbc5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbc55d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbc5760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbc58f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbc5a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbc64d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbc5c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbc5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fa03cbf58a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fa03cbf58a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbf5c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbf5db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbf4020"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbf3c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbf4340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbf44d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbf4660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbf47f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbf4980"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbf4b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbf4ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbf4e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbf3020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbf32b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbf3440"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbf35d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbf3760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbf41b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbf38f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbf3a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fa03cb963e0" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fa03cb963e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb96760"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb968f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb96a80"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb947f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb96da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb95020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb951b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb95340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb954d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb95660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb957f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb95980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb95b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb95da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb94020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb941b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb94340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb96c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb944d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb94660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fa03cb8fbc0" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fa03cb8fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb8e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb8e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb8e340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb8c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb8e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb8e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb8e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb8eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb8eca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb8ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb8d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb8d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb8d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb8d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb8d760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb8d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb8da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb8e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb8dc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb8dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fa03cbce060" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fa03cbce060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cbce7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cbce970"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cbceb00"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cbcc7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cbcee20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cbcd020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cbcd1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cbcd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cbcd4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cbcd660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cbcd7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cbcd980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cbcdb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cbcdda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cbcc020"/>
        <function-ref name="set" scoped="" ref="0x7fa03cbcc1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cbcc340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cbcec90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cbcc4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cbcc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb5b540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb5b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb5b8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb5ba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb5bbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb59980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb5a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb5a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb5a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb5a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb5a660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb5a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb5a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb5ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb5aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb59020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb591b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb59340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb594d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb59660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb5bd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb597f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb56b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb56b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb55020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb551b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb55340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb53020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb55660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb557f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb55980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb55b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb55ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb55e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb54020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb541b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb54340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb545d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb54760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb548f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb54a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb54c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb554d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb54da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb50060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb50060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb503e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb50570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb50700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb4e4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb50a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb50bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb50d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb4f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb4f1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb4f340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb4f4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb4f660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb4f7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb4fa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb4fc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb4fda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb4e020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb4e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb50890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb4e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb4b540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb4b540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb4b8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb4ba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb4bbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb49980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb4a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb4a1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb4a340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb4a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb4a660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb4a7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb4a980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb4ab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb4aca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb49020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb491b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb49340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb494d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb49660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb4bd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb497f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb46b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb46b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb44020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb441b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb44340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb42020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb44660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb447f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb44980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb44b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb44ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb44e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb43020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb431b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb43340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb435d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb43760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb438f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb43a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb43c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb444d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb43da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb3f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb3f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb3f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb3f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb3f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb3d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb3fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb3fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb3fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb3e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb3e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb3e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb3e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb3e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb3e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb3ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb3ec10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb3eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb3d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb3d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb3f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb3d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb3a540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb3a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb3a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb3aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb3abe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb38980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb39020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb391b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb39340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb39660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb397f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb39980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb39b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb39ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb38020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb381b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb38340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb384d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb38660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb3ad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb387f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb35b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb35b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb34020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb341b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb34340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb32020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb34660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb347f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb34980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb34b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb34ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb34e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb33020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb331b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb33340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb335d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb33760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb338f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb33a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb33c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb344d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb33da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb2f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb2f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb2f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb2f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb2f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb2d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb2fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb2fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb2fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb2e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb2e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb2e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb2e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb2e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb2e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb2ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb2ec10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb2eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb2d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb2d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb2f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb2d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb2a540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb2a540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb2a8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb2aa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb2abe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb28980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb29020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb291b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb29340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb294d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb29660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb297f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb29980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb29b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb29ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb28020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb281b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb28340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb284d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb28660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb2ad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb287f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb25b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb25b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb24020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb241b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb24340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb22020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb24660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb247f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb24980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb24b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb24ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb24e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb23020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb231b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb23340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb235d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb23760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb238f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb23a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb23c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb244d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb23da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb1f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb1f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb1f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb1f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb1f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb1d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb1fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb1fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb1fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb1e020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb1e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb1e340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb1e4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb1e660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb1e7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb1ea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb1ec10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb1eda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb1d020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb1d1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb1f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb1d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb196d0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb196d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb19a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb19be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb19d70"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb17a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb181b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb18340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb184d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb18660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb187f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb18980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb18b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb18ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb18e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb17120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb172b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb17440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb175d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb17760"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb18020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb178f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb14b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb14b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb13020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb131b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb13340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb11020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb13660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb137f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb13980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb13b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb13ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb13e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb12020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb121b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb12340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb125d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb12760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb128f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb12a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb12c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb134d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb12da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb0e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb0e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb0e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb0e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb0e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb0c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb0ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb0ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb0ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb0d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb0d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb0d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb0d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb0d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb0d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb0da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb0dc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb0dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb0c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb0c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb0e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb0c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb09540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb09540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb098c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb09a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb09be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb07980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb08020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb081b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb08340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb084d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb08660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb087f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb08980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb08b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb08ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb07020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb071b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb07340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb074d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb07660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb09d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb077f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cb04b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cb04b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cb03020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cb031b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cb03340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cb01020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cb03660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cb037f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cb03980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cb03b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cb03ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cb03e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cb02020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cb021b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cb02340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cb025d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cb02760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cb028f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cb02a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cb02c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cb034d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cb02da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cafe060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cafe060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cafe3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cafe570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cafe700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cafc4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cafea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cafebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cafed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cafd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cafd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cafd340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cafd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cafd660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cafd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cafda80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cafdc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cafdda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cafc020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cafc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cafe890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cafc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03caf9540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03caf9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03caf98c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03caf9a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03caf9be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03caf7980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03caf8020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03caf81b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03caf8340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03caf84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03caf8660"/>
        <function-ref name="get" scoped="" ref="0x7fa03caf87f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03caf8980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03caf8b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03caf8ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03caf7020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03caf71b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03caf7340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03caf74d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03caf7660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03caf9d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03caf77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03caf4b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03caf4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03caf2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03caf21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03caf2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03caf0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03caf2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03caf27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03caf2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03caf2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03caf2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03caf2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03caf1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03caf11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03caf1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03caf15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03caf1760"/>
        <function-ref name="set" scoped="" ref="0x7fa03caf18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03caf1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03caf1c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03caf24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03caf1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03caed060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03caed060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03caed3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03caed570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03caed700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03caeb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03caeda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03caedbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03caedd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03caec020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03caec1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03caec340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03caec4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03caec660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03caec7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03caeca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03caecc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03caecda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03caeb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03caeb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03caed890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03caeb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cae8540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cae8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cae88c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cae8a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cae8be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cae6980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cae7020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cae71b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cae7340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cae74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cae7660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cae77f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cae7980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cae7b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cae7ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cae6020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cae61b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cae6340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cae64d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cae6660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cae8d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cae67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cae3b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cae3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cae2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cae21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cae2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cae0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cae2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cae27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cae2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cae2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cae2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cae2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cae1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cae11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cae1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cae15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cae1760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cae18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cae1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cae1c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cae24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cae1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cadd060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cadd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cadd3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cadd570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cadd700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cadb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cadda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03caddbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03caddd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cadc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cadc1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cadc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cadc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cadc660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cadc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cadca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cadcc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cadcda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cadb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cadb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cadd890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cadb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cad8740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cad8740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cad8ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cad8c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cad8de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cad6a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cad71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cad7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cad74d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cad7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cad77f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cad7980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cad7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cad7ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cad7e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cad6120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cad62b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cad6440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cad65d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cad6760"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cad7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cad68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cad3b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cad3b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cad2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cad21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cad2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cad0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cad2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cad27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cad2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cad2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cad2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cad2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cad1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cad11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cad1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cad15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cad1760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cad18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cad1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cad1c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cad24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cad1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cacd060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cacd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cacd3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cacd570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cacd700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cacb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cacda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cacdbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cacdd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cacc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cacc1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cacc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cacc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cacc660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cacc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cacca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03caccc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03caccda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cacb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cacb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cacd890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cacb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cac8540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cac8540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cac88c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cac8a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cac8be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cac5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cac6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cac61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cac6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cac64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cac6660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cac67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cac6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cac6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cac6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cac5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cac51b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cac5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cac54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cac5660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cac8d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cac57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cac2b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cac2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cac1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cac11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cac1340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cabf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cac1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cac17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cac1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cac1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cac1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cac1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cac0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cac01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cac0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cac05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cac0760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cac08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cac0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cac0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cac14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cac0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cabc060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cabc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cabc3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cabc570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cabc700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03caba4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cabca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cabcbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cabcd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cabb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cabb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cabb340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cabb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cabb660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cabb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cabba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cabbc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03cabbda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03caba020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03caba1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cabc890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03caba340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cab7540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cab7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cab78c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cab7a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cab7be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03cab5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cab6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cab61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cab6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cab64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cab6660"/>
        <function-ref name="get" scoped="" ref="0x7fa03cab67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cab6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cab6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cab6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cab5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cab51b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03cab5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cab54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cab5660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cab7d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cab57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03cab2b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03cab2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03cab1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03cab11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03cab1340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03caaf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03cab1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03cab17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03cab1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03cab1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03cab1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03cab1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03cab0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03cab01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03cab0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03cab05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03cab0760"/>
        <function-ref name="set" scoped="" ref="0x7fa03cab08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03cab0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03cab0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03cab14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03cab0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03caac060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03caac060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03caac3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03caac570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03caac700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03caaa4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03caaca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03caacbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03caacd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03caab020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03caab1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03caab340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03caab4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03caab660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03caab7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03caaba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03caabc10"/>
        <function-ref name="set" scoped="" ref="0x7fa03caabda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03caaa020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03caaa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03caac890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03caaa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03caa7540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03caa7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03caa78c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03caa7a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03caa7be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03caa5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03caa6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03caa61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03caa6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03caa64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03caa6660"/>
        <function-ref name="get" scoped="" ref="0x7fa03caa67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03caa6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03caa6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03caa6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03caa5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03caa51b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03caa5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03caa54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03caa5660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03caa7d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03caa57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03caa2b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03caa2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03caa1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03caa11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03caa1340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca9f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03caa1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03caa17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03caa1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03caa1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03caa1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03caa1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03caa0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03caa01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03caa0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03caa05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03caa0760"/>
        <function-ref name="set" scoped="" ref="0x7fa03caa08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03caa0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03caa0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03caa14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03caa0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca9b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca9b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca9b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca9b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca9b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca994d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca9ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca9bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca9bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca9a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca9a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca9a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca9a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca9a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca9a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca9aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca9ac10"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca9ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca99020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca991b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca9b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca99340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca96540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca96540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca968c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca96a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca96be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca94980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca95020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca951b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca95340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca954d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca95660"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca957f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca95980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca95b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca95ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca94020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca941b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca94340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca944d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca94660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca96d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca947f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca91b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca91b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca90020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca901b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca90340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca8e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca90660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca907f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca90980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca90b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca90ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca90e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca8f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca8f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca8f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca8f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca8f760"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca8f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca8fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca8fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca904d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca8fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca8b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca8b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca8b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca8b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca8b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca894d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca8ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca8bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca8bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca8a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca8a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca8a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca8a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca8a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca8a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca8aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca8ac10"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca8ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca89020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca891b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca8b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca86540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca86540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca868c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca86a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca86be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca84980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca85020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca851b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca85340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca854d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca85660"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca857f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca85980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca85b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca85ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca84020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca841b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca84340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca844d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca84660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca86d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca847f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca81b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca81b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca80020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca801b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca80340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca7e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca80660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca807f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca80980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca80b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca80ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca80e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca7f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca7f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca7f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca7f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca7f760"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca7f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca7fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca7fc10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca804d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca7fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca7b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca7b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca7b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca7b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca7b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca794d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca7ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca7bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca7bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca7a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca7a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca7a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca7a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca7a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca7a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca7aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca7ac10"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca7ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca79020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca791b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca7b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca79340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca76540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca76540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca768c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca76a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca76be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca73980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca74020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca741b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca74340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca744d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca74660"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca747f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca74980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca74b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca74ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca73020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca731b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca73340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca734d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca73660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca76d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca70b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca70b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca6f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca6f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca6f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca6d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca6f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca6f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca6f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca6fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca6fca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca6fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca6e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca6e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca6e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca6e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca6e760"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca6e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca6ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca6ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca6f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca6eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca6a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca6a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca6a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca6a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca6a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca684d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca6aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca6abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca6ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca69020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca691b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca69340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca694d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca69660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca697f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca69a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca69c10"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca69da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca68020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca681b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca6a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca68340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca65540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca65540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca658c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca65a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca65be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca63980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca64020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca641b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca64340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca644d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca64660"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca647f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca64980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca64b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca64ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca63020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca631b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca63340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca634d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca63660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca65d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca637f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca60b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca60b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca5f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca5f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca5f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca5d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca5f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca5f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca5f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca5fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca5fca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca5fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca5e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca5e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca5e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca5e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca5e760"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca5e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca5ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca5ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca5f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca5eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fa03ca5a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fa03ca5a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03ca5a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03ca5a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03ca5a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03ca584d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03ca5aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03ca5abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03ca5ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03ca59020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03ca591b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03ca59340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03ca594d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03ca59660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03ca597f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03ca59a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03ca59c10"/>
        <function-ref name="set" scoped="" ref="0x7fa03ca59da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03ca58020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03ca581b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03ca5a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03ca58340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03c9cbc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c9cbc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c9ca020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c9ca1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c9ca340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c9c8020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c9ca660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c9ca7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c9ca980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c9cab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c9caca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c9cae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c9c9020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c9c91b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c9c9340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c9c95d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c9c9760"/>
        <function-ref name="set" scoped="" ref="0x7fa03c9c98f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c9c9a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c9c9c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c9ca4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c9c9da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03c9dc9e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c9dc9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c9dcd60"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c9cb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c9cb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c9cb340"/>
        <function-ref name="get" scoped="" ref="0x7fa03c9cb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c9cb660"/>
        <function-ref name="set" scoped="" ref="0x7fa03c9cb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c9cb980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03c9c42f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c9c42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c9c4670"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c9c4800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c9c4990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c9c2660"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c9c4cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c9c4e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c9c3020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c9c31b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c9c3340"/>
        <function-ref name="get" scoped="" ref="0x7fa03c9c34d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c9c3660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c9c37f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c9c3980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c9c3c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c9c3da0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c9c2020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c9c21b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c9c2340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c9c4b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c9c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03c9c6020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c9c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c9c63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c9c6530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c9c66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c9c6850"/>
        <function-ref name="get" scoped="" ref="0x7fa03c9c69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c9c6b70"/>
        <function-ref name="set" scoped="" ref="0x7fa03c9c6d00"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c9c4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03c9bf7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c9bf7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c9bfb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c9bfcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c9bfe40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c9bda80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c9be1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c9be340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c9be4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c9be660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c9be7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c9be980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c9beb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c9beca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c9bee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c9bd120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c9bd2b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c9bd440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c9bd5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c9bd760"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c9be020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c9bd8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03c9c0630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c9c0630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c9c09b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c9c0b40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c9c0cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c9c0e60"/>
        <function-ref name="get" scoped="" ref="0x7fa03c9bf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c9bf1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c9bf340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c9bf4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa03c9258d0" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa03c9258d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa03c925c50"/>
        <function-ref name="source" scoped="" ref="0x7fa03c925de0"/>
        <function-ref name="address" scoped="" ref="0x7fa03c98c020"/>
        <function-ref name="destination" scoped="" ref="0x7fa03c98c1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa03c98c340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa03c98c4d0"/>
        <function-ref name="type" scoped="" ref="0x7fa03c98c660"/>
        <function-ref name="setType" scoped="" ref="0x7fa03c98c7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa03c98c980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa03c98cb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa03c98cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7fa03c912a50" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7fa03c912a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa03c912dd0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa03c922020"/>
        <function-ref name="start" scoped="" ref="0x7fa03c9221b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c922340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fa03c9b1480" loc="8:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fa03c9b1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fa03c9b1800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa03c935910" loc="15:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa03c935910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c935c90"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03c935e20"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03c98d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03c98d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03c98d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fa03c91a8f0" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa03c91a8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03c91ac70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03c91ae00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03c923020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03c9231b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03c923340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa03c90ac20" loc="20:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03c90ac20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa03c91b020"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa03c91b1b0"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa03c91b340"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa03c91b4d0"/>
        <function-ref name="getPower" scoped="" ref="0x7fa03c91b660"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa03c91b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerDormir" ref="0x7fa03c999860" loc="13:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerDormir" scoped="" ref="0x7fa03c999860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c995cf0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c997300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c9950d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c997c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c994660"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c9941e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c997780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c998480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c9956e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c998950"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c998e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fa03c915180" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03c915180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03c915500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa03c9b1ac0" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03c9b1ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03c9b1e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03c9ae020"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03c9ae1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03c9ae340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03c9ae4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c9ae660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03c9ae7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03c9aee30"/>
        <function-ref name="set" scoped="" ref="0x7fa03c9ae980"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03c9aeb10"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03c9aeca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7fa03c9a2e50" loc="11:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7fa03c9a2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c99f390"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c9ab970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c9a1720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c9a12a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c99fc90"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c99f810"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c9abdf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c9aca80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c9a1d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c9ab020"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c9ab4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7fa03c99e360" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7fa03c99e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c99a870"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c99de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c99cc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c99c780"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c9991e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c99acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c99c300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c99d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c99a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c99d4f0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c99d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerComienzaDormir" ref="0x7fa03c994d30" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerComienzaDormir" scoped="" ref="0x7fa03c994d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c98f220"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c9927c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c990590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c990110"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c98fb20"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c98f6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c992c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c993940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c990ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c993e10"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c992340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa03c8d8980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c8d8980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c5abe80"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c5ac4a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c5ab260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c5acda0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c5aa7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c5aa320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c5ac920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c5ad5a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c5ab870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c5ada70"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c5ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fa03c8cfb60" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fa03c8cfb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c8ca110"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c8cc5f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c8cb4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c8cb020"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c8caa10"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c8ca590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c8cca70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c8ce790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c8cbab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c8cec60"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c8cc170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fa03c8c4700" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fa03c8c4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c8c0c40"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c8c21e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c8c0020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c8c2ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c8bf590"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c8bf110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c8c2660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c8c3390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c8c0630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c8c3860"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c8c3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa03c8bd1a0" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fa03c8bd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c8bddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03c8c88c0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03c8c88c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03c8c8c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa03c67d870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa03c67d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c679090"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c67b090"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03c67ba10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c67b550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03c679550"/>
        <function-ref name="start" scoped="" ref="0x7fa03c67c6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c67cbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03c67d020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03c67d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03c67d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa03b4034f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa03b4034f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b401db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b402da0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03b401760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b4012a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03b4002a0"/>
        <function-ref name="start" scoped="" ref="0x7fa03b4023d0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b4028e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03b404b10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03b404b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03b403020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fa03b3ebda0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03b3ebda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03b3ea180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03b3ea310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03b3ea4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03b3ea630"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b3ea7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fa03b3ed340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03b3ed340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b3ed6c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03b3ed850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03b3ed9e0"/>
        <function-ref name="get" scoped="" ref="0x7fa03b3edb70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03b3edd00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03b3ec020"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03b3ec1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03b3ec340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03b3ec4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03b3ec660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03b3ec7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fa03b3eca80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03b3eca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03b3ece00"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03b3eb020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03b3eb1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03b3eb340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03b3eb4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03b3eb660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03b3eb7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03b3eb980"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03b3ebb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fa03c8851d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03c8851d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c885550"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c8856e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c885870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c885a00"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c885b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fa03c88a990" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c88a990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c88ad10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c889020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c8891b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c889340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c8894d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c889660"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c8897f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c889980"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c889b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c889ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c889e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fa03c887720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c887720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c887aa0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c887c30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c887dc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c886020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c8861b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c886340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c8864d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c886660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c8867f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fa03c874730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fa03c874730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c874ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c874c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c874dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c873020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c8731b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c873340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c8734d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c873660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c8737f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fa03c86f280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fa03c86f280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c86f600"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c86f790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c86f920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c86fab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c86fc40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c86fdd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c86e020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c86e1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c86e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fa03c875700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fa03c875700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c875a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c875c10"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c875da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c874020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c8741b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c874340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fa03c863020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fa03c863020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c8633a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c863530"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c8636c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c863850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c8639e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c863b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fa03c87b890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fa03c87b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c87bc10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c87bda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c875020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c8751b0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c875340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fa03c864160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fa03c864160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c8644e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c864670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c864800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c864990"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c864b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fa03c859ae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fa03c859ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c859e60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c858020"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c8581b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c858340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c8584d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c858660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fa03c862020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fa03c862020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c8623a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c862530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c8626c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c862850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c8629e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c862b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c862d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c861020"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c8611b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fa03c87f0c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fa03c87f0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c87f440"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c87f5d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c87f760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c87f8f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c87fa80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c87fc10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c87fda0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c87e020"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c87e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fa03c86aa20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fa03c86aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c86ada0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c869020"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c8691b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c869340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c8694d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c869660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fa03c86bbb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fa03c86bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c86a020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c86a1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c86a340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c86a4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c86a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fa03c86c730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fa03c86c730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c86cab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c86cc40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c86cdd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c86b020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c86b1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c86b340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c86b4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c86b660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c86b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fa03c872a20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fa03c872a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c872da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c871020"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c8711b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c871340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c8714d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c871660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fa03c860570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fa03c860570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c8608f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c860a80"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c860c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c860da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c85f020"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c85f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fa03c869a50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fa03c869a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c869dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c868020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c8681b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c868340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c8684d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c868660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c8687f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c868980"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c868b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fa03c873bb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fa03c873bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c872020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c8721b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c872340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c8724d0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c872660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fa03c884830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fa03c884830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c884bb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c884d40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c881020"/>
        <function-ref name="get" scoped="" ref="0x7fa03c8811b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c881340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c8814d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c881660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c8817f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c881980"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c881b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c881ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fa03c861570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fa03c861570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c861af0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c861c80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c861e10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c860020"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c8601b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fa03c87c410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fa03c87c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c87c790"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c87c920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c87cab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c87cc40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c87cdd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c87b020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c87b1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c87b340"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c87b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fa03c85f5a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fa03c85f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c85f920"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c85fab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c85fc40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c85fdd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c85d020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c85d1b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c85d340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c85d4d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c85d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fa03c876410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fa03c876410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c876790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c876920"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c876ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c876c40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c876dd0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c87c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fa03c867da0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fa03c867da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c866180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c866310"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c8664a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c866630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c8667c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c866950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fa03c87e570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fa03c87e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c87e8f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c87ea80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c87ec10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c87eda0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c87d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fa03c867020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fa03c867020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c8673a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c867530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c8676c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c867850"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c8679e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fa03c85c890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fa03c85c890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c85cc10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c85cda0"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c85b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c85b1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c85b340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c85b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fa03c866d40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fa03c866d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c8650e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c865270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c865400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c865590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c865720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c8658b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c865a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c865bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c865d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fa03c8719e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fa03c8719e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c871d60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c870020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c8701b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c870340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c8704d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c870660"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c8707f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c870980"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c870b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c870ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c870e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fa03c86d700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fa03c86d700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c86da80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c86dc10"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c86dda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c86c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c86c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c86c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fa03c85da20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fa03c85da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c85dda0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c85c020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c85c1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c85c340"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c85c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fa03c85ad40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fa03c85ad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c8590e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c859270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c859400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c859590"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c859720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fa03c86e700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fa03c86e700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c86eb80"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c86ed10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c86d020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c86d1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c86d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fa03c85b8c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fa03c85b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c85bc40"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c85bdd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c85a020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c85a1b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c85a340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c85a4d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c85a660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c85a7f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c85a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fa03c820940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fa03c820940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c820cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fa03c8202f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fa03c8202f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c820670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fa03c81f020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fa03c81f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c81f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fa03c821bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c821bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c820020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa03c8223e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c8223e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c822760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c8228f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c822a80"/>
        <function-ref name="get" scoped="" ref="0x7fa03c822c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c822da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c821020"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c8211b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c821340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c8214d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c821660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c8217f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fa03c819750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fa03c819750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c819ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fa03c819100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fa03c819100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c819480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fa03c819da0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fa03c819da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c817180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fa03c81aa60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c81aa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c81ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa03c81b260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c81b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c81b5e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c81b770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c81b900"/>
        <function-ref name="get" scoped="" ref="0x7fa03c81ba90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c81bc20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c81bdb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c81a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c81a1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c81a340"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c81a4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c81a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c7ce7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c7ce7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7ceb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c7cecb0"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c7cee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7cd020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7cd1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c7cd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa03c8146d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa03c8146d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c814a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c814be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c814d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c7cf020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c7cf1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7cf340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c7cf4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c7cf660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c7cf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa03c7ccc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c7ccc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c7cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa03c7cfac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa03c7cfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7cfe40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c7ce020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c7ce1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c7ce340"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c7ce4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa03c7cd610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c7cd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c7cd990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c7cdb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7cdcb0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c7cde40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7cc020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7cc1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c7cc340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7cc4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c7cc660"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c7cc7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c7cc980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c7c6cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c7c6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7c50a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c7c5230"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c7c53c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7c5550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7c56e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c7c5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa03c7c8b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa03c7c8b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c7c7020"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c7c71b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7c7340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c7c74d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c7c7660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7c77f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c7c7980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c7c7b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c7c7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa03c7c32f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c7c32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c7c3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa03c7c6020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa03c7c6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7c63a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c7c6530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c7c66c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c7c6850"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c7c69e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa03c7c5b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c7c5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c7c4020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c7c41b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7c4340"/>
        <function-ref name="get" scoped="" ref="0x7fa03c7c44d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7c4660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7c47f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c7c4980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7c4b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c7c4ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c7c4e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c7c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c7be2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c7be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7be670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c7be800"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c7be990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7beb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7becb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c7bee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa03c7c0220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa03c7c0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c7c05a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c7c0730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7c08c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c7c0a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c7c0be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7c0d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c7bf020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c7bf1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c7bf340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa03c7bc7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c7bc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c7bcb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa03c7bf610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa03c7bf610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7bf990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c7bfb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c7bfcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c7bfe40"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c7be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa03c7bd160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c7bd160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c7bd4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c7bd670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7bd800"/>
        <function-ref name="get" scoped="" ref="0x7fa03c7bd990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7bdb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7bdcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c7bde40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7bc020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c7bc1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c7bc340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c7bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c7b67a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c7b67a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7b6b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c7b6cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c7b6e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7b5020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7b51b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c7b5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa03c7b96d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa03c7b96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c7b9a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c7b9be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7b9d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c7b7020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c7b71b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7b7340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c7b74d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c7b7660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c7b77f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa03c7b4c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c7b4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c7b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa03c7b7ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa03c7b7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7b7e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c7b6020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c7b61b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c7b6340"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c7b64d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa03c7b5610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c7b5610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c7b5990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c7b5b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7b5cb0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c7b5e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7b4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7b41b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c7b4340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7b44d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c7b4660"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c7b47f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c7b4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c7afcb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c7afcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7ae0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c7ae230"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c7ae3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7ae550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7ae6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c7ae870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa03c7b1b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa03c7b1b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c7b0020"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c7b01b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7b0340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c7b04d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c7b0660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7b07f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c7b0980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c7b0b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c7b0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa03c7ac2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c7ac2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c7ac670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa03c7af020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa03c7af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7af3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c7af530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c7af6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c7af850"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c7af9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa03c7aeb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c7aeb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c7ad020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c7ad1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7ad340"/>
        <function-ref name="get" scoped="" ref="0x7fa03c7ad4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7ad660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7ad7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c7ad980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7adb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c7adca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c7ade30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c7ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c7a62f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c7a62f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7a6670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c7a6800"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c7a6990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7a6b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7a6cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c7a6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa03c7a9220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa03c7a9220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c7a95a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c7a9730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7a98c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c7a9a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c7a9be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7a9d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c7a7020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c7a71b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c7a7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa03c7a47a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c7a47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c7a4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa03c7a7610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa03c7a7610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7a7990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c7a7b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c7a7cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c7a7e40"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c7a6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa03c7a5160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c7a5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c7a54e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c7a5670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7a5800"/>
        <function-ref name="get" scoped="" ref="0x7fa03c7a5990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7a5b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7a5cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c7a5e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7a4020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c7a41b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c7a4340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c7a44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c79f7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c79f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c79fb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c79fcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c79fe40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c79e020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c79e1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c79e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa03c7a16d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa03c7a16d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c7a1a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c7a1be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7a1d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c7a0020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c7a01b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7a0340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c7a04d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c7a0660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c7a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa03c79dc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c79dc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c79c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa03c7a0ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa03c7a0ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7a0e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c79f020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c79f1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c79f340"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c79f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa03c79e610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c79e610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c79e990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c79eb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c79ecb0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c79ee40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c79d020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c79d1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c79d340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c79d4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c79d660"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c79d7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c79d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c798cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c798cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7960a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c796230"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c7963c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c796550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7966e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c796870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa03c79ab30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa03c79ab30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c799020"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c7991b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c799340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c7994d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c799660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c7997f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c799980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c799b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c799ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa03c7942f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c7942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c794670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa03c798020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa03c798020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c7983a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c798530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c7986c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c798850"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c7989e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa03c796b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c796b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c795020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c7951b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c795340"/>
        <function-ref name="get" scoped="" ref="0x7fa03c7954d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c795660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7957f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c795980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c795b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c795ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c795e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c794020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c78f2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c78f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c78f670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c78f800"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c78f990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c78fb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c78fcb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c78fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa03c791220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa03c791220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c7915a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c791730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c7918c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c791a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c791be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c791d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c790020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c7901b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c790340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa03c78d7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c78d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c78db20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa03c790610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa03c790610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c790990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c790b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c790cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c790e40"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c78f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa03c78e160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c78e160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c78e4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c78e670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c78e800"/>
        <function-ref name="get" scoped="" ref="0x7fa03c78e990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c78eb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c78ecb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c78ee40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c78d020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c78d1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c78d340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c78d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c7877a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c7877a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c787b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c787cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c787e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c786020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7861b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c786340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fa03c78a6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fa03c78a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c78aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c78abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c78ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c789020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c7891b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c789340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c7894d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c789660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c7897f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fa03c785c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fa03c785c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c784020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fa03c789ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fa03c789ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c789e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03c787020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03c7871b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03c787340"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c7874d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fa03c786610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c786610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c786990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c786b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c786cb0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c786e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c785020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c7851b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c785340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c7854d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c785660"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c7857f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c785980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fa03c77fbc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fa03c77fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c77e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fa03c7803f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fa03c7803f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c780770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fa03c780b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fa03c780b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c77f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fa03c77f430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fa03c77f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c77f7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fa03b3e1a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03b3e1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03b3e1e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03b3e0020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03b3e01b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03b3e0340"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b3e04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa03b3e3190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03b3e3190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b3e3510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03b3e36a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03b3e3830"/>
        <function-ref name="get" scoped="" ref="0x7fa03b3e39c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03b3e3b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03b3e3ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03b3e3e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03b3e2030"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03b3e21c0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03b3e2350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03b3e24e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa03b3e7020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa03b3e7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b3e4870"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b3e6840"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03b3e4220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b3e6d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03b3e4d30"/>
        <function-ref name="start" scoped="" ref="0x7fa03b3e7e30"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b3e6380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03b3e8660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03b3e8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03b3e89e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fa03b3e2770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03b3e2770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03b3e2af0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03b3e2c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03b3e2e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03b3e1020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03b3e11b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03b3e1340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03b3e14d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03b3e1660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03b3e17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa03c6f68c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03c6f68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c6f9700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c6f50d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c6f9bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c6f5590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fa03c6f48e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fa03c6f48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c6f1780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c6f0150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c6f1c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c6f0610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa03c6dfc50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03c6dfc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c6dd020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c6dd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c6dd340"/>
        <function-ref name="get" scoped="" ref="0x7fa03c6dd4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c6dd660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c6dd7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c6dd980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c6ddb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c6ddca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03c6dde30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03c6dc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa03c6edb80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03c6edb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c6ec9b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c6df360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c6ece70"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c6df820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fa03c6bb0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fa03c6bb0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c6ba020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c6ba9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c6ba4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c6bae60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa03c6d9cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03c6d9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c6beb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c6bd550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c6bd090"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c6bda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa03b3fe890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa03b3fe890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b3fa0d0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b3fb0d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03b3fba50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b3fb590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03b3fa590"/>
        <function-ref name="start" scoped="" ref="0x7fa03b3fd6e0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b3fdbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fa03b3f70a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fa03b3f70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b3f4b30"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b3f59f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03b3f44e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b3f4020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03b3f3020"/>
        <function-ref name="start" scoped="" ref="0x7fa03b3f5020"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b3f5530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa03b3fac00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03b3fac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03b3f9a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03b3f84e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03b3f8020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03b3f89a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fa03c6479c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fa03c6479c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03c647d40"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03c646020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fa03c64b850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa03c64b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c647090"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c648090"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03c648a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c648550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03c647550"/>
        <function-ref name="start" scoped="" ref="0x7fa03c6496a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c649bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa03c6502f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c6502f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c64c870"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c64fe40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c64dc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c64d780"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c64b1e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c64ccf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c64d300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c64f020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c64c260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c64f4f0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c64f9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fa03c5c8020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fa03c5c8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c5c4630"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c5c7a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c5c5920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c5c54a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c5c3020"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c5c4ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c5c5020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c5c8c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c5c4020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c5c7110"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c5c75e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fa03c5c3450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fa03c5c3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fa03c5c37d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa03c5cf8e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c5cf8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c5ca020"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c5cd4c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c5cb300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c5cde00"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c5ca960"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c5ca4c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c5cd960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c5ce560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c5cb930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c5cea50"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c5cd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fa03b200100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fa03b200100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03b200480"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03b200610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fa03b2083d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fa03b2083d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b204870"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b206e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03b205c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03b205780"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03b2021e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03b204cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b205300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03b206020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03b204260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03b2064f0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b2069c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fa03b201a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fa03b201a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fa03b201dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7fa03b2025d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fa03b2025d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fa03b201660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fa03b2017f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fa03b202c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fa03b202e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fa03b201020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fa03b2011b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fa03b201340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fa03b2014d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fa03b202950"/>
        <function-ref name="node_id" scoped="" ref="0x7fa03b202ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa03b20fdb0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03b20fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b209470"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b20c9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03b20b7c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03b20b320"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03b209db0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03b209910"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b20ce50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03b20ea80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03b20bdf0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03b20c020"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b20c510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa03c5c0020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fa03c5c0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c5c0c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa03c5b6300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03c5b6300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c5b4150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c5b4ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c5b4610"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c5b3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa03c5a7260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c5a7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c5a46e0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c5a6ca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c5a5a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c5a55f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c5a2020"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c5a4b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c5a5170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c5a7e50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c5a40d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c5a6350"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c5a6820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa03c5a1b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerDormir"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c5a1b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c59c110"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c59f5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c59e4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c59e020"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c59ca10"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c59c590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c59fa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c5a0750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c59eab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c5a0c20"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c59f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa03c59a560" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerComienzaDormir"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03c59a560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c596a20"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c598020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03c598da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03c598920"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03c5954a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03c595020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c5984a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03c5991b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03c596410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03c599680"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c599b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa03c586080" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa03c586080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa03c586400"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa03c586590"/>
        <function-ref name="start" scoped="" ref="0x7fa03c586720"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c5868b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa03c56e7a0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03c56e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa03c56eb20"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa03c56ecb0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa03c56ee40"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa03c57e020"/>
        <function-ref name="setCca" scoped="" ref="0x7fa03c57e1b0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa03c57e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa03c55d640" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fa03c55d640"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa03c55dac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa03c582c20" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa03c582c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c580020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03c5801b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03c580340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03c5804d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03c580660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa03c5851d0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa03c5851d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03c585550"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03c5856e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03c585870"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03c585a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03c585b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa03c583020" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fa03c583020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03c5833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa03c580930" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03c580930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa03c580cb0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa03c580e40"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa03c57f020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa03c57f1b0"/>
        <function-ref name="getPower" scoped="" ref="0x7fa03c57f340"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa03c57f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa03c5675b0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03c5675b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa03c567930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa03c567ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa03c567c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa03c567de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03c5843f0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03c5843f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03c584770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa03c577350" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03c577350"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa03c5776d0"/>
        <function-ref name="noAck" scoped="" ref="0x7fa03c577860"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa03c5779f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa03c560880" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa03c560880"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa03c560c00"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa03c560d90"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa03c56d020"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa03c56d1b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa03c56d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa03c583650" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa03c583650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa03c5839d0"/>
        <function-ref name="source" scoped="" ref="0x7fa03c583b60"/>
        <function-ref name="address" scoped="" ref="0x7fa03c583cf0"/>
        <function-ref name="destination" scoped="" ref="0x7fa03c583e80"/>
        <function-ref name="setSource" scoped="" ref="0x7fa03c582030"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa03c5821c0"/>
        <function-ref name="type" scoped="" ref="0x7fa03c582350"/>
        <function-ref name="setType" scoped="" ref="0x7fa03c5824e0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa03c582670"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa03c582800"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa03c582990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa03c575470" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa03c575470"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa03c5757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa03c55a420" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa03c55a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa03c55a7a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa03c55a930"/>
        <function-ref name="start" scoped="" ref="0x7fa03c55aac0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c55ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa03c547b50" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa03c547b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa03c546020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa03c546e10" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa03c546e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa03c5451c0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa03c545350"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa03c5454e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa03c545670"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa03c545800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa03c5482f0" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03c5482f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa03c548670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa03c548800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa03c548990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa03c548b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fa03c548cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa03c548e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fa03c552e20" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fa03c552e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03c54a1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03c54a350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03c54a4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03c54a670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03c54a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa03c546320" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03c546320"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa03c5466a0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa03c546830"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa03c5469c0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa03c546b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fa03c557a30" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fa03c557a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03c557db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa03c5471a0" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03c5471a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa03c547520"/>
        <function-ref name="noAck" scoped="" ref="0x7fa03c5476b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa03c547840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03c553960" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03c553960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c553ce0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c553e70"/>
        <function-ref name="request" scoped="" ref="0x7fa03c558030"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c5581c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c558350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fa03c549c90" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fa03c549c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03c5570a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03c557230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03c5573c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03c557550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03c5576e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fa03c552130" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fa03c552130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c5524b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03c552640"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03c5527d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03c552960"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03c552af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fa03c54ab70" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fa03c54ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03c548020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa03c544590" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa03c544590"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa03c544910"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa03c544aa0"/>
        <function-ref name="start" scoped="" ref="0x7fa03c544c30"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c544dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa03c540490" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03c540490"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa03c540810"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa03c5409a0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa03c540b30"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa03c540cc0"/>
        <function-ref name="setCca" scoped="" ref="0x7fa03c540e50"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa03c53f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa03c5410c0" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03c5410c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03c541440"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03c5415d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03c541760"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03c5418f0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03c541a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03c541d60" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03c541d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03c540180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa03c53b020" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa03c53b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa03c53b3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa03c53b530"/>
        <function-ref name="start" scoped="" ref="0x7fa03c53b6c0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c53b850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa03c53a970" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03c53a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa03c53acf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa03c53ae80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa03c539030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa03c5391c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fa03c539350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa03c5394e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fa03c52e570" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fa03c52e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa03c52e8f0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa03c52ea80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa03c52ec10"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa03c52eda0"/>
        <function-ref name="setCca" scoped="" ref="0x7fa03c525020"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa03c5251b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa03c523970" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03c523970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa03c523cf0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa03c523e80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa03c521030"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa03c5211c0"/>
        <function-ref name="getPower" scoped="" ref="0x7fa03c521350"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa03c5214e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fa03c5266c0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa03c5266c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03c526a40"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03c526bd0"/>
        <function-ref name="modify" scoped="" ref="0x7fa03c526d60"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03c52e020"/>
        <function-ref name="resend" scoped="" ref="0x7fa03c52e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa03c53bb10" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03c53bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03c53a020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03c53a1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03c53a340"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03c53a4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03c53a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fa03c5229d0" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa03c5229d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa03c522d50"/>
        <function-ref name="rand32" scoped="" ref="0x7fa03c524020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fa03c52d840" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fa03c52d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa03c52dbc0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c52dd50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa03c520020" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03c520020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa03c5203a0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa03c520530"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa03c5206c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fa03c531cd0" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fa03c531cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fa03c5370a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fa03c537230"/>
        <function-ref name="rxOn" scoped="" ref="0x7fa03c5373c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fa03c537550"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fa03c5376e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fa03c537870"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fa03c537a00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fa03c537b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa03c5242e0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03c5242e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03c524660"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03c5247f0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03c524980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03c524b10"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03c524ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c524e30"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03c523020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03c523660"/>
        <function-ref name="set" scoped="" ref="0x7fa03c5231b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03c523340"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03c5234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fa03c5397d0" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03c5397d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c539b50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c539ce0"/>
        <function-ref name="request" scoped="" ref="0x7fa03c539e70"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c538030"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c5381c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fa03c515720" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fa03c515720"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa03c515ba0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa03c515d30"/>
        <function-ref name="isState" scoped="" ref="0x7fa03c51f020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa03c51f1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa03c51f340"/>
        <function-ref name="forceState" scoped="" ref="0x7fa03c51f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fa03c5102a0" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fa03c5102a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03c510620"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03c5107b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fa03c5112a0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fa03c5112a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03c511620"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03c5117b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fa03c5132b0" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fa03c5132b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03c513630"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03c5137c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fa03c4b9550" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa03c4b9550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa03c4b98d0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa03c4b9a60"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa03c4b9bf0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa03c4b9d80"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa03c4c6020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa03c4c61b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa03c4c6340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa03c4c64d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa03c4c6660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa03c4c67f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa03c4c6980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa03c4c6b10"/>
        <function-ref name="sync" scoped="" ref="0x7fa03c4c6ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa03c4c5020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa03c4c51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fa03c4b3850" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fa03c4b3850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c4b6480"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03c4b6900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fa03c4c54b0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fa03c4c54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fa03c4c5830"/>
        <function-ref name="rfOff" scoped="" ref="0x7fa03c4c59c0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fa03c4c5b50"/>
        <function-ref name="startVReg" scoped="" ref="0x7fa03c4c5ce0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fa03c4c5e70"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fa03c4b7030"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fa03c4b71c0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fa03c4b7350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03c4c7020" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03c4c7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c4c73a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c4c7530"/>
        <function-ref name="request" scoped="" ref="0x7fa03c4c76c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c4c7850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c4c79e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fa03c4af0c0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa03c4af0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa03c4af440"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa03c4af5d0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa03c4af760"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa03c4af8f0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa03c4afa80"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa03c4afc10"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa03c4afda0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa03c4ae020"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa03c4ae1b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa03c4ae340"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa03c4ae4d0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa03c4ae660"/>
        <function-ref name="sync" scoped="" ref="0x7fa03c4ae7f0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa03c4aea80"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa03c4aec10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fa03c48d020" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03c48d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c48d3a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03c48d530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fa03c4a7940" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa03c4a7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fa03c4a7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fa03c4a9350" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fa03c4a9350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c4a5ba0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c4a8b80"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03c4a5550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c4a5090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03c4a4090"/>
        <function-ref name="start" scoped="" ref="0x7fa03c4a81b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c4a86c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fa03c492c90" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03c492c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c4910a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03c491230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fa03c4a3830" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fa03c4a3830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c4a3bb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c4a3d40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c4a2020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c4a21b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c4a2340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c4a24d0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c4a2660"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c4a27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fa03c4ab500" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fa03c4ab500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c4aa130"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03c4aa5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fa03c47bca0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fa03c47bca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03c47a0a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03c47a230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fa03c48d8c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa03c48d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c48dc40"/>
        <function-ref name="write" scoped="" ref="0x7fa03c48ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fa03c48c1d0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa03c48c1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c48c550"/>
        <function-ref name="write" scoped="" ref="0x7fa03c48c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fa03c48ea80" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa03c48ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c48ee00"/>
        <function-ref name="write" scoped="" ref="0x7fa03c492020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fa03c498dd0" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa03c498dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa03c49e180"/>
        <function-ref name="changed" scoped="" ref="0x7fa03c49e310"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa03c49e4a0"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa03c49e630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fa03c4a4580" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa03c4a4580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c4a4900"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c4a4a90"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c4a4c20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c4a4db0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c4a3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c4a31b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c4a3340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c4a34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fa03c48a450" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03c48a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03c48a9d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fa03c4a2b50" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fa03c4a2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c4a1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c4a11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c4a1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c4a14d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c4a1660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c4a17f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c4a1980"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c4a1b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03c4b5cc0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03c4b5cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03c4b00a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fa03c4915f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03c4915f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c491970"/>
        <function-ref name="write" scoped="" ref="0x7fa03c491b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fa03c48ad70" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa03c48ad70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03c489180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa03c489520" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa03c489520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c4898a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c489a30"/>
        <function-ref name="request" scoped="" ref="0x7fa03c489bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c489d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c487020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fa03c486180" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fa03c486180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c486500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c486690"/>
        <function-ref name="request" scoped="" ref="0x7fa03c486820"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c4869b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c486b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fa03c4ac020" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fa03c4ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fa03c4ac3a0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fa03c4ac530"/>
        <function-ref name="rxOn" scoped="" ref="0x7fa03c4ac6c0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fa03c4ac850"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fa03c4ac9e0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fa03c4acb70"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fa03c4acd00"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fa03c4ab020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fa03c4923c0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa03c4923c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c492740"/>
        <function-ref name="write" scoped="" ref="0x7fa03c4928d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fa03c48e1d0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa03c48e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c48e550"/>
        <function-ref name="write" scoped="" ref="0x7fa03c48e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fa03c488570" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa03c488570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03c4888f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa03c486e00" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03c486e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03c4841c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03c484350"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03c4844e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03c484670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03c484800"/>
        <function-ref name="get" scoped="" ref="0x7fa03c484990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03c484b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03c4831b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c484cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03c484e40"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03c483020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fa03c47cdb0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fa03c47cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03c47b180"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03c47b310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03c4b0390" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03c4b0390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c4b0710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c4b08a0"/>
        <function-ref name="request" scoped="" ref="0x7fa03c4b0a30"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c4b0bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c4b0d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fa03c49a9a0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa03c49a9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c49ad20"/>
        <function-ref name="write" scoped="" ref="0x7fa03c497020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fa03c49a020" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa03c49a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c49a4a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03c49a630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fa03c49b5b0" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fa03c49b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c49b930"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c49bac0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa03c49bc50"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa03c49bde0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fa03c4873d0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fa03c4873d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c487750"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c4878e0"/>
        <function-ref name="request" scoped="" ref="0x7fa03c487a70"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c487c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c487d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fa03c488c80" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa03c488c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03c48a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03c4047e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03c4047e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03c404b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fa03c401220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa03c401220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c3ffb30"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c400a60"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03c3ff4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c3ff020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03c3fd020"/>
        <function-ref name="start" scoped="" ref="0x7fa03c400090"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c4005a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03c3fb260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03c3fb260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03c3fb5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fa03c3fbaf0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fa03c3fbaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03c3c1390"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c3c2360"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03c3c2ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03c3c2820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03c3c1850"/>
        <function-ref name="start" scoped="" ref="0x7fa03c3c3970"/>
        <function-ref name="stop" scoped="" ref="0x7fa03c3c3e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa03b1a6370" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa03b1a6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b1a4ba0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b1a5b80"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03b1a4550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b1a4090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03b1a3090"/>
        <function-ref name="start" scoped="" ref="0x7fa03b1a51b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b1a56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03b1a8af0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03b1a8af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03b1a8e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa03b19f360" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa03b19f360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b19dba0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b19eb80"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03b19d550"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b19d090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03b19b090"/>
        <function-ref name="start" scoped="" ref="0x7fa03b19e1b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b19e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03b1a0ab0" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03b1a0ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03b1a0e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fa03b184c10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03b184c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03b182020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03b1821b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03b182340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03b1824d0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b182660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fa03b1861b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03b1861b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b186530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03b1866c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03b186850"/>
        <function-ref name="get" scoped="" ref="0x7fa03b1869e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03b186b70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03b186d00"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03b185020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03b1851b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03b185340"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03b1854d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03b185660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fa03b1858f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03b1858f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03b185c70"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03b185e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03b184020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03b1841b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03b184340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03b1844d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03b184660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03b1847f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03b184980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fa03b17aa80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fa03b17aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03b17ae00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fa03b178020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fa03b1781b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fa03b178340"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b1784d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa03b17c020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03b17c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b17c3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03b17c530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03b17c6c0"/>
        <function-ref name="get" scoped="" ref="0x7fa03b17c850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03b17c9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03b17cb70"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03b17cd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03b17b020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03b17b1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03b17b340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03b17b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa03b180da0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa03b180da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b17d670"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b17e610"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03b17d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b17ead0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03b17db30"/>
        <function-ref name="start" scoped="" ref="0x7fa03b17fbf0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b17e150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03b180510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03b180510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03b180890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fa03b17b760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03b17b760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03b17bae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03b17bc70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03b17be00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03b17a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03b17a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03b17a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03b17a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03b17a660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03b17a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa03c3e5080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03c3e5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c3e4020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c3e49a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c3e44e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c3e4e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fa03c3dc0f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fa03c3dc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c3db020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c3db9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c3db4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c3dbe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa03c3e0cd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03c3e0cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03c3dfb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c3de550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c3de090"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03c3dea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fa03b1995f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fa03b1995f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b197e50"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b198e00"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03b197800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b197340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03b196340"/>
        <function-ref name="start" scoped="" ref="0x7fa03b198430"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b198940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fa03b190d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fa03b190d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03b18d670"/>
        <function-ref name="fired" scoped="" ref="0x7fa03b18e550"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03b18d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03b18ea10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03b18db30"/>
        <function-ref name="start" scoped="" ref="0x7fa03b18fb60"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b18e090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa03b1969b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03b1969b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03b1917e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03b1901b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03b191ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03b190670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fa03c3ba090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fa03c3ba090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3ba410"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3ba5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3ba730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3ba8c0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3baa50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3babe0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3bad70"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3b9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fa03c3b9390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fa03c3b9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3b9710"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3b98a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3b9a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3b9bc0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3b9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3b8020"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3b81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3b8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fa03c3b86a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fa03c3b86a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3b8a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3b8bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3b8d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3b7020"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3b71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3b7340"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3b74d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3b7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fa03c3bce60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa03c3bce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3bb210"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3bb3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3bb530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3bb6c0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3bb850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3bb9e0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3bbb70"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3bbd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fa03c3b6ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fa03c3b6ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3b50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3b5230"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3b53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3b5550"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3b56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3b5870"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3b5a00"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3b5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fa03c402b10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fa03c402b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3bc020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3bc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3bc4d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3bc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3bc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3bc980"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3bcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fa03c3b79b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fa03c3b79b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3b7d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3b6020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3b61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3b6340"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3b64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3b6660"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3b67f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3b6980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03c3b22f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c3b22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3b2670"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3b2800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c3b2990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c3b0660"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3b2cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3b2e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c3b1020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c3b11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3b1340"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3b14d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c3b1660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c3b17f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c3b1980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c3b1c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c3b1da0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3b0020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c3b01b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c3b0340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3b2b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c3b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03c3b3020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c3b3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3b33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3b3530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3b36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3b3850"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3b39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3b3b70"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3b3d00"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3b2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03c3ad7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c3ad7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3adb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3adcb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c3ade40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c3aba80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3ac1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3ac340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c3ac4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c3ac660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3ac7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3ac980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c3acb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c3acca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c3ace30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c3ab120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c3ab2b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3ab440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c3ab5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c3ab760"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3ac020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c3ab8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03c3ae630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c3ae630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3ae9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3aeb40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3aecd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3aee60"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3ad020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3ad1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3ad340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3ad4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03c3a7c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c3a7c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3a6020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3a61b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c3a6340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c3a4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3a6660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3a67f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c3a6980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c3a6b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3a6ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3a6e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c3a5020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c3a51b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c3a5340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c3a55d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c3a5760"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3a58f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c3a5a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c3a5c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3a64d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c3a5da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03c3a9b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c3a9b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3a9e80"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3a7030"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3a71c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3a7350"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3a74e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3a7670"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3a7800"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3a7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03c3a12f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c3a12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3a1670"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3a1800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c3a1990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c39f660"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3a1cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3a1e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c3a0020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c3a01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3a0340"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3a04d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c3a0660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c3a07f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c3a0980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c3a0c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c3a0da0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c39f020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c39f1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c39f340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3a1b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c39f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03c3a2020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c3a2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3a23a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3a2530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3a26c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3a2850"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3a29e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c3a2b70"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3a2d00"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3a1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03c39c7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c39c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c39cb20"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c39ccb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c39ce40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c39aa80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c39b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c39b340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c39b4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c39b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c39b7f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c39b980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c39bb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c39bca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c39be30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c39a120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c39a2b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c39a440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c39a5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c39a760"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c39b020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c39a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03c39d630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c39d630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c39d9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c39db40"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c39dcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c39de60"/>
        <function-ref name="get" scoped="" ref="0x7fa03c39c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c39c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c39c340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c39c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03c397c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c397c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c396020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c3961b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c396340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c394020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c396660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3967f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c396980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c396b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c396ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c396e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c395020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c3951b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c395340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c3955d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c395760"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3958f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c395a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c395c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3964d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c395da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03c398af0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c398af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c398e70"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c397030"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3971c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c397350"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3974e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c397670"/>
        <function-ref name="set" scoped="" ref="0x7fa03c397800"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c397990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03c3912f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03c3912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c391670"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c391800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c391990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c38e660"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c391cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c391e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c38f020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c38f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c38f340"/>
        <function-ref name="get" scoped="" ref="0x7fa03c38f4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c38f660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c38f7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c38f980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c38fc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c38fda0"/>
        <function-ref name="set" scoped="" ref="0x7fa03c38e020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c38e1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c38e340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c391b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c38e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03c392020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c392020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c3923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c392530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c3926c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c392850"/>
        <function-ref name="get" scoped="" ref="0x7fa03c3929e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c392b70"/>
        <function-ref name="set" scoped="" ref="0x7fa03c392d00"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c391020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fa03c372700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fa03c372700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa03c372a80"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c372c10"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c372da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa03c375020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fa03c375400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fa03c375400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c375780"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c375910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa03c375aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa03c375c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fa03c374060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa03c374060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c3743e0"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c374570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa03c374700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa03c374890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fa03c358a80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fa03c358a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fa03c358e00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fa03c357020"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c3571b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03c357340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03c3574d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fa03c357660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fa03c36fc20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fa03c36fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa03c359020"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c3591b0"/>
        <function-ref name="captured" scoped="" ref="0x7fa03c359340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa03c3594d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fa03c359760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fa03c359760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fa03c359ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fa03c359c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03c359e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fa03c358020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fa03c3581b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03c358340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fa03c3584d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fa03c358660"/>
        <function-ref name="setControl" scoped="" ref="0x7fa03c3587f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fa03c357930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03c357930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03c357cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03c357e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03c356020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03c355c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03c356340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03c3564d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03c356660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03c3567f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03c356980"/>
        <function-ref name="get" scoped="" ref="0x7fa03c356b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03c356ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03c356e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03c355020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03c3552b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03c355440"/>
        <function-ref name="set" scoped="" ref="0x7fa03c3555d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03c355760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03c3558f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03c3561b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03c355a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fa03c3453f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fa03c3453f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c345770"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c345900"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c345a90"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c345c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c345db0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c344020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3441b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c344340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fa03c3383f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fa03c3383f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c338770"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c338900"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c338a90"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c338c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c338db0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c337020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3371b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c337340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fa03c342d50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fa03c342d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c341100"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c341290"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c341420"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c3415b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c341740"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c3418d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c341a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c341bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fa03c33f3f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fa03c33f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c33f770"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c33f900"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c33fa90"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c33fc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c33fdb0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c33e020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c33e1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c33e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fa03c34dbc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fa03c34dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c347020"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c3471b0"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c347340"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c3474d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c347660"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c3477f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c347980"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c347b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fa03c33bd50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fa03c33bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c33a210"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c33a3a0"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c33a530"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c33a6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c33a850"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c33a9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c33ab70"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c33ad00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fa03c344710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fa03c344710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c344a90"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c344c20"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c344db0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c343020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3431b0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c343340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3434d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c343660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fa03c337710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fa03c337710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c337a90"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c337c20"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c337db0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c336020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3361b0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c336340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3364d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c336660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fa03c348620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fa03c348620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c3489a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c348b30"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c348cc0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c348e50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c34e020"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c34e1b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c34e340"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c34e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fa03c33e710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fa03c33e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c33ea90"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c33ec20"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c33edb0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c33c020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c33c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c33c340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c33c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c33c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fa03c346020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fa03c346020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c3463a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c346530"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c3466c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c346850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3469e0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c346b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c346d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c345020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fa03c339100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fa03c339100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c339480"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c339610"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c3397a0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c339930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c339ac0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c339c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c339de0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c338020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fa03c343a30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fa03c343a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c343db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c342020"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c3421b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c342340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3424d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c342660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3427f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c342980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fa03c340020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fa03c340020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c3403a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c340530"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c3406c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c340850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3409e0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c340b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c340d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c33f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fa03c34e8a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fa03c34e8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c34ec20"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c34edb0"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c34d020"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c34d1b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c34d340"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c34d4d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c34d660"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c34d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fa03c33ca30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fa03c33ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c33cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c33b020"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c33b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c33b340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c33b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c33b660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c33b7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c33b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fa03c32e3f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fa03c32e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c32e770"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c32e900"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c32ea90"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c32ec20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c32edb0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c32d020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c32d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c32d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fa03c3223f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fa03c3223f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c322770"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c322900"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c322a90"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c322c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c322db0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c321020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3211b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c321340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fa03c32bd50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fa03c32bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c32a100"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c32a290"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c32a420"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c32a5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c32a740"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c32a8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c32aa60"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c32abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fa03c3283f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fa03c3283f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c328770"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c328900"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c328a90"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c328c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c328db0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c327020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3271b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c327340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fa03c331d50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fa03c331d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c330100"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c330290"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c330420"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c3305b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c330740"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c3308d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c330a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c330bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fa03c325d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fa03c325d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c324210"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c3243a0"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c324530"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c3246c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c324850"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c3249e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c324b70"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c324d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fa03c32d710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fa03c32d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c32da90"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c32dc20"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c32ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c32c020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c32c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c32c340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c32c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c32c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fa03c321710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fa03c321710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c321a90"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c321c20"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c321db0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c320020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3201b0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c320340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3204d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c320660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fa03c3357a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fa03c3357a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c335b20"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c335cb0"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c335e40"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c332020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3321b0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c332340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3324d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c332660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fa03c327710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fa03c327710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c327a90"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c327c20"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c327db0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c326020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3261b0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c326340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3264d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c326660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fa03c32f020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fa03c32f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c32f3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c32f530"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c32f6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c32f850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c32f9e0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c32fb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c32fd00"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c32e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fa03c323100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fa03c323100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c323480"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c323610"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c3237a0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c323930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c323ac0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c323c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c323de0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c322020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fa03c32ca30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fa03c32ca30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c32cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c32b020"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c32b1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c32b340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c32b4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c32b660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c32b7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c32b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fa03c329020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fa03c329020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c3293a0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c329530"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c3296c0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c329850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3299e0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c329b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c329d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c328020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fa03c332a30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fa03c332a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c332db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c331020"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c3311b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c331340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3314d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c331660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3317f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c331980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fa03c326a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fa03c326a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c326db0"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c325020"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c3251b0"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c325340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c3254d0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c325660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c3257f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c325980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fa03c2132f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fa03c2132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c213670"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c213800"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c213990"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c213b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c213cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c213e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c207020"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c2071b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa03c216680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fa03c216680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c216a00"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c216b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa03c216d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa03c213020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fa03c2057a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fa03c2057a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03c205b20"/>
        <function-ref name="fired" scoped="" ref="0x7fa03c205cb0"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c205e40"/>
        <function-ref name="edge" scoped="" ref="0x7fa03c203020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fa03c2031b0"/>
        <function-ref name="enable" scoped="" ref="0x7fa03c203340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fa03c2034d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fa03c203660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fa03c206b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fa03c206b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c205020"/>
        <function-ref name="disable" scoped="" ref="0x7fa03c2051b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa03c205340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa03c2054d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa03bda6e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03bda6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda3410"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda35a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa03bdaf160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa03bdaf160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdaf4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa03bda9e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03bda9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda8210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa03bda1880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bda1880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda1c00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa03bd990a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa03bd990a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd99420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd995b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa03bda00a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa03bda00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda0420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa03bd8e500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa03bd8e500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd8e880"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd8ea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa03bd90500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa03bd90500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd90880"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd90a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa03bdae490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bdae490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdae810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa03bd96880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa03bd96880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd96c00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd96d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa03bd91500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bd91500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd91880"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd91a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa03bda8e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa03bda8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda7210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa03bda7e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bda7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda6210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa03bd9c880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa03bd9c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd9cc00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd9cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa03bd9d0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa03bd9d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd9d420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd9d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa03bda0880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa03bda0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda0c00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa03bdb2a90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bdb2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa03bdb2e10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa03bdb1020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa03bdb11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa03bdade00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bdade00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdac1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa03bdac490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa03bdac490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdac910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa03bd95c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa03bd95c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd930a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd93230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa03bdacbe0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa03bdacbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa03bd91ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03bd91ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd900a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd90230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa03bdad160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03bdad160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdad4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa03bd960a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa03bd960a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd96420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd965b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa03bda7670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa03bda7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda79f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa03bda8670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bda8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda89f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa03bdb1ad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa03bdb1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdb1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa03bd970a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa03bd970a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd97420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd975b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa03bd99880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa03bd99880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd99c00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd99d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa03bd97880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa03bd97880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd97c00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd97d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa03bd8fce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bd8fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd8e0a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd8e230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa03bd90ce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa03bd90ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd8f0a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd8f230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa03bd9d880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa03bd9d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd9dc00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd9dd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa03bd980a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa03bd980a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd98420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd985b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa03bd92ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa03bd92ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd910a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd91230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa03bd9f880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa03bd9f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd9fc00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd9fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa03bd8ece0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa03bd8ece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03bd8c0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03bd8c230"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd8c3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03bd8c550"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03bd8c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa03bdb1480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa03bdb1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdb1800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa03bda9670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa03bda9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda99f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa03bda6670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa03bda6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda69f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa03bd9a0a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa03bd9a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd9a420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd9a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa03bd9f0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa03bd9f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd9f420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd9f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa03bd9a880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa03bd9a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd9ac00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd9ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa03bda3870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa03bda3870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda3bf0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda3d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa03bdaf7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa03bdaf7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdafb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa03bda10a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bda10a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bda1420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bda15b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03bdb3e20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03bdb3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03bdb21c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03bdb2350"/>
        <function-ref name="request" scoped="" ref="0x7fa03bdb24e0"/>
        <function-ref name="granted" scoped="" ref="0x7fa03bdb2670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03bdb2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa03bdab2f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa03bdab2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdab670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa03bda9020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa03bda9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bda93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa03bd92500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa03bd92500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd92880"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd92a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa03bd93ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa03bd93ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd920a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd92230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa03bdad7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03bdad7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdadb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa03bd93500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa03bd93500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd93880"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd93a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa03bd8f500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa03bd8f500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd8f880"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd8fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa03bd9c0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa03bd9c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd9c420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd9c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa03bd98880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa03bd98880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd98c00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd98d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa03bdafe00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa03bdafe00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdae1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa03bdaeae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa03bdaeae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdaee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa03bd9e0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa03bd9e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd9e420"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd9e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa03bdab940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa03bdab940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bdabcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa03bd9e880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa03bd9e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd9ec00"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd9ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa03bd950a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa03bd950a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd95820"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd959b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa03bd8c9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bd8c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03bd8cd30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03bd8b020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd8b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03bd8b340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03bd8b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fa03c1c22c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fa03c1c22c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03c1c2640"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03c1c27d0"/>
        <function-ref name="write" scoped="" ref="0x7fa03c1c2960"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03c1c2af0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03c1c2c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa03c1c3350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03c1c3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa03c1c36d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa03c1c3860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa03c1c39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fa03c1c1540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fa03c1c1540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c1c18c0"/>
        <function-ref name="write" scoped="" ref="0x7fa03c1c1a50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fa03c1bf370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fa03c1bf370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c1bf6f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03c1bf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03c1c44d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03c1c44d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c1c4850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c1c49e0"/>
        <function-ref name="request" scoped="" ref="0x7fa03c1c4b70"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c1c4d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c1c3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fa03c1be1d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fa03c1be1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03c1be550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fa03c1a82e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa03c1a82e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03c1a8660"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03c1a87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fa03c1b9890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fa03c1b9890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03c1b9c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03c1b9da0"/>
        <function-ref name="write" scoped="" ref="0x7fa03c1b8020"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03c1b81b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03c1b8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa03c1bb660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03c1bb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa03c1bb9e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa03c1bbb70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa03c1bbd00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fa03c1b1c70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa03c1b1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa03c1b3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fa03c1a8b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fa03c1a8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa03c1b2020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa03c1b21b0"/>
        <function-ref name="isState" scoped="" ref="0x7fa03c1b2340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa03c1b24d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa03c1b2660"/>
        <function-ref name="forceState" scoped="" ref="0x7fa03c1b27f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa03c1b4060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa03c1b4060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c1b43e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c1b4570"/>
        <function-ref name="request" scoped="" ref="0x7fa03c1b4700"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c1b4890"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c1b4a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fa03c1b8ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fa03c1b8ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c1b6020"/>
        <function-ref name="write" scoped="" ref="0x7fa03c1b61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fa03c1b6a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fa03c1b6a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03c1b6db0"/>
        <function-ref name="write" scoped="" ref="0x7fa03c1b5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa03c1b2a70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03c1b2a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03c1b2df0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03c1b0020"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03c1b01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03c1b0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03c1b04d0"/>
        <function-ref name="get" scoped="" ref="0x7fa03c1b0660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03c1b07f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03c1b0e30"/>
        <function-ref name="set" scoped="" ref="0x7fa03c1b0980"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03c1b0b10"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03c1b0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03c1ba510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03c1ba510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c1ba890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c1baa20"/>
        <function-ref name="request" scoped="" ref="0x7fa03c1babb0"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c1bad40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c1b9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fa03c1a5bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fa03c1a5bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03c1a4020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03c1a41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fa03c1b58b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fa03c1b58b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03c1b5c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa03c14a770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa03c14a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa03c14aaf0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa03c14ac80"/>
        <function-ref name="isState" scoped="" ref="0x7fa03c14ae10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa03c146020"/>
        <function-ref name="requestState" scoped="" ref="0x7fa03c1461b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa03c146340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa03c1451d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa03c1451d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa03c145550"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa03c1456e0"/>
        <function-ref name="isState" scoped="" ref="0x7fa03c145870"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa03c145a00"/>
        <function-ref name="requestState" scoped="" ref="0x7fa03c145b90"/>
        <function-ref name="forceState" scoped="" ref="0x7fa03c145d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03c140020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03c140020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03c1403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa03c140b70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa03c140b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa03c13f020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa03c13f1b0"/>
        <function-ref name="isState" scoped="" ref="0x7fa03c13f340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa03c13f4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa03c13f660"/>
        <function-ref name="forceState" scoped="" ref="0x7fa03c13f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa03bddb020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa03bddb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03bddb3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03bddb530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa03c1278f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa03c1278f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa03c127c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03c128c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03c128c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c127020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c1271b0"/>
        <function-ref name="request" scoped="" ref="0x7fa03c127340"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c1274d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c127660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa03b0a25d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03b0a25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa03b0a2950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa03b0a2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa03b09f020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa03b09f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b09f3a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b09f530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fa03b09f7c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa03b09f7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa03b09fb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa03b0a2d70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa03b0a2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa03b0a1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03b0a3940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03b0a3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03b0a3cc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03b0a3e50"/>
        <function-ref name="request" scoped="" ref="0x7fa03b0a2020"/>
        <function-ref name="granted" scoped="" ref="0x7fa03b0a21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03b0a2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa03b0a1410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa03b0a1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa03b0a1790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa03b0a1920"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa03b0a1ab0"/>
        <function-ref name="write" scoped="" ref="0x7fa03b0a1c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa03c0bd8e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03c0bd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa03c0bdc60"/>
        <function-ref name="configure" scoped="" ref="0x7fa03c0bddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa03c0c0850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa03c0c0850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03c0c0bd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03c0c0d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fa03c0bba40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa03c0bba40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa03c0bbdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa03c0c1110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa03c0c1110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa03c0c1490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fa03c0bc690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fa03c0bc690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c0bca10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c0bcba0"/>
        <function-ref name="request" scoped="" ref="0x7fa03c0bcd30"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c0bb020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c0bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03c0c6d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03c0c6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c0c2180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c0c2310"/>
        <function-ref name="request" scoped="" ref="0x7fa03c0c24a0"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c0c2630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c0c27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa03c0c1790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa03c0c1790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa03c0c1b10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa03c0c1ca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa03c0c1e30"/>
        <function-ref name="write" scoped="" ref="0x7fa03c0c0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fa03c0b6b40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa03c0b6b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa03c0b9020"/>
        <function-ref name="txDone" scoped="" ref="0x7fa03c0b91b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fa03c046c40" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03c046c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa03c045020"/>
        <function-ref name="configure" scoped="" ref="0x7fa03c0451b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fa03c043700" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fa03c043700"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03c043aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03c043c30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fa03c042e00" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fa03c042e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fa03c0411c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fa03c045440" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fa03c045440"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fa03c0457c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fa03c041490" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fa03c041490"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa03c041810"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa03c0419a0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa03c041b30"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa03c041cc0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa03c041e50"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa03c040020"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa03c0401b0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa03c040340"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa03c0404d0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa03c040660"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa03c0407f0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa03c040980"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa03c040b10"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa03c040da0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa03c03f020"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa03c03f1b0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa03c03f340"/>
        <function-ref name="isUart" scoped="" ref="0x7fa03c03f4d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa03c03f660"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa03c03f7f0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa03c03f980"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa03c03fb10"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa03c03fca0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa03c03fe30"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c03e020"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa03c03e3b0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa03c03e540"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa03c03e6d0"/>
        <function-ref name="tx" scoped="" ref="0x7fa03c03e860"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa03c03e9f0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa03c03eb80"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa03c03ed10"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa03c03d020"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa03c03d1b0"/>
        <function-ref name="rx" scoped="" ref="0x7fa03c03d340"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa03c03d4d0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa03c03d660"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa03c03d7f0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa03c03d980"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa03c03db10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa03c03c5a0" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03c03c5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03c03c920"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03c03cab0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03c03cc40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03c03cdd0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03c03b020"/>
        <function-ref name="get" scoped="" ref="0x7fa03c03b1b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03c03b340"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03c03b980"/>
        <function-ref name="set" scoped="" ref="0x7fa03c03b660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03c03b4d0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03c03b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fa03c042060" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fa03c042060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c042400"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c042590"/>
        <function-ref name="request" scoped="" ref="0x7fa03c042720"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c0428b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c042a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03c047e80" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03c047e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03c046240"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03c0463d0"/>
        <function-ref name="request" scoped="" ref="0x7fa03c046560"/>
        <function-ref name="granted" scoped="" ref="0x7fa03c0466f0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03c046880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fa03c045a50" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fa03c045a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fa03c045dd0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fa03c043020"/>
        <function-ref name="splitRead" scoped="" ref="0x7fa03c0431b0"/>
        <function-ref name="write" scoped="" ref="0x7fa03c043340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fa03c03dde0" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fa03c03dde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa03c03c180"/>
        <function-ref name="txDone" scoped="" ref="0x7fa03c03c310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fa03c03bc50" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fa03c03bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03c03a020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03c03a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fa03c02b8a0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa03c02b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c02bc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fa03c02e3b0" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa03c02e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa03c02e730"/>
        <function-ref name="txDone" scoped="" ref="0x7fa03c02e8c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fa03c0358a0" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa03c0358a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa03c035c20"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa03c035db0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa03c032020"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa03c0321b0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa03c032340"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa03c0324d0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa03c032660"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa03c0327f0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa03c032980"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa03c032b10"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa03c032ca0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa03c032e30"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa03c031020"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa03c0312b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa03c031440"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa03c0315d0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa03c031760"/>
        <function-ref name="isUart" scoped="" ref="0x7fa03c0318f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa03c031a80"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa03c031c10"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa03c031da0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa03c030020"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa03c0301b0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa03c030340"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c0304d0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa03c030860"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa03c0309f0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa03c030b80"/>
        <function-ref name="tx" scoped="" ref="0x7fa03c030d10"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa03c02f020"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa03c02f1b0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa03c02f340"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa03c02f4d0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa03c02f660"/>
        <function-ref name="rx" scoped="" ref="0x7fa03c02f7f0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa03c02f980"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa03c02fb10"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa03c02fca0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa03c02fe30"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa03c02e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fa03bff0570" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fa03bff0570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bff08f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bff0a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03bff0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bfee980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bfef020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bfef1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03bfef340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03bfef4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bfef660"/>
        <function-ref name="get" scoped="" ref="0x7fa03bfef7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03bfef980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03bfefb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03bfefca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03bfee020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03bfee1b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bfee340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03bfee4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03bff0da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03bfee660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03bfee7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa03c024910" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa03c024910"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa03c024c90"/>
        <function-ref name="txDone" scoped="" ref="0x7fa03c024e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fa03bfeed40" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fa03bfeed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bfed0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bfed270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03bfed400"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bfeb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bfed720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bfed8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03bfeda40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03bfedbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bfedd60"/>
        <function-ref name="get" scoped="" ref="0x7fa03bfec020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03bfec1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03bfec340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03bfec4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03bfec760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03bfec8f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bfeca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03bfecc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03bfed590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03bfecda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03bfeb020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fa03bfeb570" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fa03bfeb570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bfeb8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bfeba80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03bfebc10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bfe9980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bfea020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bfea1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03bfea340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03bfea4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bfea660"/>
        <function-ref name="get" scoped="" ref="0x7fa03bfea7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03bfea980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03bfeab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03bfeaca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03bfe9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03bfe91b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bfe9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03bfe94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03bfebda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03bfe9660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03bfe97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fa03c02cd00" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fa03c02cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa03c0280a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa03c028230"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa03c0283c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa03c028550"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa03c0286e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa03c028870"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa03c028a00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa03c028b90"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa03c028d20"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa03c027020"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa03c0271b0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa03c027340"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa03c0274d0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa03c027760"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa03c0278f0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa03c027a80"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa03c027c10"/>
        <function-ref name="isUart" scoped="" ref="0x7fa03c027da0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa03c026020"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa03c0261b0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa03c026340"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa03c0264d0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa03c026660"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa03c0267f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03c026980"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa03c026d10"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa03c025020"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa03c0251b0"/>
        <function-ref name="tx" scoped="" ref="0x7fa03c025340"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa03c0254d0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa03c025660"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa03c0257f0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa03c025980"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa03c025b10"/>
        <function-ref name="rx" scoped="" ref="0x7fa03c025ca0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa03c025e30"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa03c024020"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa03c0241b0"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa03c024340"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa03c0244d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fa03bffa5b0" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fa03bffa5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa03bffa930"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa03bffaac0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa03bffac50"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa03bffade0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa03c022020"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa03c0221b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa03c022340"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa03c0224d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03c022660"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa03c0227f0"/>
        <function-ref name="getData" scoped="" ref="0x7fa03c022980"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa03c022b10"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa03c022ca0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa03c021020"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa03c0211b0"/>
        <function-ref name="getIV" scoped="" ref="0x7fa03c021340"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa03c0214d0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa03c021660"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa03c0217f0"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa03c021980"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa03c021b10"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa03c021ca0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa03c021e30"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa03bff9020"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa03bff91b0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa03bff9540"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa03bff96d0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa03bff9860"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa03bff99f0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa03bff9b80"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa03bff9d10"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa03bff8020"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa03bff81b0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa03bff8340"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa03bff84d0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa03bff8660"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa03bff87f0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa03bff8980"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa03bff8b10"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa03bff8ca0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa03bff8e30"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa03bff7020"/>
        <function-ref name="setData" scoped="" ref="0x7fa03bff71b0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa03bff7340"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa03bff74d0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa03bff7660"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa03bff77f0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa03bff7980"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa03bff7b10"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa03bff6420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa03bff65b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa03bff6740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa03bff68d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa03bff6a60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa03bff6bf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa03bff6d80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa03bff5020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa03bff51b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa03bff5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fa03bff3e40" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fa03bff3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bff21e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bff2370"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03bff2500"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bff01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bff2820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bff29b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03bff2b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03bff2cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bff2e60"/>
        <function-ref name="get" scoped="" ref="0x7fa03bff1020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03bff11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03bff1340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03bff14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03bff1760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03bff18f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bff1a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03bff1c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03bff2690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03bff1da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03bff0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa03c023290" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa03c023290"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03c023610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fa03bff5700" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fa03bff5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bff5a80"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bff5c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03bff5da0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bff3a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bff41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bff4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03bff44d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03bff4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bff47f0"/>
        <function-ref name="get" scoped="" ref="0x7fa03bff4980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03bff4b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03bff4ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03bff4e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03bff3120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03bff32b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bff3440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03bff35d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03bff4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03bff3760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03bff38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa03b097020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03b097020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa03b0973a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa03b097530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fa03b091440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fa03b091440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03b0917c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa03b08a760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03b08a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa03b08aae0"/>
        <function-ref name="configure" scoped="" ref="0x7fa03b08ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fa03b091a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa03b091a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa03b091dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa03b090020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa03b0901b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa03b090340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa03b0904d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa03b090660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa03b0907f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa03b090980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03b090b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa03b090ca0"/>
        <function-ref name="getData" scoped="" ref="0x7fa03b090e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa03b08f020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa03b08f1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa03b08f440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa03b08f5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fa03b08f760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa03b08f8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa03b08fa80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa03b08fc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa03b08fda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa03b08e020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa03b08e1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa03b08e340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa03b08e4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa03b08e660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa03b08e9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa03b08eb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa03b08ed10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa03b08d020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa03b08d1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa03b08d340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa03b08d4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa03b08d660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa03b08d7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa03b08d980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa03b08db10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa03b08dca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa03b08de30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa03b08c020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa03b08c1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa03b08c340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa03b08c4d0"/>
        <function-ref name="setData" scoped="" ref="0x7fa03b08c660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa03b08c7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa03b08c980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa03b08cb10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa03b08cca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa03b08ce30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa03b08b020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa03b08b5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa03b08b740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa03b08b8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa03b08ba60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa03b08bbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa03b08bd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa03b08a020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa03b08a1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa03b08a340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa03b08a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fa03b092c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fa03b092c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa03b091020"/>
        <function-ref name="txDone" scoped="" ref="0x7fa03b0911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03b098340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03b098340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03b0986c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03b098850"/>
        <function-ref name="request" scoped="" ref="0x7fa03b0989e0"/>
        <function-ref name="granted" scoped="" ref="0x7fa03b098b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03b098d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fa03b096020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fa03b096020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa03b0963a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa03b096530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa03b0966c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa03b096850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa03b0969e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa03b096b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa03b096d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa03b095020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa03b0951b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa03b095340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa03b0954d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa03b095660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa03b0957f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa03b095a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa03b095c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa03b095da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa03b094020"/>
        <function-ref name="isUart" scoped="" ref="0x7fa03b0941b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa03b094340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa03b0944d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa03b094660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa03b0947f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa03b094980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa03b094b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03b094ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa03b093220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa03b0933b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa03b093540"/>
        <function-ref name="tx" scoped="" ref="0x7fa03b0936d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa03b093860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa03b0939f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa03b093b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa03b093d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa03b092020"/>
        <function-ref name="rx" scoped="" ref="0x7fa03b0921b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa03b092340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa03b0924d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa03b092660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa03b0927f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa03b092980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa03b0977c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03b0977c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa03b097b40"/>
        <function-ref name="userId" scoped="" ref="0x7fa03b097cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa03bf438a0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03bf438a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa03bf43c20"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa03bf43db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa03bf40020" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03bf40020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa03bf403a0"/>
        <function-ref name="configure" scoped="" ref="0x7fa03bf40530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa03bf48a80" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa03bf48a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa03bf48e00"/>
        <function-ref name="txDone" scoped="" ref="0x7fa03bf45020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03bf445c0" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03bf445c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03bf44940"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03bf44ad0"/>
        <function-ref name="request" scoped="" ref="0x7fa03bf44c60"/>
        <function-ref name="granted" scoped="" ref="0x7fa03bf44df0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03bf43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa03bf459a0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa03bf459a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03bf45d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa03bf41130" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03bf41130"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa03bf414b0"/>
        <function-ref name="userId" scoped="" ref="0x7fa03bf41640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fa03bf2b4b0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03bf2b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa03bf2b830"/>
        <function-ref name="userId" scoped="" ref="0x7fa03bf2b9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fa03bf3e5c0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fa03bf3e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa03bf3e960"/>
        <function-ref name="txDone" scoped="" ref="0x7fa03bf3eaf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fa03bf2de70" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fa03bf2de70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03bf2b220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fa03bf2d020" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fa03bf2d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03bf2d3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fa03bf2d690" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fa03bf2d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fa03bf2da10"/>
        <function-ref name="txDone" scoped="" ref="0x7fa03bf2dba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa03beac530" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03beac530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa03beac8d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa03beaca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa03beaa270" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03beaa270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa03beaa610"/>
        <function-ref name="configure" scoped="" ref="0x7fa03beaa7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa03beaccb0" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa03beaccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03beab0a0"/>
        <function-ref name="requested" scoped="" ref="0x7fa03beab230"/>
        <function-ref name="granted" scoped="" ref="0x7fa03beab3c0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03beab550"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa03beab6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03bead6a0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03bead6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03beada40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03beadbd0"/>
        <function-ref name="request" scoped="" ref="0x7fa03beadd60"/>
        <function-ref name="granted" scoped="" ref="0x7fa03beac020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03beac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fa03beaa9f0" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fa03beaa9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa03beaad70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa03beab930" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03beab930"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa03beabcb0"/>
        <function-ref name="userId" scoped="" ref="0x7fa03beabe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03b01c020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03b01c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03b01c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa03b01c630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa03b01c630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa03b01c9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa03b01cb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa03b01ccd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa03b01ce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fa03b0196c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fa03b0196c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fa03b019a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa03b019bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fa03b0179d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fa03b0179d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fa03b017d70"/>
        <function-ref name="configure" scoped="" ref="0x7fa03b015020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa03b0152b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa03b0152b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa03b015630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa03b0157c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa03b015950"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa03b015ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fa03b019e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fa03b019e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03b0181e0"/>
        <function-ref name="requested" scoped="" ref="0x7fa03b018370"/>
        <function-ref name="granted" scoped="" ref="0x7fa03b018500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03b018690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fa03b018820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa03b015d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03b015d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03b0140e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03b014270"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03b014400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03b014590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03b014720"/>
        <function-ref name="get" scoped="" ref="0x7fa03b0148b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03b014a40"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03b0131b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03b014d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03b014bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03b013020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03b01a850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03b01a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03b01abf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03b01ad80"/>
        <function-ref name="request" scoped="" ref="0x7fa03b019020"/>
        <function-ref name="granted" scoped="" ref="0x7fa03b0191b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03b019340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fa03b0172d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fa03b0172d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa03b017650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fa03b018a70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fa03b018a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fa03b018df0"/>
        <function-ref name="userId" scoped="" ref="0x7fa03b017020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fa03b013480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fa03b013480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03b013800"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03b013990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fa03bea28c0" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fa03bea28c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa03bea2c40"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa03bea2dd0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa03be9f020"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa03be9f1b0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa03be9f340"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa03be9f4d0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa03be9f660"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa03be9f7f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03be9f980"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa03be9fb10"/>
        <function-ref name="getData" scoped="" ref="0x7fa03be9fca0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa03be9fe30"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa03be9e020"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa03be9e2b0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa03be9e440"/>
        <function-ref name="getIV" scoped="" ref="0x7fa03be9e5d0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa03be9e760"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa03be9e8f0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa03be9ea80"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa03be9ec10"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa03be9eda0"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa03be9d020"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa03be9d1b0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa03be9d340"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa03be9d4d0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa03be9d860"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa03be9d9f0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa03be9db80"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa03be9dd10"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa03be9c020"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa03be9c1b0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa03be9c340"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa03be9c4d0"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa03be9c660"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa03be9c7f0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa03be9c980"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa03be9cb10"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa03be9cca0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa03be9ce30"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa03be9b020"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa03be9b1b0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa03be9b340"/>
        <function-ref name="setData" scoped="" ref="0x7fa03be9b4d0"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa03be9b660"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa03be9b7f0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa03be9b980"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa03be9bb10"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa03be9bca0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa03be9be30"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa03be9a420"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa03be9a5b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa03be9a740"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa03be9a8d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa03be9aa60"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa03be9abf0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa03be9ad80"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa03be99020"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa03be991b0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa03be99340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fa03be8f250" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fa03be8f250"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fa03be8f5d0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fa03be8f760"/>
        <function-ref name="setUctl" scoped="" ref="0x7fa03be8f8f0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fa03be8fa80"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fa03be8fc10"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fa03be8fda0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fa03be8e020"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fa03be8e1b0"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fa03be8e340"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fa03be8e4d0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fa03be8e660"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fa03be8e7f0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fa03be8e980"/>
        <function-ref name="getUbr" scoped="" ref="0x7fa03be8ec10"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fa03be8eda0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fa03be8d020"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fa03be8d1b0"/>
        <function-ref name="isUart" scoped="" ref="0x7fa03be8d340"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fa03be8d4d0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fa03be8d660"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fa03be8d7f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fa03be8d980"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fa03be8db10"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fa03be8dca0"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03be8de30"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fa03be8c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fa03be8c3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fa03be8c540"/>
        <function-ref name="tx" scoped="" ref="0x7fa03be8c6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fa03be8c860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fa03be8c9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fa03be8cb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fa03be8cd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fa03be8b020"/>
        <function-ref name="rx" scoped="" ref="0x7fa03be8b1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fa03be8b340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fa03be8b4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fa03be8b660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fa03be8b7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fa03be8b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fa03be88570" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fa03be88570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03be888f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03be88a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03be88c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03be86980"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03be87020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03be871b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03be87340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03be874d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03be87660"/>
        <function-ref name="get" scoped="" ref="0x7fa03be877f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03be87980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03be87b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03be87ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03be86020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03be861b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03be86340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03be864d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03be88da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03be86660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03be867f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fa03be96390" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fa03be96390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fa03be96710"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fa03be968a0"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fa03be96a30"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fa03be96bc0"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fa03be96d50"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fa03be95020"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fa03be951b0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fa03be95340"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03be954d0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fa03be95660"/>
        <function-ref name="getData" scoped="" ref="0x7fa03be957f0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fa03be95980"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fa03be95b10"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fa03be95da0"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fa03be94020"/>
        <function-ref name="getIV" scoped="" ref="0x7fa03be941b0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fa03be94340"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fa03be944d0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fa03be94660"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fa03be947f0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fa03be94980"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fa03be94b10"/>
        <function-ref name="isI2C" scoped="" ref="0x7fa03be94ca0"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fa03be94e30"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fa03be93020"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fa03be933b0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fa03be93540"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fa03be936d0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fa03be93860"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fa03be939f0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fa03be93b80"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fa03be93d10"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fa03be92020"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fa03be921b0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fa03be92340"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fa03be924d0"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fa03be92660"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fa03be927f0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fa03be92980"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fa03be92b10"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fa03be92ca0"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fa03be92e30"/>
        <function-ref name="setData" scoped="" ref="0x7fa03be91020"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fa03be911b0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fa03be91340"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fa03be914d0"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fa03be91660"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fa03be917f0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fa03be91980"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fa03be90020"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fa03be901b0"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fa03be90340"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fa03be904d0"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fa03be90660"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fa03be907f0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fa03be90980"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fa03be90b10"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fa03be90ca0"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fa03be90e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fa03be8bd40" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fa03be8bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03be8a0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03be8a270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03be8a400"/>
        <function-ref name="clr" scoped="" ref="0x7fa03be881b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03be8a720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03be8a8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03be8aa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03be8abd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03be8ad60"/>
        <function-ref name="get" scoped="" ref="0x7fa03be89020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03be891b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03be89340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03be894d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03be89760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03be898f0"/>
        <function-ref name="set" scoped="" ref="0x7fa03be89a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03be89c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03be8a590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03be89da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03be88020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa03bd73c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03bd73c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd72210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd723a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa03bd7eda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa03bd7eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd7d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa03bd77b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03bd77b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd76020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa03bd71670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bd71670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd719f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd71b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa03bd6ae50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa03bd6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd69210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd693a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa03bd71e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa03bd71e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd70210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd703a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa03bd5d2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa03bd5d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd5d670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd5d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa03bd5f2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa03bd5f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd5f670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd5f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa03bd7c120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bd7c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd7c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa03bd65670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa03bd65670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd659f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd65b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa03bd612f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bd612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd61670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd61800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa03bd76c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa03bd76c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd74020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa03bd74c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bd74c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd73020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd731b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa03bd6b670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa03bd6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd6b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd6bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa03bd6de50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa03bd6de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd6c210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd6c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa03bd70670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa03bd70670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd709f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd70b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa03bd7f760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bd7f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa03bd7fae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa03bd7fc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa03bd7fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa03bd7aaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bd7aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd7ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa03bd79120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa03bd79120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd795a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa03bd64a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa03bd64a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd64df0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd63020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa03bd79870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa03bd79870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd79bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa03bd61ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03bd61ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd61e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd5f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa03bd7cdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03bd7cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd7a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa03bd66e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa03bd66e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd65210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa03bd74480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa03bd74480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd74800"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd74990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa03bd76480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bd76480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd76800"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd76990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa03bd7e750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa03bd7e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd7ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa03bd67e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa03bd67e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd66210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa03bd69670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa03bd69670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd699f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd69b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa03bd66670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa03bd66670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd669f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd66b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa03bd5ead0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bd5ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd5ee50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa03bd5fad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa03bd5fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd5fe50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa03bd6c670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa03bd6c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd6c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa03bd69e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa03bd69e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd67210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa03bd62ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa03bd62ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd62e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd61020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa03bd6f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa03bd6f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd6f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd6fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa03bd5dad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa03bd5dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03bd5de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03bd5c020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd5c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03bd5c340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03bd5c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa03bd7e100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa03bd7e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd7e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa03bd77370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa03bd77370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd776f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd77880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa03bd73480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa03bd73480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd73800"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd73990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa03bd6be50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa03bd6be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd6a210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd6a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa03bd70e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa03bd70e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd6f210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd6f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa03bd6a670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa03bd6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd6a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd6ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa03bd72670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa03bd72670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd729f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd72b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa03bd7d450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa03bd7d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd7d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa03bd72e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bd72e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd71210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd713a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03bd80a80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03bd80a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03bd80e00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03bd7f020"/>
        <function-ref name="request" scoped="" ref="0x7fa03bd7f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa03bd7f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03bd7f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa03bd78020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa03bd78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa03bd78cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa03bd78cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd770a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa03bd622f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa03bd622f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd62670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd62800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa03bd63ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa03bd63ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd63e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd62020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa03bd7a450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03bd7a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd7a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa03bd632f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa03bd632f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd63670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd63800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa03bd5e2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa03bd5e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd5e670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd5e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa03bd6ce50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa03bd6ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd6b210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa03bd67670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa03bd67670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd679f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd67b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa03bd7daa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa03bd7daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd7de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa03bd7c770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa03bd7c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd7caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa03bd6fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa03bd6fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd6d210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa03bd78670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa03bd78670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd789f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa03bd6d670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa03bd6d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd6d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd6db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa03bd65e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa03bd65e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd64610"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd647a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa03bd5c7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bd5c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03bd5cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03bd5ccb0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd5ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03bd5b020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03bd5b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa03bd47c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03bd47c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd46210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd463a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa03bd52da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa03bd52da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd50180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa03bd4ab50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03bd4ab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd49020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd491b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa03bd44670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bd44670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd449f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd44b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa03bd3de50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa03bd3de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd3c210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd3c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa03bd44e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa03bd44e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd43210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd433a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa03bd302f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa03bd302f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd30670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd30800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa03bd332f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa03bd332f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd33670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd33800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa03bd4f120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bd4f120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd4f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa03bd39670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa03bd39670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd399f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd39b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa03bd342f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bd342f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd34670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd34800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa03bd49c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa03bd49c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd48020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd481b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa03bd48c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bd48c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd47020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa03bd3e670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa03bd3e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd3e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd3eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa03bd41e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa03bd41e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd40210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd403a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa03bd43670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa03bd43670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd439f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd43b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa03bd53760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bd53760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa03bd53ae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa03bd53c70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa03bd53e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa03bd4eaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bd4eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd4ee20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa03bd4d120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa03bd4d120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd4d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa03bd38a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa03bd38a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd38df0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa03bd4d870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa03bd4d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd4dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa03bd34ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03bd34ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd34e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd33020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa03bd4fdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03bd4fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd4e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa03bd3ae50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa03bd3ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd39210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd393a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa03bd48480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa03bd48480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd48800"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd48990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa03bd49480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bd49480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd49800"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd49990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa03bd52750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa03bd52750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd52ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa03bd3be50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa03bd3be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd3a210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd3a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa03bd3c670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa03bd3c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd3c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd3cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa03bd3a670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa03bd3a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd3a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd3ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa03bd32ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bd32ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd32e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd30020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa03bd33ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa03bd33ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd33e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd32020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa03bd40670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa03bd40670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd409f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd40b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa03bd3ce50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa03bd3ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd3b210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd3b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa03bd35ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa03bd35ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd35e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa03bd42670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa03bd42670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd429f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd42b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa03bd30ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa03bd30ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03bd30e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03bd2f020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd2f1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03bd2f340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03bd2f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa03bd52100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa03bd52100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd52480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa03bd4a370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa03bd4a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd4a6f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd4a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa03bd47480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa03bd47480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd47800"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd47990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa03bd3ee50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa03bd3ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd3d210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd3d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa03bd43e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa03bd43e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd42210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd423a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa03bd3d670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa03bd3d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd3d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd3db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa03bd46670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa03bd46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd469f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd46b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa03bd50450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa03bd50450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd507d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa03bd46e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bd46e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd44210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd443a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03bd549e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03bd549e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03bd54d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03bd53020"/>
        <function-ref name="request" scoped="" ref="0x7fa03bd531b0"/>
        <function-ref name="granted" scoped="" ref="0x7fa03bd53340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03bd534d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa03bd4b020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa03bd4b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd4b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa03bd4bcc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa03bd4bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd4a0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa03bd352f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa03bd352f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd35670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd35800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa03bd36ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa03bd36ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd36e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd35020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa03bd4e450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03bd4e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd4e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa03bd362f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa03bd362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd36670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd36800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa03bd322f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa03bd322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd32670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd32800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa03bd40e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa03bd40e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd3e210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd3e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa03bd3b670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa03bd3b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd3b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd3bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa03bd50aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa03bd50aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd50e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa03bd4f770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa03bd4f770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd4faf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa03bd42e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa03bd42e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd41210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd413a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa03bd4b670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa03bd4b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bd4b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa03bd41670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa03bd41670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd419f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd41b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa03bd39e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa03bd39e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd38610"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd387a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa03bd2f7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bd2f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03bd2fb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03bd2fcb0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bd2fe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03bd2e020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03bd2e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fa03bd27b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa03bd27b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa03bd24020"/>
        <function-ref name="changed" scoped="" ref="0x7fa03bd241b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa03bd24340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa03bd244d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fa03bd26d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa03bd26d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fa03bd100e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fa03bd0b310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fa03bd0b310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fa03bd0b690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fa03bd08880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fa03bd08880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bd08c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fa03bcfd020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fa03bcfd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bcfd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fa03bcf3bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fa03bcf3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bcf6020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bcf61b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fa03bcf6530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fa03bcf6530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa03bcf68b0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03bcf6a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fa03bcf7140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fa03bcf7140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bcf74c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fa03bcfcc50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fa03bcfcc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bce3020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bce31b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fa03bce3540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fa03bce3540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bce38c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bce3a50"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bce3be0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bce3d70"/>
        <function-ref name="get" scoped="" ref="0x7fa03bce2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bce21b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bce2340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bce24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fa03bcd9950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fa03bcd9950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd45640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa03cd459b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fa03bcdd780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fa03bcdf150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fa03bcdf150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bcdf4d0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bcdf660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fa03bcdf9f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fa03bcdf9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bcdfd70"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bcde020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bcde1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bcde340"/>
        <function-ref name="get" scoped="" ref="0x7fa03bcde4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bcde660"/>
        <function-ref name="set" scoped="" ref="0x7fa03bcde7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bcde980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fa03bce1ca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fa03bce1ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd45640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa03cd459b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fa03bcb9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fa03bcb7a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fa03bcb7a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd45640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa03cd459b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fa03bcb68d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa03bca6020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03bca6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd45640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa03cd459b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03bca6e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03bca5800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03bca5340"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03bca5cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fa03bca1530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fa03bca1530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd45640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa03cd459b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03bca03d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03bca0d50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03bca0890"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03bc9e260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fa03bc9a020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fa03bc9a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03bc9a3a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fa03bc9a530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fa03bc9a6c0"/>
        <function-ref name="get" scoped="" ref="0x7fa03bc9a850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fa03bc9a9e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03bc9ab70"/>
        <function-ref name="getMode" scoped="" ref="0x7fa03bc9ad00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03bc98020"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03bc981b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fa03bc98340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fa03bc984d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fa03bc9de50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03bc9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd45640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fa03cd459b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03bc9cca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03bc9b670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03bc9b1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03bc9bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fa03bce4590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fa03bce4590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bce4910"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bce4aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bce4c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bce4dc0"/>
        <function-ref name="get" scoped="" ref="0x7fa03bc94020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bc941b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bc94340"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bc944d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fa03bc92c50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fa03bc92c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bc91020"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bc911b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fa03bc91340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fa03bc8f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bc91660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bc917f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fa03bc91980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fa03bc91b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bc91ca0"/>
        <function-ref name="get" scoped="" ref="0x7fa03bc91e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fa03bc90020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fa03bc901b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fa03bc90340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fa03bc905d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fa03bc90760"/>
        <function-ref name="set" scoped="" ref="0x7fa03bc908f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fa03bc90a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fa03bc90c10"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bc914d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fa03bc90da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fa03bc939e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fa03bc939e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bc93d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bc92020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bc921b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bc92340"/>
        <function-ref name="get" scoped="" ref="0x7fa03bc924d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bc92660"/>
        <function-ref name="set" scoped="" ref="0x7fa03bc927f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bc92980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa03bc8a1b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa03bc8a1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa03bc8a530"/>
        <function-ref name="stop" scoped="" ref="0x7fa03bc8a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa03bc7bcb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03bc7bcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa03bc7a0a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa03bc7a230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa03bc7a3c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa03bc7a550"/>
        <function-ref name="setCca" scoped="" ref="0x7fa03bc7a6e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa03bc7a870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fa03bc77990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa03bc77990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa03bc77d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fa03bc7b020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fa03bc7b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03bc7b3a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03bc7b530"/>
        <function-ref name="modify" scoped="" ref="0x7fa03bc7b6c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03bc7b850"/>
        <function-ref name="resend" scoped="" ref="0x7fa03bc7b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa03bc7e6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa03bc7e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa03bc7ea40"/>
        <function-ref name="stop" scoped="" ref="0x7fa03bc7ebd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fa03bc79150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fa03bc79150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa03bc794d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa03bc6d970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03bc6d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa03bc6dcf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa03bc6de80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa03bc6c030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa03bc6c1c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fa03bc6c350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa03bc6c4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fa03bc60c60" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa03bc60c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa03bc63210"/>
        <function-ref name="clear" scoped="" ref="0x7fa03bc63940"/>
        <function-ref name="isValid" scoped="" ref="0x7fa03bc64ac0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bc5a090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fa03bc45020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bc45020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bc453a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bc45530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fa03bc45890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa03bc45890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bc45c10"/>
        <function-ref name="write" scoped="" ref="0x7fa03bc45da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fa03bc6c900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fa03bc6c900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa03bc6cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fa03bc48530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bc48530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bc488b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fa03bc59a80" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fa03bc59a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fa03bc59e00"/>
        <function-ref name="disable" scoped="" ref="0x7fa03bc58020"/>
        <function-ref name="captured" scoped="" ref="0x7fa03bc581b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fa03bc58340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fa03bc6bae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fa03bc6bae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03bc67390"/>
        <function-ref name="fired" scoped="" ref="0x7fa03bc69360"/>
        <function-ref name="startAt" scoped="" ref="0x7fa03bc69ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03bc69820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fa03bc67850"/>
        <function-ref name="start" scoped="" ref="0x7fa03bc6a970"/>
        <function-ref name="stop" scoped="" ref="0x7fa03bc6ae80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa03bc67d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03bc67d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa03bc660a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa03bc66230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa03bc663c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa03bc66550"/>
        <function-ref name="getPower" scoped="" ref="0x7fa03bc666e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa03bc66870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fa03bc4a550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bc4a550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bc4a8d0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bc4aa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fa03bc4ae00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bc4ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bc491c0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bc49350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fa03bc3ed40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fa03bc3ed40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03bc420e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fa03bc42270"/>
        <function-ref name="sfd" scoped="" ref="0x7fa03bc42400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa03bc6ebc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03bc6ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03bc6d020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03bc6d1b0"/>
        <function-ref name="modify" scoped="" ref="0x7fa03bc6d340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03bc6d4d0"/>
        <function-ref name="resend" scoped="" ref="0x7fa03bc6d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fa03bc4cd10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bc4cd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa03bc4b0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa03bc4b270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa03bc4b400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fa03bc48c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bc48c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bc47020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fa03bc509b0" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa03bc509b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bc50d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bc4e020"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bc4e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bc4e340"/>
        <function-ref name="get" scoped="" ref="0x7fa03bc4e4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bc4e660"/>
        <function-ref name="set" scoped="" ref="0x7fa03bc4e7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bc4e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03bc6fc60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03bc6fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03bc6e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa03bc66bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03bc66bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa03bc65020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa03bc651b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa03bc65340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fa03bc51e80" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa03bc51e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03bc59220"/>
        <function-ref name="isSet" scoped="" ref="0x7fa03bc593b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03bc59540"/>
        <function-ref name="set" scoped="" ref="0x7fa03bc596d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fa03bc473e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bc473e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bc47960"/>
        <function-ref name="write" scoped="" ref="0x7fa03bc47af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa03bc4c020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa03bc4c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03bc4c3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03bc4c530"/>
        <function-ref name="request" scoped="" ref="0x7fa03bc4c6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa03bc4c850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03bc4c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fa03bc58690" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fa03bc58690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bc58b10"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bc58ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bc58e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bc50020"/>
        <function-ref name="get" scoped="" ref="0x7fa03bc501b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bc50340"/>
        <function-ref name="set" scoped="" ref="0x7fa03bc504d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bc50660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fa03bc44130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa03bc44130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bc444b0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bc44640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fa03bc449c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bc449c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bc44d40"/>
        <function-ref name="write" scoped="" ref="0x7fa03bc43020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fa03bc496d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa03bc496d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bc49a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fa03bc4ecd0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fa03bc4ecd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bc4d0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bc4d230"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bc4d3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bc4d550"/>
        <function-ref name="get" scoped="" ref="0x7fa03bc4d6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bc4d870"/>
        <function-ref name="set" scoped="" ref="0x7fa03bc4da00"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bc4db90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa03bc426c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03bc426c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03bc42a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03bc42bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03bc42d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03bc41020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03bc411b0"/>
        <function-ref name="get" scoped="" ref="0x7fa03bc41340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03bc414d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03bc41b10"/>
        <function-ref name="set" scoped="" ref="0x7fa03bc41660"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03bc417f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03bc41980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fa03bc465e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bc465e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bc46960"/>
        <function-ref name="write" scoped="" ref="0x7fa03bc46af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa03bc6e320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa03bc6e320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa03bc6e6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03bc6e830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fa03bc4b780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bc4b780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03bc4bb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03bc4bc90"/>
        <function-ref name="write" scoped="" ref="0x7fa03bc4be20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03bc4a020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03bc4a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fa03bc49de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa03bc49de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bc48180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fa03bc47e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa03bc47e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bc46220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fa03bc6b0f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fa03bc6b0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa03bc6b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa03bba4c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03bba4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba3210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa03bbae020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa03bbae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa03bba8c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03bba8c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba6020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa03bba2670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bba2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba29f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa03bb9be50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa03bb9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb99210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa03bba2e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa03bba2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba0210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa03bb8e2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa03bb8e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb8e670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb8e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa03bb902f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa03bb902f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb90670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb90800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa03bbac370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa03bbac370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbac6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa03bb96670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa03bb96670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb969f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb96b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa03bb912f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03bb912f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb91670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb91800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa03bba6c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa03bba6c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba5020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa03bba5c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa03bba5c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba4020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa03bb9c670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa03bb9c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb9c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb9cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa03bb9ee50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa03bb9ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb9d210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb9d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa03bba0670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa03bba0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba09f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa03bbb08f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03bbb08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa03bbb0c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa03bbb0e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa03bbaf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa03bbabd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03bbabd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbaa0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa03bbaa370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa03bbaa370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbaa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa03bb95a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa03bb95a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb95df0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb94020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa03bbaaac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa03bbaaac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbaae40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa03bb91ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03bb91ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb91e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb90020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa03bbab060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03bbab060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbab3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa03bb97e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa03bb97e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb96210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb963a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa03bba5480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa03bba5480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba5800"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa03bba6480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03bba6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba6800"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba6990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa03bbaf940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa03bbaf940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbafcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa03bb98e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa03bb98e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb97210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb973a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa03bb99670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa03bb99670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb999f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb99b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa03bb97670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa03bb97670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb979f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb97b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa03bb8fad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa03bb8fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb8fe50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb8e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa03bb90ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa03bb90ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb90e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb8f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa03bb9d670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa03bb9d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb9d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb9db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa03bb99e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa03bb99e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb98210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa03bb92ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa03bb92ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb92e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb91020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa03bb9f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa03bb9f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb9f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb9fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa03bb8ead0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa03bb8ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03bb8ee50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03bb8d020"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb8d1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03bb8d340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03bb8d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa03bbaf2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa03bbaf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbaf670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa03bba8490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa03bba8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba8810"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba89a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa03bba4480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa03bba4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba4800"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa03bb9ce50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa03bb9ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb9b210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb9b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa03bba0e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa03bba0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb9f210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb9f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa03bb9b670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa03bb9b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb9b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb9bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa03bba3670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa03bba3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba39f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa03bbae670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa03bbae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbae9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa03bba3e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bba3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bba2210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bba23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03bbb1c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03bbb1c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03bbb0020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03bbb01b0"/>
        <function-ref name="request" scoped="" ref="0x7fa03bbb0340"/>
        <function-ref name="granted" scoped="" ref="0x7fa03bbb04d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03bbb0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa03bba9160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa03bba9160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bba94e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa03bba9e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa03bba9e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bba81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa03bb922f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa03bb922f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb92670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb92800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa03bb94ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa03bb94ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb94e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb92020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa03bbab6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03bbab6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbaba30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa03bb942f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa03bb942f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb94670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb94800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa03bb8f2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa03bb8f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb8f670"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb8f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa03bb9de50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa03bb9de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb9c210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb9c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa03bb98670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa03bb98670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb989f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb98b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa03bbaecc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa03bbaecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbac0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa03bbac9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa03bbac9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bbacd40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa03bb9fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa03bb9fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb9e210"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb9e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa03bba97b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa03bba97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bba9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa03bb9e670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa03bb9e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb9e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb9eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa03bb96e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa03bb96e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb95610"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb957a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa03bb8d7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa03bb8d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03bb8db20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03bb8dcb0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb8de40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03bb8c020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03bb8c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fa03bb80df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fa03bb80df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03bb7d1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fa03bb7d350"/>
        <function-ref name="sfd" scoped="" ref="0x7fa03bb7d4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03bb7d7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03bb7d7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03bb7db40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fa03bb7c020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fa03bb7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa03bb7c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa03bb805c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa03bb805c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa03bb80940"/>
        <function-ref name="stop" scoped="" ref="0x7fa03bb80ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fa03bb74380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fa03bb74380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bb74700"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bb74890"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bb74a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bb74bb0"/>
        <function-ref name="get" scoped="" ref="0x7fa03bb74d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bb73020"/>
        <function-ref name="set" scoped="" ref="0x7fa03bb731b0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bb73340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fa03bb6db90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa03bb6db90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa03bb6c020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa03bb6c1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa03bb6c340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa03bb6c4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa03bb6c660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa03bb6c7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa03bb6c980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa03bb6cb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa03bb6cca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa03bb6ce30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa03bb6b020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa03bb6b1b0"/>
        <function-ref name="sync" scoped="" ref="0x7fa03bb6b340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa03bb6b5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa03bb6b760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fa03bb559d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fa03bb559d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03bb55d50"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03bb54020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fa03bb6bd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fa03bb6bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa03bb68330"/>
        <function-ref name="clear" scoped="" ref="0x7fa03bb68a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fa03bb69ba0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bb67210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fa03bb736b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fa03bb736b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bb73a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bb73bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bb73d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bb72020"/>
        <function-ref name="get" scoped="" ref="0x7fa03bb721b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bb72340"/>
        <function-ref name="set" scoped="" ref="0x7fa03bb724d0"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bb72660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fa03bb66cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03bb66cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb640a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb64230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fa03bb64590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa03bb64590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb64910"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb64aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fa03bb636d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa03bb636d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb63a50"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb63be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa03bb6e330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03bb6e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa03bb6e6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa03bb6e840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa03bb6e9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa03bb6eb60"/>
        <function-ref name="getPower" scoped="" ref="0x7fa03bb6ecf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa03bb6ee80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fa03bb77550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fa03bb77550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03bb778d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fa03bb77a60"/>
        <function-ref name="sfd" scoped="" ref="0x7fa03bb77bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fa03bb6f3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa03bb6f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bb6f720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fa03bb75020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fa03bb75020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fa03bb753a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fa03bb75530"/>
        <function-ref name="toggle" scoped="" ref="0x7fa03bb756c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fa03bb75850"/>
        <function-ref name="get" scoped="" ref="0x7fa03bb759e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fa03bb75b70"/>
        <function-ref name="set" scoped="" ref="0x7fa03bb75d00"/>
        <function-ref name="clr" scoped="" ref="0x7fa03bb74020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fa03bb62020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03bb62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb623a0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb62530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03bb78620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03bb78620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03bb789a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa03bb6d1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03bb6d1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa03bb6d560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa03bb6d6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa03bb6d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03bb76020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03bb76020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03bb763a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fa03bb716e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fa03bb716e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03bb71a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03bb71bf0"/>
        <function-ref name="request" scoped="" ref="0x7fa03bb71d80"/>
        <function-ref name="granted" scoped="" ref="0x7fa03bb70020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03bb701b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fa03bb64e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa03bb64e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb631c0"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb63350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fa03bb70530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa03bb70530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03bb708b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03bb70a40"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb70bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03bb70d60"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03bb6f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fa03bb628b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa03bb628b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bb62e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fa03bb767c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fa03bb767c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fa03bb76b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa03bb61150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03bb61150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03bb614d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03bb61660"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03bb617f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03bb61980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03bb61b10"/>
        <function-ref name="get" scoped="" ref="0x7fa03bb61ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03bb61e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03bb604d0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bb60020"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03bb601b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03bb60340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fa03bb663e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03bb663e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03bb66760"/>
        <function-ref name="write" scoped="" ref="0x7fa03bb668f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fa03bb67b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa03bb67b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bb66020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fa03bb72a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fa03bb72a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fa03bb72dd0"/>
        <function-ref name="disable" scoped="" ref="0x7fa03bb71020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fa03bb711b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fa03bb71340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fa03bb6fad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03bb6fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03bb6e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fa03bb78ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fa03bb78ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fa03bb770a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03bb77230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa03baf5a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa03baf5a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa03baf5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa03baf9670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03baf9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa03baf99f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa03baf9b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa03baf9d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa03baf6020"/>
        <function-ref name="getPower" scoped="" ref="0x7fa03baf61b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa03baf6340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fa03baf4550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa03baf4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa03baf3b00"/>
        <function-ref name="clear" scoped="" ref="0x7fa03baf12a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fa03baf33d0"/>
        <function-ref name="set" scoped="" ref="0x7fa03baf19d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fa03baf50c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03baf50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa03baf5440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa03baf55d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa03baf5760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fa03baec480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa03baec480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03baec800"/>
        <function-ref name="isSet" scoped="" ref="0x7fa03baec990"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03baecb20"/>
        <function-ref name="set" scoped="" ref="0x7fa03baeccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa03baf0660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa03baf0660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa03baefce0"/>
        <function-ref name="clear" scoped="" ref="0x7fa03baed460"/>
        <function-ref name="isValid" scoped="" ref="0x7fa03baef5b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03baedb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa03baf66e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa03baf66e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa03baf6a60"/>
        <function-ref name="noAck" scoped="" ref="0x7fa03baf6bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa03baf6d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fa03bae5020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fa03bae5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fa03bae53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fa03baebd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03baebd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa03bae80e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa03bae8270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa03bae8400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa03bae8590"/>
        <function-ref name="getPower" scoped="" ref="0x7fa03bae8720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa03bae88b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa03badc4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa03badc4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03badc820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03badc9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03badcb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03badccd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03badce60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fa03bae5a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa03bae5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa03bae3020"/>
        <function-ref name="clear" scoped="" ref="0x7fa03bae3750"/>
        <function-ref name="isValid" scoped="" ref="0x7fa03bae48d0"/>
        <function-ref name="set" scoped="" ref="0x7fa03bae3e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fa03bae7640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03bae7640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa03bae79c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa03bae7b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa03bae7ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fa03bade8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fa03bade8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03badec30"/>
        <function-ref name="isSet" scoped="" ref="0x7fa03badedc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03badc020"/>
        <function-ref name="set" scoped="" ref="0x7fa03badc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fa03badb3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fa03badb3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03bada020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fa03bada6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fa03bada6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03bad93d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa03bae2af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa03bae2af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa03badf0d0"/>
        <function-ref name="clear" scoped="" ref="0x7fa03badf800"/>
        <function-ref name="isValid" scoped="" ref="0x7fa03bae0970"/>
        <function-ref name="set" scoped="" ref="0x7fa03bade020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa03bae8c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa03bae8c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa03bae7020"/>
        <function-ref name="noAck" scoped="" ref="0x7fa03bae71b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa03bae7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fa03ba89020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fa03ba89020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03ba89c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fa03ba88300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fa03ba88300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fa03ba87150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fa03ba87ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fa03ba87610"/>
        <function-ref name="overflow" scoped="" ref="0x7fa03ba86020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fa03ba83450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fa03ba83450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fa03ba80a20"/>
        <function-ref name="fired" scoped="" ref="0x7fa03ba81020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fa03ba81da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fa03ba81920"/>
        <function-ref name="getdt" scoped="" ref="0x7fa03ba7f4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fa03ba7f020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fa03ba814a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fa03ba82090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fa03ba80410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fa03ba82560"/>
        <function-ref name="stop" scoped="" ref="0x7fa03ba82a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fa03ba6ec60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fa03ba6ec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6d210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fa03ba78020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fa03ba78020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fa03ba72c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fa03ba72c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba71020"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba711b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fa03ba6c670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fa03ba6c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fa03ba65e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fa03ba65e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba64210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba643a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fa03ba6ce50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fa03ba6ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6b210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fa03ba582f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fa03ba582f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba58670"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba58800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fa03ba5a2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fa03ba5a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba5a670"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba5a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fa03ba77370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fa03ba77370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba776f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fa03ba60670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fa03ba60670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba609f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba60b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fa03ba5c2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fa03ba5c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba5c670"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba5c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fa03ba71c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fa03ba71c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6f020"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fa03ba6fc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fa03ba6fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6e020"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fa03ba66670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fa03ba66670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba669f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba66b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fa03ba68e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fa03ba68e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba67210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba673a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fa03ba6b670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fa03ba6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fa03ba7a970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fa03ba7a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fa03ba7acf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fa03ba7ae80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fa03ba79030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fa03ba75d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fa03ba75d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba740a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fa03ba74370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fa03ba74370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba747f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fa03ba5fa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fa03ba5fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba5fdf0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fa03ba74ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fa03ba74ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba74e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fa03ba5cad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fa03ba5cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba5ce50"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba5a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fa03ba75060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fa03ba75060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba753e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fa03ba61e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fa03ba61e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba60210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fa03ba6f480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fa03ba6f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6f800"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fa03ba71480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fa03ba71480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba71800"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba71990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fa03ba79950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fa03ba79950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba79cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fa03ba63e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fa03ba63e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba61210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fa03ba64670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fa03ba64670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba649f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba64b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fa03ba61670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fa03ba61670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba619f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba61b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fa03ba59ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fa03ba59ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba59e50"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba58020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fa03ba5aad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fa03ba5aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba5ae50"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fa03ba67670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fa03ba67670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba679f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba67b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fa03ba64e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fa03ba64e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba63210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba633a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fa03ba5dad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fa03ba5dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba5de50"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba5c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fa03ba6a670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fa03ba6a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fa03ba58ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fa03ba58ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03ba58e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03ba57020"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba571b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03ba57340"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03ba574d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fa03ba79300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fa03ba79300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba79680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fa03ba72490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fa03ba72490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba72810"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba729a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fa03ba6e480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fa03ba6e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6e800"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6e990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fa03ba66e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fa03ba66e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba65210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba653a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fa03ba6be50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fa03ba6be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6a210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fa03ba65670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fa03ba65670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba659f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba65b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fa03ba6d670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fa03ba6d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fa03ba78670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fa03ba78670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba789f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fa03ba6de50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fa03ba6de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba6c210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba6c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03ba7bd00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03ba7bd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03ba7a0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03ba7a230"/>
        <function-ref name="request" scoped="" ref="0x7fa03ba7a3c0"/>
        <function-ref name="granted" scoped="" ref="0x7fa03ba7a550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03ba7a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fa03ba73160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fa03ba73160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba734e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fa03ba73e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fa03ba73e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba721c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fa03ba5d2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fa03ba5d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba5d670"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba5d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fa03ba5ead0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fa03ba5ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba5ee50"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba5d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fa03ba756b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fa03ba756b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba75a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fa03ba5e2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fa03ba5e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba5e670"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba5e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fa03ba592f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fa03ba592f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba59670"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba59800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fa03ba67e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fa03ba67e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba66210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba663a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fa03ba63670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fa03ba63670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba639f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba63b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fa03ba78cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fa03ba78cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba770a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fa03ba779c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fa03ba779c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba77d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fa03ba6ae50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fa03ba6ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba68210"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fa03ba737b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fa03ba737b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fa03ba73b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fa03ba68670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fa03ba68670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba689f0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba68b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fa03ba60e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fa03ba60e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fa03ba5f610"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba5f7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fa03ba577a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fa03ba577a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fa03ba57b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fa03ba57cb0"/>
        <function-ref name="write" scoped="" ref="0x7fa03ba57e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fa03ba56020"/>
        <function-ref name="readDone" scoped="" ref="0x7fa03ba561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fa03ba2da20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa03ba2da20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa03ba2dda0"/>
        <function-ref name="rand32" scoped="" ref="0x7fa03ba2c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fa03ba2b920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fa03ba2b920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03ba2d560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03ba31990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03ba31990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03ba31d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fa03ba27a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa03ba27a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa03ba27da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fa03ba25020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fa03ba28940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fa03ba28940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03ba27560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03ba28080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03ba28080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03ba28400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa03ba2faa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa03ba2faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa03ba2fe20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa03ba29020"/>
        <function-ref name="isState" scoped="" ref="0x7fa03ba291b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa03ba29340"/>
        <function-ref name="requestState" scoped="" ref="0x7fa03ba294d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa03ba29660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa03ba0b020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa03ba0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03ba0b3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03ba0b530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03ba0b6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03ba0b850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03ba0b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa03ba0c220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03ba0c220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03ba0c5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03ba0c730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03ba0c8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03ba0ca50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03ba0cbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa03ba07e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa03ba07e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03ba06210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03ba063a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03ba06530"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03ba066c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03ba06850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa03ba0aa10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03ba0aa10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03ba0ad90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03ba07020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03ba071b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03ba07340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03ba074d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fa03ba058f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fa03ba058f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fa03ba05c70"/>
        <function-ref name="rand32" scoped="" ref="0x7fa03ba05e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03ba07750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03ba07750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03ba07ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa03ba04170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03ba04170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa03ba044f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa03ba04680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa03ba04810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fa03ba06ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa03ba06ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa03ba06e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa03ba05020"/>
        <function-ref name="isState" scoped="" ref="0x7fa03ba051b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa03ba05340"/>
        <function-ref name="requestState" scoped="" ref="0x7fa03ba054d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa03ba05660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa03ba08690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa03ba08690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa03ba08a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa03ba08ba0"/>
        <function-ref name="isState" scoped="" ref="0x7fa03ba08d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa03b9f3020"/>
        <function-ref name="requestState" scoped="" ref="0x7fa03b9f31b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fa03b9f3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa03b9ec950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa03b9ec950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9eccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03b9efaa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03b9efaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9efe20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fa03b9ec200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa03b9ec200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9ec580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa03b9e73f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa03b9e73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9e7770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03b9e8b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03b9e8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03b9e7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03b9ebe30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03b9ebe30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9e81e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa03b9e7a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03b9e7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b9e7df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa03b9e6020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa03b9e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fa03b9e8570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fa03b9e8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9e88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa03b9b9020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa03b9b9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9b93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa03b9b96b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa03b9b96b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b9b9a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b9b9bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9b9d50"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b9b8020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b9b81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa03b9bd8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03b9bd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b9bdc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b9bddf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9bc020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b9bc1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b9bc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fa03b9bcc90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fa03b9bcc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b9bb0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b9bb230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9bb3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b9bb550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b9bb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03b9bc5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03b9bc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9bc960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03b9bebe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03b9bebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03b9bd020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03b9bd1b0"/>
        <function-ref name="request" scoped="" ref="0x7fa03b9bd340"/>
        <function-ref name="granted" scoped="" ref="0x7fa03b9bd4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03b9bd660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fa03b9bba50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fa03b9bba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9bbdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fa03b9ba170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fa03b9ba170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b9ba4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03b9ba680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b9ba810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9ba9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03b9bab30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa03b9afd70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa03b9afd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b9ae180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b9ae310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9ae4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b9ae630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b9ae7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa03b9aeb10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa03b9aeb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9ad020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fa03b980db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fa03b980db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03b97e180"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03b97e310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa03b9ad2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03b9ad2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa03b9ad670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa03b9ad800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa03b9ad990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa03b9adb20"/>
        <function-ref name="getPower" scoped="" ref="0x7fa03b9adcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa03b9ade40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fa03b9b1a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fa03b9b1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b9b1da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b9b0020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9b01b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b9b0340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b9b04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fa03b9acb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fa03b9acb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa03b9ab020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa03b9ab1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa03b9ab340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa03b9ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa03b9ac170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03b9ac170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b9ac4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa03b9ac680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa03b9ac810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fa03b9b1370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fa03b9b1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9b16f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fa03b9b37b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fa03b9b37b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03b9b3b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03b9b3cc0"/>
        <function-ref name="request" scoped="" ref="0x7fa03b9b3e50"/>
        <function-ref name="granted" scoped="" ref="0x7fa03b9b2020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03b9b21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fa03b9b24d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fa03b9b24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b9b2850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b9b29e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9b2b70"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b9b2d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b9b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fa03b9b0840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fa03b9b0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b9b0bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fa03b9af020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fa03b9af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b9af3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03b9af530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b9af6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9af850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03b9af9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fa03b95fdd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fa03b95fdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fa03b95e180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fa03b95e410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fa03b95e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fa03b95e790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fa03b95e920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fa03b95eab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fa03b95ec40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa03b953b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa03b953b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa03b952020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa03b9521b0"/>
        <function-ref name="start" scoped="" ref="0x7fa03b952340"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b9524d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa03b951860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa03b951860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b951be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b951d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b950020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b9501b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b950340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa03b950690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa03b950690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b950a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa03b957ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03b957ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b9540a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b954230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9543c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b954550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b9546e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa03b953080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03b953080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa03b953400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa03b953590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa03b953720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa03b9538b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fa03b952800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fa03b952800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa03b952b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa03b952d10"/>
        <function-ref name="isState" scoped="" ref="0x7fa03b951020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa03b9511b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa03b951340"/>
        <function-ref name="forceState" scoped="" ref="0x7fa03b9514d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fa03b950d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fa03b950d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa03b94f180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa03b94f310"/>
        <function-ref name="start" scoped="" ref="0x7fa03b94f4a0"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b94f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03b954980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03b954980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b954d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa03b94c2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03b94c2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa03b94c650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa03b94c7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa03b94c970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa03b94cb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fa03b94e580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fa03b94e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fa03b94e900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fa03b94ea90"/>
        <function-ref name="isState" scoped="" ref="0x7fa03b94ec20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fa03b94edb0"/>
        <function-ref name="requestState" scoped="" ref="0x7fa03b94d020"/>
        <function-ref name="forceState" scoped="" ref="0x7fa03b94d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa03b93ed70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa03b93ed70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b93d180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b93d310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b93d4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b93d630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b93d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa03b941350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03b941350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b9416d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b941860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9419f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b941b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b941d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa03b93e020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa03b93e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa03b93e3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa03b93e530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa03b93e6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa03b93e850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa03b93e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fa03b9391c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03b9391c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa03b939540"/>
        <function-ref name="noAck" scoped="" ref="0x7fa03b9396d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa03b939860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fa03b93c410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fa03b93c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fa03b93c790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fa03b93c920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fa03b93cab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fa03b93cc40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fa03b93cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fa03b91a690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fa03b91a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b91aa10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fa03b91b860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fa03b91b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b91bbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b91bd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b91a020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b91a1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b91a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fa03b917610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fa03b917610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fa03b917990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fa03b917b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fa03b917cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fa03b917e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fa03b916020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fa03b9161b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fa03b916340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fa03b9164d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fa03b916660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fa03b9167f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fa03b916980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fa03b916b10"/>
        <function-ref name="sync" scoped="" ref="0x7fa03b916ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fa03b915020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fa03b9151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fa03b91c8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fa03b91c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa03b91cc30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa03b91cdc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa03b91b020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa03b91b1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fa03b91b340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa03b91b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fa03b91dce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fa03b91dce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fa03b91c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fa03b9141f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fa03b9141f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fa03b914570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fa03b914700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fa03b914890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fa03b914a20"/>
        <function-ref name="setCca" scoped="" ref="0x7fa03b914bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fa03b914d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa03b91ea80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa03b91ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b91ee00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03b91d020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b91d1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b91d340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03b91d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa03b922020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa03b922020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b9223a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b922530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b9226c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b922850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b9229e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa03b920df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fa03b920df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b91f1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fa03b91ace0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fa03b91ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fa03b9180a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fa03b918230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fa03b9183c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fa03b918550"/>
        <function-ref name="getPower" scoped="" ref="0x7fa03b9186e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fa03b918870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fa03b9154d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fa03b9154d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fa03b915950"/>
        <function-ref name="changed" scoped="" ref="0x7fa03b915ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fa03b915c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fa03b915e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fa03b918b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fa03b918b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b917020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fa03b9171b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fa03b917340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03b920210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03b920210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b920590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fa03b913d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fa03b913d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fa03b9120e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fa03b912270"/>
        <function-ref name="led1On" scoped="" ref="0x7fa03b912400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fa03b912590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fa03b912720"/>
        <function-ref name="get" scoped="" ref="0x7fa03b9128b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fa03b912a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fa03b9111b0"/>
        <function-ref name="set" scoped="" ref="0x7fa03b912bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fa03b912d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fa03b911020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa03b91f470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa03b91f470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa03b91f7f0"/>
        <function-ref name="source" scoped="" ref="0x7fa03b91f980"/>
        <function-ref name="address" scoped="" ref="0x7fa03b91fb10"/>
        <function-ref name="destination" scoped="" ref="0x7fa03b91fca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa03b91fe30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa03b91e020"/>
        <function-ref name="type" scoped="" ref="0x7fa03b91e1b0"/>
        <function-ref name="setType" scoped="" ref="0x7fa03b91e340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa03b91e4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa03b91e660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa03b91e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fa03b9130f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fa03b9130f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fa03b913470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fa03b913600"/>
        <function-ref name="request" scoped="" ref="0x7fa03b913790"/>
        <function-ref name="granted" scoped="" ref="0x7fa03b913920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fa03b913ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fa03b88e360" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fa03b88e360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fa03b88e6e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fa03b88e870"/>
        <function-ref name="start" scoped="" ref="0x7fa03b88ea00"/>
        <function-ref name="stop" scoped="" ref="0x7fa03b88eb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa03b88d3f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa03b88d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b88d770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b88d900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b88da90"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b88dc20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b88ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fa03b88a1d0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fa03b88a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b88a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa03b88a7e0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa03b88a7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b88ab60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03b88acf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b88ae80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b889030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03b8891c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fa03b887a20" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fa03b887a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fa03cd45200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa03b885020"/>
        <function-ref name="clear" scoped="" ref="0x7fa03b885750"/>
        <function-ref name="isValid" scoped="" ref="0x7fa03b886890"/>
        <function-ref name="set" scoped="" ref="0x7fa03b885e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fa03b87f890" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fa03b87f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fa03b87fc10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fa03b87fda0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fa03b87e020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fa03b87e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03b88b5c0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03b88b5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b88b940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fa03b888b20" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fa03b888b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa03b887020"/>
        <function-ref name="noAck" scoped="" ref="0x7fa03b8871b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa03b887340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa03b889470" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa03b889470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa03b8897f0"/>
        <function-ref name="source" scoped="" ref="0x7fa03b889980"/>
        <function-ref name="address" scoped="" ref="0x7fa03b889b10"/>
        <function-ref name="destination" scoped="" ref="0x7fa03b889ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa03b889e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa03b888020"/>
        <function-ref name="type" scoped="" ref="0x7fa03b8881b0"/>
        <function-ref name="setType" scoped="" ref="0x7fa03b888340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa03b8884d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa03b888660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa03b8887f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fa03b883af0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fa03b883af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fa03cd46680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fa03cd469f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fa03b8810d0"/>
        <function-ref name="clear" scoped="" ref="0x7fa03b881800"/>
        <function-ref name="isValid" scoped="" ref="0x7fa03b882970"/>
        <function-ref name="set" scoped="" ref="0x7fa03b87f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa03b7e8020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa03b7e8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b7e83a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b7e8530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b7e86c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b7e8850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b7e89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa03b7e8c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa03b7e8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b7e7020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03b7e71b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b7e7340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b7e74d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03b7e7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa03b7e78b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa03b7e78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa03b7e7c30"/>
        <function-ref name="source" scoped="" ref="0x7fa03b7e7dc0"/>
        <function-ref name="address" scoped="" ref="0x7fa03b7e6020"/>
        <function-ref name="destination" scoped="" ref="0x7fa03b7e61b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa03b7e6340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa03b7e64d0"/>
        <function-ref name="type" scoped="" ref="0x7fa03b7e6660"/>
        <function-ref name="setType" scoped="" ref="0x7fa03b7e67f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa03b7e6980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa03b7e6b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa03b7e6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa03b7e5020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa03b7e5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa03b7e53a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fa03b7e5530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa03b7e56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa03ae98e60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa03ae98e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03ae96210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03ae963a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03ae96530"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03ae966c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03ae96850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa03ae96aa0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa03ae96aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03ae96e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03ae95020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03ae951b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03ae95340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03ae954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa03ae95720" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa03ae95720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa03ae95aa0"/>
        <function-ref name="source" scoped="" ref="0x7fa03ae95c30"/>
        <function-ref name="address" scoped="" ref="0x7fa03ae95dc0"/>
        <function-ref name="destination" scoped="" ref="0x7fa03ae94020"/>
        <function-ref name="setSource" scoped="" ref="0x7fa03ae941b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa03ae94340"/>
        <function-ref name="type" scoped="" ref="0x7fa03ae944d0"/>
        <function-ref name="setType" scoped="" ref="0x7fa03ae94660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa03ae947f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa03ae94980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa03ae94b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fa03ae94da0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fa03ae94da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fa03ae93180"/>
        <function-ref name="noAck" scoped="" ref="0x7fa03ae93310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fa03ae934a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fa03ae8a7f0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa03ae8a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03ae8ab70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03ae8ad00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03ae89020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03ae891b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03ae89340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fa03ae895f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03ae895f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03ae89970"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03ae89b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03ae89c90"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03ae89e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03ae88020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa03ae88270" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa03ae88270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa03ae885f0"/>
        <function-ref name="source" scoped="" ref="0x7fa03ae88780"/>
        <function-ref name="address" scoped="" ref="0x7fa03ae88910"/>
        <function-ref name="destination" scoped="" ref="0x7fa03ae88aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa03ae88c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa03ae88dc0"/>
        <function-ref name="type" scoped="" ref="0x7fa03ae87020"/>
        <function-ref name="setType" scoped="" ref="0x7fa03ae871b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa03ae87340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa03ae874d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa03ae87660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa03b84f930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03b84f930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b84fcb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b84fe40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b84c020"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b84c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b84c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fa03b7fd400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fa03b7fd400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b7fd7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b7fd930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b7fdac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b7fdc50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b7fdde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fa03b7ffdf0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fa03b7ffdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fa03b7fe1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b7fe350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b7fe4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fa03b7fe670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fa03b7fe800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fa03b7fb720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa03b7fb720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b7fbaa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03b7fbc30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b7fbdc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b7fa020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03b7fa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7fa03b7feb80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7fa03b7feb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7fa03b7fd020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fa03b7fa480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fa03b7fa480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03b7fa800"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03b7fa990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fa03b7fac60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fa03b7fac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fa03b7f9020"/>
        <function-ref name="runTask" scoped="" ref="0x7fa03b7f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fa03b7fc060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa03b7fc060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa03b7fc3e0"/>
        <function-ref name="source" scoped="" ref="0x7fa03b7fc570"/>
        <function-ref name="address" scoped="" ref="0x7fa03b7fc700"/>
        <function-ref name="destination" scoped="" ref="0x7fa03b7fc890"/>
        <function-ref name="setSource" scoped="" ref="0x7fa03b7fca20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa03b7fcbb0"/>
        <function-ref name="type" scoped="" ref="0x7fa03b7fcd40"/>
        <function-ref name="setType" scoped="" ref="0x7fa03b7fb020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa03b7fb1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa03b7fb340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa03b7fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fa03b7db020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fa03b7db020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fa03b7db3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fa03b7db530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fa03b7db6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fa03b7db850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fa03b7db9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fa03b7dc910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fa03b7dc910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fa03b7dcc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fa03b7dbc30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fa03b7dbc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fa03b7da020"/>
        <function-ref name="source" scoped="" ref="0x7fa03b7da1b0"/>
        <function-ref name="address" scoped="" ref="0x7fa03b7da340"/>
        <function-ref name="destination" scoped="" ref="0x7fa03b7da4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fa03b7da660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fa03b7da7f0"/>
        <function-ref name="type" scoped="" ref="0x7fa03b7da980"/>
        <function-ref name="setType" scoped="" ref="0x7fa03b7dab10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fa03b7daca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fa03b7dae30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fa03b7d9020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fa03cd3be50" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fa03cd3ca80" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7fa03cd30020" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7fa03cd2de80" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7fa03cd2dbc0" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7fa03cd321f0" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7fa03cd34a00" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7fa03cd30dd0" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fa03cd307e0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fa03cd30b40" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7fa03cd2d2a0" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7fa03cd2d020" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7fa03cd2e840" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7fa03cd2e5c0" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7fa03cd317c0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7fa03cd34270" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7fa03cd31020" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fa03cd329a0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fa03cd32d00" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fa03ccee020" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fa03ccf1270" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fa03ccf0840" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fa03ccf2b00" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fa03ccf19e0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fa03ccf5d00" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fa03ccf2420" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fa03ccf0120" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fa03ce5f7e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fa03d127700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fa03cd85a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fa03cd831f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fa03cd852b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fa03cefd020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fa03d89de80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fa03d1e5e20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fa03d1e5610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fa03d1d9770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fa03d1d7020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fa03cc8ba00" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fa03cc8a1f0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fa03cc8a9d0" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fa03cc89940" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fa03cc86120" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa03cc86930" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fa03cc89190" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa03cc854c0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fa03cc85240" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fa03cc8b270" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fa03cc88190" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fa03cc88920" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fa03cc7b270" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fa03cc7b9a0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fa03cc7d420" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fa03cc7a820" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa03cc7db20" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fa03cc7a0e0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa03cc7e610" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fa03cc7ece0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fa03cc50070" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fa03cc507c0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fa03cc4b2e0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa03cc4b060" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7fa03cc4ad30" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fa03cc53870" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fa03cc4f780" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fa03cc49520" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7fa03cc47020" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa03cc49d70" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fa03cc4f020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa03cc51870" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7fa03cc47910" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fa03cc4c020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7fa03cc4a5f0" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fa03cc51070" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7fa03cc4bb80" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa03cc569c0" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fa03cc4e020" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fa03cc4c7c0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fa03cc4e7e0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fa03cc53120" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fa03c9282a0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fa03c94e180"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa03c928020" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fa03c931d60" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa03c931ae0" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fa03c9331f0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fa03c933cb0" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa03c933a30" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fa03c92e7a0" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa03c92e1c0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa03c92e510" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fa03c92f2b0" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa03c932c40" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fa03c92f020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fa03c92abf0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa03c92a970" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fa03c92b020" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa03c9299a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fa03c929cc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fa03c950d50"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fa03c92c9f0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa03c92c770" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fa03c926730" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa03c94e180"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fa03c926150" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fa03c9264a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa03c94e180"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fa03c925580" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fa03c94e180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fa03c913110" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa03c917e40" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fa03c912600" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa03c912380" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fa03c917460" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa03c913960" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7fa03c93c3f0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c93c170" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fa03c93b490" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c93b210" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa03c9387b0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c9381b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03c9384e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa03c9378a0" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fa03c93a930" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c93a370" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03c93a6a0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa03c9212c0" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fa03c936930" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fa03c936cb0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03c921020" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa03c91d970" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c91d370" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03c91d6a0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa03c91ca60" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa03c920630" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c9203b0" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa03c91fb80" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c91f5a0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa03c91f8f0" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fa03c90e2b0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa03c910b50" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fa03c90e020" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fa03c90a980" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa03c90a380" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fa03c90a6f0" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fa03c90ed90" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fa03d891110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa03c90eb10" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fa03c90c880" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa03c90c600" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fa03c910350" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa03c9100d0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fa03c90d990" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa03c90d710" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03c9ad8e0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03c9ad8e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fa03c9a47c0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa03c9a7020" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fa03c9a6da0" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fa03c9a67d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fa03c9a6b10" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fa03c9a6020" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fa03c9a28a0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fa03c9a2020" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fa03c9a7800" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fa03c9aa4d0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa03c9aa250" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fa03c9a5dc0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fa03c9a57f0" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fa03c9a5b30" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fa03c9a9020" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa03c9aad10" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa03c9a9820" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fa03c9189c0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
              <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c918060" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fa03c9183b0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03c9186e0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03c8bb350" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03c8bb350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fa03c8bbc70" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03c8b8c70" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03c8b8c70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa03c8b5020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c8b5020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fa03c8b1c50" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c8b5020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa03c8b4ba0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fa03c8b12b0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c8b5020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c8b5020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fa03c8b2bd0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c8b5020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fa03c8b1020" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c8b5020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fa03c8b23b0" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fa03c8b0480" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c8b5020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fa03c8b5b80" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c8b5020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa03c8b5900" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c8b5020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa03c8b43e0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fa03c88f270" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fa03c88fbf0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa03c88f970" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fa03c88d610" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fa03c88d390" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fa03c88c020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fa03c88dd60" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa03c88c710" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fa03c89d810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fa03c89a2a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fa03c89a020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fa03c89c020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fa03c8a3a80" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fa03c89c760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fa03c8a09b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fa03c89d120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fa03c8a0270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fa03c89e0e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fa03c89e9f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa03c89e770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fa03c89acb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fa03c89aa30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fa03c8938f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fa03c893320" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7fa03c893660" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fa03c8977d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa03cce6b00"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fa03cce55a0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fa03c8922b0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fa03c8911f0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fa03c895a30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fa03c8929f0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fa03c896020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fa03c8967b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fa03c8952a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa03cce6b00"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fa03cce55a0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa03c895020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fa03cce6b00"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fa03cce55a0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fa03c87dd60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fa03c878400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fa03c878180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fa03c876020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa03c878d10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fa03c8799a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fa03c8790e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fa03c87a740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fa03c87a4c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fa03c84d1f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03c6fde10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03c6fde10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa03c6f8070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c6f8070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fa03c6f8990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03c6f8070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fa03c6f7ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fa03c6f7270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fa03c6f6270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7fa03c635e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fa03d891930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7fa03c635c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fa03d891930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fa03c570e40" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c570bc0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fa03c571120" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c572e80" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fa03c5747a0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fa03c574520" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fa03c576bd0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fa03c576950" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fa03c5722a0" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fa03c572020" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fa03c570020" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c571d40" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fa03c55e750" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fa03c55e140" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fa03c55e4c0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fa03c56bb50" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c56b530" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fa03c56b8c0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fa03c568d00" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c568a80" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fa03c56cd10" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fa03c56c350" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fa03c56c0d0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fa03c57c5f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c57c370" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fa03c57b7d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c57b550" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fa03c579940" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c5796c0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fa03c562040" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c563d90" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fa03c566030" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c57d9e0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fa03c57dd70" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fa03c563020" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c565c80" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fa03c565450" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c566de0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fa03c5651c0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fa03c560020" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c562d70" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fa03c578a60" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c5787e0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa03c5515e0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c551020" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03c551350" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fa03c54cbb0" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c54c5b0" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03c54c8e0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fa03c550d20" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa03c54f900" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c54f680" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa03c54de00" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c54d820" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa03c54db70" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fa03c5554b0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fa03c5564d0" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fa03c559ae0" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fa03c556cc0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fa03c553020" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa03c52b5e0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa03c52b020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fa03c52b350" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa03c52a8f0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fa03c5262c0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fa03c527340" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fa03c527b80" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03c526020" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa03c528aa0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fa03c5284c0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fa03c528810" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fa03c52a0b0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fa03c52bdf0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fa03c522690" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fa03c525e50" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fa03c535aa0" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fa03c52d350" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fa03c51d840" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c51d580" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fa03c51ed40" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7fa03c9893a0"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fa03c988d10"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c51ea40" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fa03c51bb90" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7fa03c987860"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fa03c984180"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03c51b890" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fa03c5338b0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fa03c5319c0" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fa03c5311f0" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fa03c534020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fa03c533070" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fa03c532190" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fa03c5329b0" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fa03c534880" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fa03c515350" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fa03c5188f0" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fa03c516b00" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fa03c516880" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fa03c5160e0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fa03c5195e0" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fa03c519360" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fa03c518110" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fa03c519e10" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fa03c4ba020" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fa03c4bb9f0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fa03c4bbd40" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fa03c4bc960" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fa03c4bc020" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fa03c4bd820" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fa03c4bdc00" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fa03c4c32a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fa03c4c3020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fa03c4bb270" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fa03c4c0d70" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fa03c4c0af0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fa03c4c13e0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fa03c4c1160" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fa03c4b9270" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fa03c4bd020" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fa03c4bfc50" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fa03c4baa20" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fa03c4c1b60" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fa03c594ea0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fa03c591630"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fa03c4c0390" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fa03c4c4850" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fa03c4c39f0" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fa03c4bf530" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fa03c4b7c50" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa03c4b7c50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fa03c4b4540" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fa03c4b32b0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa03c4b7c50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fa03c4b4cc0" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7fa03c4b3020" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fa03c4b7c50"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa03c4902a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa03c98e550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c490020" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa03c490d80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa03c98e550"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c490b00" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fa03c4a7610" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fa03c594ea0"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fa03c591630"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fa03c499af0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fa03c498ab0" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fa03c498350" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fa03c94e180"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fa03c4992b0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa03c94e180"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fa03c49fb40" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fa03c94e180"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fa03c499020" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fa03c94e560"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fa03c488120" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa03c98e550"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa03c4942c0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa03c98e550"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fa03c4963d0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fa03c496c40" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa03c494020" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa03c493a80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa03c98e550"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fa03c494b90" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fa03c493490" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa03c4937e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fa03c49b190" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa03c49d960" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fa03c49d1f0" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fa03c4a08d0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fa03c373190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa03c372350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fa03c373b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa03c3738b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fa03c3768f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fa03c34c800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fa03c348270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fa03c34c070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fa03c3499a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fa03c349720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7fa03c349020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fa03c34f870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7fa03c34b810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fa03c34b030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fa03c1f6810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fa03c1f50e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fa03c1f5920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fa03c1ce420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c1cfe10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa03c1ce190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fa03c1c9700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c1cad90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa03c1c9110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa03c1c9460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa03c1ca020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa03c98e550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c1cb970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa03c1cbcc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fa03c1cf020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fa03c98e550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c1d09d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa03c1d0d20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fa03c1cdb90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c1cd250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fa03c1cd5a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa03c1cd8f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fa03c1afa40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fa03c1af0d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fa03c1af460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03c1af7a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fa03c1ab020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fa03c1ad2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fa03c1ad630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03c1ad970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fa03c1adce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
              <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fa03c1b18f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fa03c1b1670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fa03c0d0b70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fa03c0cd4e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fa03c0ccaa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fa03c1022b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fa03c103e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fa03c0cb6f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c0cb470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fa03c0cab30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c0ca8b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fa03c0ca020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa03c0c95f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c0c9370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fa03c0bd020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fa03c0bf750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fa03c0b6740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c0b64c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fa03c0bacd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fa03c092390" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fa03c09d1f0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fa03c0aa020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa03c11e020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fa03c11e860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa03c0adcf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa03c11e020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fa03c11e860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fa03c0a0350" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fa03c0a7530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa03c119020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fa03c119860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa03c0a72b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa03c119020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fa03c119860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fa03c097750" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fa03c094cf0" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fa03c0a9a90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa03c11dec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fa03c11c680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fa03c0a7d20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa03c119020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fa03c119860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fa03c0a4b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fa03c0a4910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fa03c0a41f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fa03c097020" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fa03c0a92a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa03c11dec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fa03c11c680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fa03c0a9020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa03c11dec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fa03c11c680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fa03c0a5020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fa03c097e80" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fa03c0a5a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fa03c0a5780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fa03c0a1420" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fa03c0a1ba0" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fa03c098190" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fa03c09b0e0" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fa03c09f270" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fa03c0988d0" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fa03c09d9d0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fa03c0965c0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fa03c0a2390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fa03c124d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fa03c1204d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fa03c096d60" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fa03c093bd0" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fa03c0a6700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fa03c0a6480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fa03c092d30" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c092ab0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fa03c0aa800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fa03c11e020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fa03c11e860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fa03c0a0ac0" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fa03c09c190" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fa03c099940" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fa03c0eeb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa03c0ee730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa03c0996c0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fa03c0eeb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa03c0ee730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fa03c09bbf0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fa03c1022b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fa03c103e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa03c09b970" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fa03c1022b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fa03c103e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fa03c090590" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fa03c094570" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fa03c0a2b40" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fa03c093480" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fa03c09c900" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fa03c09fa50" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fa03c02b600" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fa03c003070" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fa03c016780" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fa03c00bd50" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fa03c00bad0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fa03c01fcb0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fa03c007350" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fa03c010cf0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fa03c017770" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fa03c015770" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fa03c019600" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fa03c019380" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fa03c01bb00" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fa03c012790" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fa03c009c80" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fa03c0048f0" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fa03c00b390" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fa03bfffb60" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fa03bffa270" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fa03c01eb30" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fa03c012020" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fa03c011910" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fa03c017020" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fa03c0209a0" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fa03c00cba0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fa03c00c920" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fa03c020270" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fa03c008b80" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fa03c0037d0" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fa03bffd350" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fa03bffca90" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fa03c006270" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fa03c002020" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fa03c009520" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fa03c000bb0" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fa03c01c270" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fa03c00d020" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fa03c000020" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fa03c004190" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fa03c010520" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fa03c0102a0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fa03bffdaf0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fa03c00c1f0" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fa03c007ac0" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fa03c01f550" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fa03c0da4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa03c0da080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fa03c01f2d0" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fa03c0da4a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fa03c0da080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fa03c013770" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fa03c01b390" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa03c01b110" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fa03c011120" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fa03c012e70" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fa03bfff3b0" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fa03c01ac40" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fa03c01c9e0" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fa03c00d9e0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fa03c00d760" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fa03d890520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fa03c01e420" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fa03c002740" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fa03c0069e0" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fa03c008420" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fa03c00e740" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fa03c00e4c0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fa03c013020" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fa03c016020" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fa03bffc2b0" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fa03c01a4b0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fa03c01a230" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fa03bffe350" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fa03c015020" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fa03bffeb10" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fa03bf57780" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fa03bf56020" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fa03bf208b0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fa03bf1f9c0" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fa03bf20020" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fa03bf1f190" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fa03bf1e350" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7fa03bf1b460" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fa03bf13de0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa03bf1dd90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa03bf13b60" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa03bf1dd90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fa03bf17e00" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fa03bf14960" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa03bf1dd90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa03bf146e0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fa03bf1dd90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fa03bf132b0" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fa03bf1dd90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa03bd085e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fa03bd08360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fa03bcf4b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fa03bcf41c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fa03bcf4530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03bcf4860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fa03bcf3880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fa03bcf32c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fa03bcf35f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03bcdb530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03bcdb530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa03bcdb770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03bcdb770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fa03bcd92e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03bcdb770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fa03bcd9060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03bcdb770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fa03bc77580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fa03bc65af0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fa03bc65af0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fa03bc65d30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03bc65d30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fa03bc5fbc0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03bc65d30"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03bc5f940" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fa03bc5ed80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03bc5eb00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fa03bc62920" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03bc626a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa03bc600c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03bc65d30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03bc5da80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fa03bc5dde0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fa03bc65d30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fa03bc3e9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fa03bc3e020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fa03bc3e750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fa03bc3f7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fa03bc3f020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fa03bc43d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fa03d890920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fa03bc545f0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fa03d890160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03bc54370" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fa03bc575f0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03bc57370" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fa03bc515f0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03bc51370" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fa03bc525f0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fa03bc52370" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fa03c93f350"/>
                <typename><typedef-ref name="message_t" ref="0x7fa03c93e9a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fa03ba2e5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa03ba2e5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fa03ba2b2a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fa03d1e3020"/>
            <typename><typedef-ref name="error_t" ref="0x7fa03d1db1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa03ba2e5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fa03ba2b020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fa03ba2e5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7fa03b8441f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fa03d1e9090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
