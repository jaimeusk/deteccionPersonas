<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fb8597bbcd0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fb859b45ca0"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fb859b45ca0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fb859aa6110"/></to>
    </wire>
    <wire loc="27:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb8597b8360"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb859a8e0d0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb859a8e0d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb859a8cc40"/></to>
    </wire>
    <wire loc="29:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7fb8597ab820"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb8596ec980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8596ec980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb8596e6d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7fb8597a8cd0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb8593bd260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8593bd260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb8596e6d80"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="TimerDormir" scoped="" ref="0x7fb8597a21c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb8593b7b00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8593b7b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb8596e6d80"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb859744c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb858605c30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb858605c30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb857cb5aa0"/></to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb859733be0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb8586048b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb8586048b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb857cb4720"/></to>
    </wire>
    <wire loc="34:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7fb859720190"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb8586aa360"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb8586aa360"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb8593a3690"/></to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb859734020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb858605020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb858605020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb857cb7e60"/></to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb859724840"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb8585fe910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb8585fe910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb8586a65c0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="37:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb8597180f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb85939c480"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb85939c480"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb859363020"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb85877cdd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb858805b70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb858823750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb858844080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb858995620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb858a8ac60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb8592217e0"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb857e3f020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb858f5d020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb8592cc510"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb8596dd9a0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fb859aa6780"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fb859fed1e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fb859fed1e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fb859b92140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fb859aa51d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb859b40110"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb859b40110"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb859b331a0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859aa58d0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fb859b35130"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fb859b33810"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fb859b31020"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7fb859b1a900"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7fb859b1a900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb859b01850"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fb859b31700"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb859b34640"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7fb859b31de0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb859a63600"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb859b01850"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb859ae71c0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb859af8de0"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb859ae7830"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb859c68c80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb859ae6af0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859b91040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fb859b8c490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fb859dc59a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb859a63600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb859a8c640"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fb859a831d0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fb859a8dd80"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fb859a8dd80"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb8597e6480"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fb859a894d0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fb859a65020"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fb859a65020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb8597d0b20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fb859a887f0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fb859a64380"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fb859a64380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb8597c91b0"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8597d4610"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7fb8599f78a0"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7fb8599f78a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598a0b90"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8597cfde0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7fb8599f4020"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7fb8599f4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85989a060"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8597c8480"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7fb8599f28a0"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7fb8599f28a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859895540"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fb859a48580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85994f060"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fb859a2f710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859918740"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7fb8599a5d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859908540"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7fb8599aad40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859869060"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7fb8599d3d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859903b90"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7fb859a2a710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85990d060"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7fb859a108a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598d7740"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7fb8599e28a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859874540"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7fb8599ced50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598f7540"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7fb8599bad40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85988a060"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7fb85999bd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859864540"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fb859a41d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85993e060"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7fb8599cb580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598f2b90"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fb859a3cd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859934b90"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7fb859a22e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598fd060"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7fb859a08020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598c6540"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7fb8599ef020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859890b90"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7fb8599da020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859864540"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fb859a4d580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85995a740"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fb859a34580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859924d10"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7fb859a1a710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598ec060"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7fb8599d5580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859908540"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7fb8599b2570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859879060"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7fb85999d570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859864540"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7fb8599c1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598a6540"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7fb859a15710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598e2dc0"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7fb8599fc8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598ab060"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7fb8599e78a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859880b90"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7fb8599b0d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859874540"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7fb8599c9d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598b6540"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fb859a46d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859949540"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fb859a2de50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859913b90"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7fb8599ed8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85988a060"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7fb859a28e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859908540"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7fb859a0d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598d2b90"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7fb8599df020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85986fb90"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7fb8599c4d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598ab060"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fb859a50530"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859993d10"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fb859a39580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85992e060"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7fb859a1f710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598f7540"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7fb859a068a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598c1b90"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7fb8599bfd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598ec060"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7fb8599b7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859885540"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7fb8599a7570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859864540"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7fb859a018a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598b6540"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7fb8599bc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598e7540"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fb859a4bd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859955b90"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fb859a32e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85991d260"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7fb859a18e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598e7540"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7fb8599c6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598b1b90"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7fb8599ac570"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85986fb90"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7fb859a12020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598dc260"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7fb8599f9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598a6540"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7fb8599e4020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859879060"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fb859a43580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859944b90"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7fb8599e9020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859885540"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fb859a3e580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859939540"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7fb859a25710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859903b90"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7fb859a0b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598cb060"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7fb8599dd8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859869060"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fb859a5ed50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85995f260"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fb859a37d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859929540"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7fb859a1de50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598f2b90"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7fb859a03020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598bb060"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7fb8599b5d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859880b90"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7fb8599a2560"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598fd060"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7fb8599d0580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598fd060"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7fb8599fe020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb8598b1b90"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7fb8599a0d40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859869060"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7fb859998580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb859890b90"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7fb8599d88f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fb85990d060"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fb8596e6d80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb8596d9790"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fb8596d9790"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb8593e58e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb8596dd9a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb859493020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8593e58e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb85802cdb0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fb8596d31a0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fb8593d5020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb859493020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb858222b10"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fb8593dd020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb8594652f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb859460850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb859493870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb859493870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb85821b890"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb8593cb300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb85950b8c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb85950b8c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb8594efcf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb858222b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb858203660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fb8582140a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb8582214f0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb8582214f0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb858202020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb858218c00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb85950b8c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb8581ff190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb858209340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb858209340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb85969f990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb8581fe770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb858208a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb858208a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb85969d720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb8581fda80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb858207da0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb858207da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb85969a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb85969f990"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb8596879e0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7fb8596879e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb859630260"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb85969d720"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7fb859685280"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7fb859685280"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb8595ce6d0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb85969a1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7fb859684700"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7fb859684700"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb8595cdac0"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb85969f990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb8596879e0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb85969d720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7fb85967ea50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7fb85967ea50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb8595be220"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb85969a1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7fb85967c020"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7fb85967c020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb8595bd610"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb85969f990"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb8596879e0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb85969d720"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7fb85967bd40"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7fb85967bd40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb8595b76d0"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb85969a1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7fb859679160"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7fb859679160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb8595b5ac0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb85969f990"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb8596879e0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb85969d720"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7fb859677020"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7fb859677020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb8595afb30"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb85969a1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7fb859676570"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7fb859676570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb8595ad020"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb85969f990"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb8596879e0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb85969d720"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7fb8596745a0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7fb8596745a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb8595a7220"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb85969a1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7fb859673a20"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7fb859673a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb8595a6610"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb85969f990"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb8596879e0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb85969d720"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7fb8596718c0"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7fb8596718c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb85959f6d0"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb85969a1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7fb859670d40"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7fb859670d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb85959eac0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7fb85968a730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb8595d5220"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7fb85968b700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb8595dccb0"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7fb859678020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb8595b47a0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7fb859691890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb8595dc020"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7fb85966fae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb85959d7a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7fb8596950c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb85962a6d0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7fb85967fa20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb8595c4cb0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7fb859680bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb8595c4020"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7fb859682730"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb8595c7b30"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7fb859688a20"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb8595d32f0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7fb859675570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb8595adcb0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7fb859689bb0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb8595d4610"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7fb859699830"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb8596383e0"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7fb859692410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7fb8595deb30"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7fb85968c410"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb8595e37a0"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7fb85967cda0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb8595bc2f0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7fb859694570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fb8595e4ac0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7fb859672890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb8595a42f0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7fb859683700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb8595cc7a0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fb8596362f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb859637bf0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb859636940"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7fb8595963f0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb859635020"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7fb859596b80"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8595e2610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb8596383e0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb8595e1c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb859637bf0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8595dbb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb8596383e0"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb8595d92f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb859637bf0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8595d2160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb8596383e0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb8595d17a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb859637bf0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7fb85962e100"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb85962fa60"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb85962e750"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7fb859595430"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb85962eda0"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7fb859595bc0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8595cb610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb859630260"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb8595cac50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb85962fa60"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8595c3b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb859630260"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb8595c12f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb85962fa60"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8595bb160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb859630260"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb8595ba7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb85962fa60"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8595b3610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb859630260"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb8595b2c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb85962fa60"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8595acb40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb859630260"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb8595aa2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb85962fa60"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8595a3160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb859630260"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb8595a27a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb85962fa60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb85959c610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fb859630260"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7fb85959bc50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7fb85962fa60"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fb8594d10f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb8595098e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb8595098e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb859503b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb8594f4c50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7fb8596879e0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fb85945c9c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fb8580253d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7fb8593dd020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7fb85801fa40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7fb8593d8450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7fb8580205d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7fb859b35130"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fb85801e100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb8593a3690"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb859376020"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb859376020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb858770b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fb8593992c0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb8587398b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7fb8593891d0"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7fb85873ace0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb85939d760"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb85873ba80"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb8593a27f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb85873e020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fb85939f880"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fb85873ddf0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb859363020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858915670"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb859384130"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb859361080"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb859361080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb858770080"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb8593a1b20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb85873d210"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb85939a020"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb859362020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb859362020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fb8589126e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fb85937b430"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fb859361b70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fb859361b70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fb85875b020"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb85939e020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb85873c470"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb859390170"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb8593629d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb8593629d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb858911a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7fb8587300f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb859375530"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb858737860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fb85936ea70"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fb85936ea70"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fb8587d8c90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb858736690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fb859366840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fb859366840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fb8587d7a50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb8587324d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb858b44b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858736ce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858915670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858915670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858907d20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb858735b70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589110c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589110c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb858903640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fb858734610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fb8592d5dc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fb8592d5dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fb8592cb970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fb8587311f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb85935b330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fb85935b330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb8593567e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb858730d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb859a8e0d0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb858770b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7fb85876cd90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb858911a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb858902020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7fb85875b020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7fb858759410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7fb8587d8c90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7fb8587cea20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb858770080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb8587682d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7fb85936f690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb8587d85e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb8587d85e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7fb8587ce370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fb8589126e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fb858904c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb859375530"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb8587dbbe0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb8587dbbe0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb8587d07b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7fb859365940"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb8587da8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb8587da8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7fb8587cf4d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fb85936fd50"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fb8587d6170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7fb8587d6170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7fb8587cb020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7fb8587d7a50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7fb8587cd840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fb85876cd90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb85935d390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7fb85935d390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7fb85935ae70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb8587d56b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb85882d220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb85882d220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb858827a10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb858828020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb85875e350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb85875e350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb85875bd70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb85875bd70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb858774ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb858774ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb85876d860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb85876d860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb85935de80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb85935de80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb859357990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb8587d5020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb858771980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb858771980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fb85876c690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb85876c690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb85880caa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb85880caa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb858808e30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb858809950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb85935cb40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb85935cb40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb85899a7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb85899a7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb858993020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb859355640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb8592e5950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb8592e5950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb8592ccb80"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fb85934cb50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fb8592e0bf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7fb8592e0bf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7fb8592c9740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fb859349760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb858a9a6c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7fb859349760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb85899d5c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb85899d5c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb858995ca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7fb858a9a6c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb858a89320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb8593412a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb858a97020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb858a97020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb858a89bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7fb859348060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb858a97cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7fb858a97cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7fb858a88970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb85933f330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858915670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb859337920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589110c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb85933e420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb85884aa20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb85884aa20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb858843a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7fb85933b110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb85884caa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb85884caa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb858f611d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb85933ebf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb859a8e0d0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7fb85932db70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7fb85932eba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7fb85932fc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7fb8592d20c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7fb8592c8b40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7fb8592c5a10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb85921e220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb85921e220"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb859218af0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb8592c1c50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fb8591d9e60"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb8591d9e60"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591ca630"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fb8592bfe70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7fb8591d56a0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7fb8591d56a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591ba630"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fb8592bd0f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7fb8591d3ce0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7fb8591d3ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591ae020"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fb8592b8c00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7fb859194400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7fb859194400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fb859033680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb8592a5520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858bcfe20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb858bcfe20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858fe14d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb8592a4570"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7fb858bcc7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb858bcc7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb8592a4c80"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7fb858bcbae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb858bcbae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb8592a6d70"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7fb858bcdad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb858bcdad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb8592a6450"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb858bca160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb858bca160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb8592ab420"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7fb858bc1870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb858bc1870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb8592abcd0"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7fb858bbf880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb858bbf880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb8592b25d0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7fb858bbe0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb858bbe0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb8592ad020"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb858bc6e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb858bc6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb8592ad8f0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb858bc5670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb858bc5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb8592aee20"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7fb858bb1500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb858bb1500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb8592ae4a0"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7fb858bb2ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb858bb2ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb8592aa1e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7fb858bc2e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb858bc2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb8592aaa80"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7fb858bc5e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb858bc5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb8592a93c0"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fb858bc3e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb858bc3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7fb8592a2180"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858b9da80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb858b9da80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858fe14d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7fb8592a33d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858b709e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb858b709e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858fe14d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb8592b3390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb858b44b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb8592c5020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb858b43d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb858b43d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb858b27310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7fb859298ca0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7fb859299db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb8592217e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb859218260"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb859218260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb857fc8900"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb859218af0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb857fc7180"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb857fc8900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb857fc1a10"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb857fc7180"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb857fba5f0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb857fc1a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb857fa4510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7fb857fb4d20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb857fc02a0"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fb857fc02a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fb857fa4da0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb857fb69b0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb859202080"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb859202080"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb8591fdcd0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb857fa0020"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb857faa1b0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb857faa1b0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7fb85969f990"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb857f9e760"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb857fa88f0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb857fa88f0"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb85969d720"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb857f9aa80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb857fa7c10"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7fb857fa7c10"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7fb85969a1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7fb8591f90f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb8595098e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fb8591d7090"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591c5b00"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fb8591d6390"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591bf020"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fb85921fb10"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591d0020"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fb8591d49b0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591b4af0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591ce2f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fb859a48580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591c97a0"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7fb859a108a0"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591c4c60"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fb859a4bd50"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591be2f0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fb859a50530"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591b97a0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7fb859a068a0"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591b3c60"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fb859a12020"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591ad2f0"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7fb859a08020"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fb859191700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7fb85918dc20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb859193060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7fb859024b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb859176760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7fb859682730"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7fb859175a80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7fb85967fa20"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7fb859174930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7fb859a12020"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fb8590322f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fb8591613f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7fb8591613f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7fb85914b3f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7fb8590237a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fb859165620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7fb859165620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7fb8591527a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7fb8591553f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7fb85913e3f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7fb85915ed50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7fb859147d50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7fb85915b3f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7fb8591443f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7fb85916abc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7fb85914ed50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7fb859158d50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fb859141d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7fb859160710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7fb85914a710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7fb859154710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7fb85913d710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7fb85915a710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7fb859143710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7fb859162020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7fb85914c020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7fb859156100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7fb85913f100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7fb85915fa30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7fb859149a30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7fb85915c020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7fb859145020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7fb85916b8a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7fb85914fa30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7fb859159a30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7fb859142a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb858bcc160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858bc0880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb858bb80a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb858bbf0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb858baa500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb858bac500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb858bcb490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb858bb4880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb858bb0500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb858bba880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb858bbb0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858bcea90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858fe0350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858fe0350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858fd8660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb858bcae00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb858bc8490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb858bb3c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb858bc8be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb858bb0ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb858bb40a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb858bc3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb858bb50a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb858bb8880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb858bb5880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb858babce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb858bacce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb858bbb880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb858bb70a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb858bb1ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb858bbe880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb858baace0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb858bcd480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb858bc6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb858bc2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb858bb90a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb858bb9880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb858bc00a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb858bc72f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb858bc6020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb858bca7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb858bb2500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb858bab500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb858bba0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb858bb7880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb858bcce00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb858bbd0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb858bc7940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb858bbd880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb858bb30a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb858ba99b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fd6890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fd4ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fd3a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb858fe14d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858fd7510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fd28b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7fb858fc5b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb858f66770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb858f66770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb858f611d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb858fd0060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858f44c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb858f44c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb857ec6940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb858fcdc70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb858f438f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb858f438f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb857ec5d70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb858fc52e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb858bf5020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb858bf5020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb857ec0020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb858fcea70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb859a8e0d0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7fb858fc1bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb858f611d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb858f5db70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb857ec0020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb858edc850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb857ec5d70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb858edd110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb857ec6940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858ee3d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb857ec55d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb857eb8020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb857eb8020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb858d5e2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7fb858edd110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7fb858e61a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fb857ec1410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fb858edd790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7fb858edd790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7fb858e60060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb858ed8a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb857ec07c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb857eaa760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858eda8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb858ed9690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb857eb9340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb857eb9340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858d5f020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb858ed3b40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb857eb3c10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb857eb3c10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb858d624d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858eda8e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858e61250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7fb858edc850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7fb858e60c50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb858ee3d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858e62470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb858e5e3e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb858ed8a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7fb858e5f5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7fb858ed9690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb858e59480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb858ed3b40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7fb858e5ea50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb858e4e020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb858e4e020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fb858e45700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb858e59c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb859a8e0d0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7fb858e562f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb858e462c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb858e40c20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb858e4ad10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb858e402d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fb858e12bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fb8599d5580"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7fb858e0f3e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7fb8599d3d50"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fb858e0dbb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fb8599d0580"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7fb858e0a3e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7fb8599cb580"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7fb858e08bb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7fb8599ced50"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7fb858e17d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fb858cb5d40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb857eb2440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb858d613f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb857eb2a50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb858cbc020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb858cbc020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7fb858cb5d40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb857eb7020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb858e4e020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb857eb87c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb858d5ead0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb858d5ead0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb858cc7e80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858d5d8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb857eaa760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb858d5e2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb858cc9a60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7fb858cc9a60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7fb857e3c6c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7fb858d624d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7fb858d5bd60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb858d5f020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858ccaca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb858ccaca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb857e3d850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb858d613f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb858d5a710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb858cc7e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb857e3aa70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858cc6790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858d5d8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb858d48bf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb858cc7e80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7fb858d5ad80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb858e4ad10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fb858d485e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb858e462c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb858cc7270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb857e3ce40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb857e399d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858cc6790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fb857e392d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fb858cc5020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb857e382b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb857e3f630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7fb857e36480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7fb858cacbb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7fb858e45700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7fb858ca7700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7fb8599d5580"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7fb858ca5e40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7fb8599d0580"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb858b90c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb858b9bda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb858b93b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858b8d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb858b86e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb858b8de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb858b7a2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb858b7c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb858b98120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb858b82670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb858b7d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb858b92c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb858b91c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb858b88670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb858b8ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb858b8c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858b9c760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858fe0350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb858b97aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb858b96120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb858b81a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb858b96870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb858b7dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb858b98dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb858b83e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb858b91480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb858b92480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb858b9b750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb858b84e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb858b85670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb858b83670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb858b7bad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb858b7cad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb858b89670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb858b85e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb858b7ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb858b8b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb858b7aad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb858b9b100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb858b93370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb858b90480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb858b88e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb858b8ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb858b86670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb858b8f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb858b99450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb858b8fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb858b95020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb858b95cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb858b7e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb858b7fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb858b97450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb858b7f2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb858b7b2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb858b89e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb858b84670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb858b99aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb858b98770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb858b8be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb858b95670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb858b8a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb858b82e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb858b787a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb858b63c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb858b6eda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb858b67b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858b61670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb858b5ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb858b61e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb858b4d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb858b4f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb858b6c120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb858b55670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb858b512f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb858b66c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb858b64c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb858b5b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb858b5de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb858b60670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858b6f760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858fe0350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb858b6aaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb858b69120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb858b54a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb858b69870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb858b51ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb858b6cdc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb858b56e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb858b64480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb858b66480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb858b6e750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb858b58e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb858b59670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb858b56670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb858b4ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb858b4fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb858b5c670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb858b59e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb858b52ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb858b5f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb858b4dad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb858b6e100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb858b67370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb858b63480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb858b5be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb858b60e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb858b5a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb858b62670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb858b6d450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb858b62e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb858b68020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb858b68cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb858b522f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb858b53ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb858b6a450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb858b532f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb858b4e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb858b5ce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb858b58670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb858b6daa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb858b6c770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb858b5fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb858b68670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb858b5d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb858b55e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb858b4c7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fb858b24880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fb858b19020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7fb858b19020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7fb858b14140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fb858b10bd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fb858b18c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7fb858b18c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7fb858afb150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7fb858b13530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7fb858aa61b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fb858aff540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7fb858b00590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7fb858b00590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7fb858ab09e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fb858af6950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fb858afdca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7fb858afdca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7fb858ad3a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7fb858afb9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7fb858aff540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb858ac3020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fb858abd530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fb858abd530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb858abae50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7fb858ab6020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7fb859699830"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb858aafc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7fb859a34580"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb858a93990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb858a87900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7fb858a95150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7fb858a850f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7fb858a85ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb85921e220"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7fb858a73690"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7fb85921fb10"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb858a6c9b0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fb8591d9e60"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7fb858a6bcd0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7fb8591d49b0"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7fb858a74a80"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7fb859191700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb858a69020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb8589cec30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb8589cec30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858fe14d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858a69d10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb8589cc8f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb8589cc8f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858fe0350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb858a666d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fb8589cb2f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb8589cb2f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb858a66de0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7fb8589cacc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb8589cacc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb858a65530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7fb8589c9370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb8589c9370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb858a65c60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb8589c8d00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb8589c8d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb858a67e00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7fb8589c2c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb8589c2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb858a68780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7fb8589a97a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb8589a97a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb858a67550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb8589ae2f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb8589ae2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb858a633e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb8589c3480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb8589c3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb858a625e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fb8589bfe50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb8589bfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858a61020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fb8589be670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb8589be670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb858a63e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7fb8589c57b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb8589c57b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb858a609c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7fb8589acad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb8589acad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb858a61890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fb8589ad2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb8589ad2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb858a60130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fb8589adad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb8589adad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fb858a5bd40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fb85899ddf0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7fb85899ddf0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7fb858994550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858a82d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858915670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb858a80bb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589110c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb858a7bc60"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb858910550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb858910550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb858902a80"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb858a6ee80"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb858908480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb858908480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb8588fa8b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb858a5e6c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb859a8e0d0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb8589c1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb8589ca020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb8589c4c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb8589b7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb8589bee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb8589aa2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb8589b2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb8589c3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb8589b8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb8589bbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb8589bd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb8589c7370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb8589b1a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb8589c7ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb8589aead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb8589c8060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb8589b4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb8589c2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb8589cb940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb8589b5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb8589b6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb8589b4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb8589ba670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb8589b6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb8589afad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb8589bc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb8589aaad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb8589c4490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb8589c1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb8589b8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb8589bde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb8589b7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb8589bf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb8589ca670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb8589c5160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb8589c5e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb8589af2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb8589b0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb8589c86b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb8589b02f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb8589ac2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb8589bae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb8589b5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb8589c99c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb8589bce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb8589bb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb8589b2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7fb858999020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7fb8589937c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fb85897e150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fb859a8e0d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7fb858992020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7fb8591d9e60"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7fb858991380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7fb8591d7090"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7fb8589906b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7fb8591d6390"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb85898ea50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb859193060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7fb85898d6e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858898d00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7fb858898d00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7fb858fe14d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb85898c530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7fb858875ad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7fb858875ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb85898bad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb8588926b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb8588926b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb85898b3a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7fb858891370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7fb858891370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb85898a330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858915670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589891e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589110c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb858987d70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb858910550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7fb858989b90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7fb8592d5dc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb8589823e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7fb85888ae50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7fb85888ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858982cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858888670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858888670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb858983b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7fb858890160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7fb858890160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb8589806d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7fb8588752f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7fb8588752f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb858981590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7fb8588772f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7fb8588772f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb858981e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7fb858877ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7fb858877ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb85897f020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb858878ad0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb858878ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb85897f8b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7fb858896300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7fb858896300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7fb8589729d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb85890c660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb8588feaf0"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fb8588a5300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fb859202080"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7fb8588f83b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fb8588a6020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fb8588f76e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fb8596d31a0"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fb8588a0450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fb8596e6d80"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7fb85888bc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7fb858894020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb85888ec70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7fb858881e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7fb858888e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7fb858893370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7fb85887d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb8588782f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7fb85888dc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7fb85888cc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7fb858883670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7fb858885e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7fb858887670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858897970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858fe0350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb858892d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb85887ca70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7fb858891ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb858892060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7fb85887ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7fb85888c480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb85888d480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7fb858896950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7fb85887fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7fb858880670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7fb85887e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7fb858876ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7fb858884670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7fb858880e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7fb858879ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7fb858886670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7fb85888e490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7fb85888b480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7fb858883e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7fb858887e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7fb858881670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7fb85888a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7fb858894670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7fb858890e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7fb8588792f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7fb85887aad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb85887a2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7fb8588762f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7fb858884e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7fb85887f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7fb858894cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7fb8588939c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7fb858886e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7fb8588907b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7fb858885670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7fb85887de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7fb8588737a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7fb858848920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7fb858844940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fb85884e990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fb858844080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb858823e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb858828020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb858822ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb858825690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb858825690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb858f611d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7fb8588218f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7fb85884aa20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb858820170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589110c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb858809200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb858805570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb8588043f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fb858809950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb858804a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589110c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7fb8587cbd70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7fb8587d56b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7fb8587cab10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7fb8587d5020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7fb8587c92f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858915670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8587c8170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589110c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7fb8587c8b70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7fb85877b410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7fb85879cdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7fb85876e800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb85876a580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7fb85876a580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7fb858f611d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb8587561c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb859362020"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb8586a73f0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb8593a27f0"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7fb8586a51d0"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7fb85939f880"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb8586a57e0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb85939d760"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb8586a1a20"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb858910550"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7fb85869a890"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7fb859384130"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7fb8586a65c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7fb8593a1b20"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb8586a3b20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb85939a020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb8586a4470"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb85939e020"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb85869eaf0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb85890c660"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb857cb7e60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb857ca97f0"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb857cb5aa0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb8586a57e0"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb857cb4720"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb8586a4470"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fb858602020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7fb857cb3da0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7fb857cb3da0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb8586a3b20"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb857ca85f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb85866c930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb857ca7270"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb8586a4470"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7fb85866c930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7fb85861cdf0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7fb85861a400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7fb8586a73f0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb858618060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb8586a4470"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb858617720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb8586a57e0"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7fb858616480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7fb858616c60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7fb8585f8020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7fb8586a57e0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7fb8585f8c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7fb8586a4470"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="7:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb859457530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.TimerDormir" loc="44(SlaveAppC.TimerDormir):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4e640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb859b4e9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4e640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb859b4e9b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7fb8599921d0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7fb859992580" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7fb859992930" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7fb859992ce0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7fb8599910d0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7fb85966a930" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7fb85966acd0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7fb8596690d0" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7fb859669450" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7fb8596697d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7fb859669b40" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7fb859667020" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7fb8596673b0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7fb859667780" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7fb85962cc80" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7fb8596290d0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fb859546cb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fb859546cb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7fb859504a40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7fb859504a40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fb8594ee570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fb8594ee570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fb8594eed40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fb8594eed40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fb8594ec160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fb8594ec160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fb8594ec940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fb8594ec940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fb8594ecd10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7fb8594eb540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7fb8594eb540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7fb8595116d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7fb8595116d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7fb8594ca020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7fb8594ca020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7fb8594ca410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7fb8594ca410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7fb8594cabf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7fb8594cabf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7fb8594c8020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb85948ecc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb85948ecc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb859457530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb859457530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fb859457880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb859449980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb859449980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fb859449cd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb8593d4550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb8593d4550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7fb858d435e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7fb858d379b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7fb858d1ccc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb858ad1020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb858ad1020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb858ad17b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb858ad17b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fb858691660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7fb858687360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fb8586800d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7fb858668c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7fb8585fd330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fb859b411d0" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859b411d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859b41550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fb859b45ca0" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb859b45ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb859b440a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb859b40110" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb859b40110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859b40490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fb859b35130" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fb859b35130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fb859b3f1b0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fb859b3f340"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fb859b357d0"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fb859b35960"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fb859b35af0"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fb859b35c80"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fb859b35e10"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fb859b3f020"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fb859b354b0"/>
        <function-ref name="node_id" scoped="" ref="0x7fb859b35640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fb859b31700" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7fb859b31700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859b31a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb859b331a0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb859b331a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859b33520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7fb859b31020" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fb859b31020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859b313a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7fb859b31de0" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7fb859b31de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859b30180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7fb859b33810" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fb859b33810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fb859b32980"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fb859b32b10"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fb859b32020"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fb859b321b0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fb859b32340"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fb859b324d0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fb859b32660"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fb859b327f0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fb859b33b90"/>
        <function-ref name="node_id" scoped="" ref="0x7fb859b33d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb859b34640" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb859b34640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859b349c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7fb859b1a900" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7fb859b1a900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859b1ac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fb859af8de0" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb859af8de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb859afdc70"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb859afd310"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb859afd4a0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb859afd630"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb859afd180"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb859afd7c0"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb859afd950"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb859afdae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb859b01850" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb859b01850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859b01bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7fb859ae7830" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb859ae7830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb859ae67f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb859ae7d40"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb859ae6020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb859ae61b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb859ae7bb0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb859ae6340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb859ae64d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb859ae6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fb859ae6af0" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb859ae6af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fb859ae6e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb859ae71c0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb859ae71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859ae7540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fb859c68c80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fb859c68c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fb859e430a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fb859dc59a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fb859dc59a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fb859dc5d20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fb859ee0020"/>
        <function-ref name="sleep" scoped="" ref="0x7fb859ee01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fb859d063d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7fb859d063d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fb859d06750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7fb859aff8b0" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7fb859aff8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7fb859ab27f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7fb859affdc0"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7fb859ab2020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7fb859ab21b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7fb859affc30"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7fb859ab2340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7fb859ab24d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7fb859ab2660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fb859aa58d0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7fb859aa58d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859aa5c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fb859aa6110" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb859aa6110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb859aa6490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fb859aa51d0" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7fb859aa51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859aa5550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fb859aa6780" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb859aa6780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859aa6b00"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb859aa6c90"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb859aa6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fb859fe0940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fb859fe0940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb859fe0cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb859fe0e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fb859fed1e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb859fed1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859fed560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb859fed6f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb859fed880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fb859b91040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7fb859b91040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb859b913c0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb859b91550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fb859b8c490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7fb859b8c490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7fb859b8c810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7fb859b8c9a0"/>
        <function-ref name="sleep" scoped="" ref="0x7fb859b8cb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fb859b92140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7fb859b92140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859b924c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fb859b92650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fb859b927e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fb859a8e0d0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb859a8e0d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb859a8e450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb859a8e5e0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb859a8e770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb859a8e900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb859a8ea90"/>
        <function-ref name="get" scoped="" ref="0x7fb859a8ec20"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb859a8edb0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb859a9a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a9a020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb859a9a1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb859a9a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fb859a831d0" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fb859a831d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a83550"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a836e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a83870"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a83a00"/>
        <function-ref name="get" scoped="" ref="0x7fb859a83b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a83d20"/>
        <function-ref name="set" scoped="" ref="0x7fb859a89020"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a891b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb859a8c640" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb859a8c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859a8c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fb859a894d0" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fb859a894d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a89850"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a899e0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a89b70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a89d00"/>
        <function-ref name="get" scoped="" ref="0x7fb859a88020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a881b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a88340"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a884d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fb859a8cc40" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb859a8cc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb859a8b020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb859a8b1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb859a8b340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb859a8b4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb859a8b660"/>
        <function-ref name="get" scoped="" ref="0x7fb859a8b7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb859a8b980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb859a8a020"/>
        <function-ref name="set" scoped="" ref="0x7fb859a8bb10"/>
        <function-ref name="led0On" scoped="" ref="0x7fb859a8bca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb859a8be30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fb859a887f0" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fb859a887f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a88b70"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a88d00"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a82020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a821b0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a82340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a824d0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a82660"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a827f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fb859a8dd80" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7fb859a8dd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a66180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a66310"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a664a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a66630"/>
        <function-ref name="get" scoped="" ref="0x7fb859a667c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a66950"/>
        <function-ref name="set" scoped="" ref="0x7fb859a66ae0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a66c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fb859a65020" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7fb859a65020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a653a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a65530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a656c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a65850"/>
        <function-ref name="get" scoped="" ref="0x7fb859a659e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a65b70"/>
        <function-ref name="set" scoped="" ref="0x7fb859a65d00"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a64020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fb859a63600" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb859a63600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859a63980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fb859a64380" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7fb859a64380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a64700"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a64890"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a64a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a64bb0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a64d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a63020"/>
        <function-ref name="set" scoped="" ref="0x7fb859a631b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a63340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb859a48580" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb859a48580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a48900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a48a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a48c20"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a46980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a47020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a471b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a47340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a474d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a47660"/>
        <function-ref name="get" scoped="" ref="0x7fb859a477f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a47980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a47b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a47ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a46020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a461b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a46340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a464d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a48db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a46660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a467f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb859a2f710" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb859a2f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a2fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a2fc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a2fdb0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a2da80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a2e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a2e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a2e4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a2e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a2e7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a2e980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a2eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a2eca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a2ee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a2d120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a2d2b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a2d440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a2d5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a2e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a2d760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a2d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7fb8599a5d30" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7fb8599a5d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599a40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599a4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599a4400"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599a21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599a4720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599a48b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599a4a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599a4bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599a4d60"/>
        <function-ref name="get" scoped="" ref="0x7fb8599a3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599a31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599a3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599a34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599a3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599a38f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599a3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599a3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599a4590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599a3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7fb8599aad40" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7fb8599aad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599a90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599a9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599a9400"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599a71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599a9720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599a98b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599a9a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599a9bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599a9d60"/>
        <function-ref name="get" scoped="" ref="0x7fb8599a8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599a81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599a8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599a84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599a8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599a88f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599a8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599a8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599a9590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599a8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7fb8599d3d50" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7fb8599d3d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599d2100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599d2290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599d2420"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599d01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599d2740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599d28d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599d2a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599d2bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599d2d80"/>
        <function-ref name="get" scoped="" ref="0x7fb8599d1020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599d11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599d1340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599d14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599d1760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599d18f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599d1a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599d1c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599d25b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599d1da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599d0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7fb859a2a710" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7fb859a2a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a2aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a2ac20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a2adb0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a28a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a291b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a29340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a294d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a29660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a297f0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a29980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a29b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a29ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a29e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a28120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a282b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a28440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a285d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a29020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a28760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a288f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7fb859a108a0" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7fb859a108a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a10c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a10db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a0f020"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a0ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a0f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a0f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a0f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a0f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a0f980"/>
        <function-ref name="get" scoped="" ref="0x7fb859a0fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a0fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a0fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a0e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a0e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a0e440"/>
        <function-ref name="set" scoped="" ref="0x7fb859a0e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a0e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a0f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a0e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a0ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7fb8599f78a0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7fb8599f78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599f7c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599f7db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599f6020"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599f5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599f6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599f64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599f6660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599f67f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599f6980"/>
        <function-ref name="get" scoped="" ref="0x7fb8599f6b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599f6ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599f6e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599f5020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599f52b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599f5440"/>
        <function-ref name="set" scoped="" ref="0x7fb8599f55d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599f5760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599f61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599f58f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599f5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7fb8599e28a0" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7fb8599e28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599e2c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599e2db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599e1020"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599e0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599e1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599e14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599e1660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599e17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599e1980"/>
        <function-ref name="get" scoped="" ref="0x7fb8599e1b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599e1ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599e1e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599e0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599e02b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599e0440"/>
        <function-ref name="set" scoped="" ref="0x7fb8599e05d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599e0760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599e11b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599e08f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599e0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7fb8599ced50" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7fb8599ced50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599cd100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599cd290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599cd420"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599cb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599cd740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599cd8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599cda60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599cdbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599cdd80"/>
        <function-ref name="get" scoped="" ref="0x7fb8599cc020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599cc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599cc340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599cc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599cc760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599cc8f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599cca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599ccc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599cd5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599ccda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7fb8599bad40" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7fb8599bad40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599b90e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599b9270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599b9400"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599b71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599b9720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599b98b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599b9a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599b9bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599b9d60"/>
        <function-ref name="get" scoped="" ref="0x7fb8599b8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599b81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599b8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599b84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599b8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599b88f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599b8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599b8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599b9590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599b8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599b7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7fb85999bd50" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7fb85999bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85999a100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85999a290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85999a420"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599981b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85999a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85999a8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85999aa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85999abf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85999ad80"/>
        <function-ref name="get" scoped="" ref="0x7fb859999020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599991b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859999340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599994d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859999760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599998f0"/>
        <function-ref name="set" scoped="" ref="0x7fb859999a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859999c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85999a5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859999da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859998020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb859a41d50" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb859a41d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a40100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a40290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a40420"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a3e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a40740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a408d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a40a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a40bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a40d80"/>
        <function-ref name="get" scoped="" ref="0x7fb859a3f020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a3f1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a3f340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a3f4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a3f760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a3f8f0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a3fa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a3fc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a405b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a3fda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a3e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7fb8599cb580" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7fb8599cb580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599cb900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599cba90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599cbc20"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599c9980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599ca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599ca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599ca340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599ca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599ca660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599ca7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599ca980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599cab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599caca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599c9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599c91b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599c9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599c94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599cbdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599c9660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599c97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb859a3cd50" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb859a3cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a3b100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a3b290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a3b420"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a391b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a3b740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a3b8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a3ba60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a3bbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a3bd80"/>
        <function-ref name="get" scoped="" ref="0x7fb859a3a020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a3a1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a3a340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a3a4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a3a760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a3a8f0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a3aa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a3ac10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a3b5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a3ada0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a39020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7fb859a22e50" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7fb859a22e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a21210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a213a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a21530"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a1f340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a21850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a219e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a21b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a21d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a20020"/>
        <function-ref name="get" scoped="" ref="0x7fb859a201b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a20340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a204d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a20660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a208f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a20a80"/>
        <function-ref name="set" scoped="" ref="0x7fb859a20c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a20da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a216c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a1f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a1f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7fb859a08020" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7fb859a08020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a083a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a08530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a086c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a064d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a089e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a08b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a08d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a07020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a071b0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a07340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a074d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a07660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a077f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a07a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a07c10"/>
        <function-ref name="set" scoped="" ref="0x7fb859a07da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a06020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a08850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a061b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a06340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7fb8599ef020" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7fb8599ef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599ef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599ef530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599ef6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599ed4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599ef9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599efb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599efd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599ee020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599ee1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8599ee340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599ee4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599ee660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599ee7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599eea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599eec10"/>
        <function-ref name="set" scoped="" ref="0x7fb8599eeda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599ed020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599ef850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599ed1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599ed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7fb8599da020" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7fb8599da020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599da3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599da530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599da6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599d84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599da9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599dab70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599dad00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599d9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599d91b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8599d9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599d94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599d9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599d97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599d9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599d9c10"/>
        <function-ref name="set" scoped="" ref="0x7fb8599d9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599d8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599da850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599d81b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599d8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb859a4d580" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb859a4d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a4d900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a4da90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a4dc20"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a4b980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a4c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a4c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a4c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a4c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a4c660"/>
        <function-ref name="get" scoped="" ref="0x7fb859a4c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a4c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a4cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a4cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a4b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a4b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a4b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a4b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a4ddb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a4b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a4b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb859a34580" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb859a34580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a34a00"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a34b90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a34d20"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a32a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a331b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a33340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a334d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a33660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a337f0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a33980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a33b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a33ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a33e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a32120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a322b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a32440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a325d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a33020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a32760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a328f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7fb859a1a710" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7fb859a1a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a1aa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a1ac20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a1adb0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a18a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a191b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a19340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a194d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a19660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a197f0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a19980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a19b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a19ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a19e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a18120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a182b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a18440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a185d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a19020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a18760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a188f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7fb8599d5580" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7fb8599d5580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599d5900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599d5a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599d5c20"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599d3980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599d4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599d41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599d4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599d44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599d4660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599d47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599d4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599d4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599d4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599d3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599d31b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599d3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599d34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599d5db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599d3660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599d37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7fb8599b2570" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7fb8599b2570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599b28f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599b2a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599b2c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599b0980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599b1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599b11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599b1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599b14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599b1660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599b17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599b1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599b1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599b1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599b0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599b01b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599b0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599b04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599b2da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599b0660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599b07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7fb85999d570" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7fb85999d570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85999d8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85999da80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85999dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb85999b980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85999c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85999c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85999c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85999c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85999c660"/>
        <function-ref name="get" scoped="" ref="0x7fb85999c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85999c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85999cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85999cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85999b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85999b1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb85999b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85999b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85999dda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85999b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85999b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7fb8599c1580" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7fb8599c1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599c1900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599c1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599c1c20"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599bf980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599c0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599c01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599c0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599c04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599c0660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599c07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599c0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599c0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599c0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599bf020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599bf1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599bf340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599bf4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599c1db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599bf660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599bf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7fb859a15710" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7fb859a15710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a15c90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a15e20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a14020"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a13c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a14340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a144d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a14660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a147f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a14980"/>
        <function-ref name="get" scoped="" ref="0x7fb859a14b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a14ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a14e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a13020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a132b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a13440"/>
        <function-ref name="set" scoped="" ref="0x7fb859a135d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a13760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a141b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a138f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a13a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7fb8599fc8a0" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7fb8599fc8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599fcc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599fcdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599fb020"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599fac10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599fb340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599fb4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599fb660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599fb7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599fb980"/>
        <function-ref name="get" scoped="" ref="0x7fb8599fbb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599fbca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599fbe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599fa020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599fa2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599fa440"/>
        <function-ref name="set" scoped="" ref="0x7fb8599fa5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599fa760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599fb1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599fa8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599faa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7fb8599e78a0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7fb8599e78a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599e7c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599e7db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599e6020"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599e5c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599e6340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599e64d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599e6660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599e67f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599e6980"/>
        <function-ref name="get" scoped="" ref="0x7fb8599e6b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599e6ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599e6e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599e5020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599e52b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599e5440"/>
        <function-ref name="set" scoped="" ref="0x7fb8599e55d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599e5760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599e61b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599e58f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599e5a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7fb8599b0d40" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7fb8599b0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599ae0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599ae270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599ae400"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599ac1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599ae720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599ae8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599aea40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599aebd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599aed60"/>
        <function-ref name="get" scoped="" ref="0x7fb8599ad020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599ad1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599ad340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599ad4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599ad760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599ad8f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599ada80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599adc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599ae590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599adda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7fb8599c9d40" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7fb8599c9d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599c80e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599c8270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599c8400"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599c61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599c8720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599c88b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599c8a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599c8bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599c8d60"/>
        <function-ref name="get" scoped="" ref="0x7fb8599c7020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599c71b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599c7340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599c74d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599c7760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599c78f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599c7a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599c7c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599c8590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599c7da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599c6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb859a46d50" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb859a46d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a45100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a45290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a45420"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a431b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a45740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a458d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a45a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a45bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a45d80"/>
        <function-ref name="get" scoped="" ref="0x7fb859a44020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a441b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a44340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a444d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a44760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a448f0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a44a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a44c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a455b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a44da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a43020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb859a2de50" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb859a2de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a2c210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a2c3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a2c530"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a2a340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a2c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a2c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a2cb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a2cd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a2b020"/>
        <function-ref name="get" scoped="" ref="0x7fb859a2b1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a2b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a2b4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a2b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a2b8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a2ba80"/>
        <function-ref name="set" scoped="" ref="0x7fb859a2bc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a2bda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a2c6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a2a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7fb8599ed8a0" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7fb8599ed8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599edc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599eddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599ec020"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599ebc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599ec340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599ec4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599ec660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599ec7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599ec980"/>
        <function-ref name="get" scoped="" ref="0x7fb8599ecb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599ecca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599ece30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599eb020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599eb2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599eb440"/>
        <function-ref name="set" scoped="" ref="0x7fb8599eb5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599eb760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599ec1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599eb8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599eba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7fb859a28e50" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7fb859a28e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a27210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a273a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a27530"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a25340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a27850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a279e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a27b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a27d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a26020"/>
        <function-ref name="get" scoped="" ref="0x7fb859a261b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a26340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a264d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a26660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a268f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a26a80"/>
        <function-ref name="set" scoped="" ref="0x7fb859a26c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a26da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a276c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a25020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7fb859a0d020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7fb859a0d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a0d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a0d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a0d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a0b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a0d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a0db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a0dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a0c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a0c1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a0c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a0c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a0c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a0c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a0ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a0cc10"/>
        <function-ref name="set" scoped="" ref="0x7fb859a0cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a0b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a0d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a0b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a0b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7fb8599f4020" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7fb8599f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599f43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599f4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599f46c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599f24d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599f49e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599f4b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599f4d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599f3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599f31b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8599f3340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599f34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599f3660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599f37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599f3a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599f3c10"/>
        <function-ref name="set" scoped="" ref="0x7fb8599f3da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599f2020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599f4850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599f21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599f2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7fb8599df020" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7fb8599df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599df3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599df530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599df6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599dd4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599df9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599dfb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599dfd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599de020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599de1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8599de340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599de4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599de660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599de7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599dea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599dec10"/>
        <function-ref name="set" scoped="" ref="0x7fb8599deda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599dd020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599df850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599dd1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599dd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7fb8599c4d50" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7fb8599c4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599c3100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599c3290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599c3420"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599c11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599c3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599c38d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599c3a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599c3bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599c3d80"/>
        <function-ref name="get" scoped="" ref="0x7fb8599c2020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599c21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599c2340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599c24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599c2760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599c28f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599c2a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599c2c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599c35b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599c2da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb859a50530" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb859a50530"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a508b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a50a40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a50bd0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a5e980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a5f020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a5f1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a5f340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a5f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a5f660"/>
        <function-ref name="get" scoped="" ref="0x7fb859a5f7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a5f980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a5fb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a5fca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a5e020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a5e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a5e340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a5e4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a50d60"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a5e660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a5e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb859a39580" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb859a39580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a39900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a39a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a39c20"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a37980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a38020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a381b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a38340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a38660"/>
        <function-ref name="get" scoped="" ref="0x7fb859a387f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a38980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a38b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a38ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a37020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a371b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a37340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a374d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a39db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a37660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7fb859a1f710" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7fb859a1f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a1fa90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a1fc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a1fdb0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a1da80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a1e1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a1e340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a1e4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a1e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a1e7f0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a1e980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a1eb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a1eca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a1ee30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a1d120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a1d2b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a1d440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a1d5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a1e020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a1d760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a1d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7fb859a068a0" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7fb859a068a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a06c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a06db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a05020"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a04c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a05340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a054d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a05660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a057f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a05980"/>
        <function-ref name="get" scoped="" ref="0x7fb859a05b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a05ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a05e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a04020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a042b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a04440"/>
        <function-ref name="set" scoped="" ref="0x7fb859a045d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a04760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a051b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a048f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a04a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7fb8599bfd50" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7fb8599bfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599be100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599be290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599be420"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599bc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599be740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599be8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599bea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599bebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599bed80"/>
        <function-ref name="get" scoped="" ref="0x7fb8599bd020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599bd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599bd340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599bd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599bd760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599bd8f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599bda80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599bdc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599be5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599bdda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7fb8599b7570" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7fb8599b7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599b78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599b7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599b7c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599b5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599b6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599b61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599b6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599b64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599b6660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599b67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599b6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599b6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599b6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599b5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599b51b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599b5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599b54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599b7da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599b5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599b57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7fb8599a7570" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7fb8599a7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599a78f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599a7a80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599a7c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599a5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599a6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599a61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599a6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599a64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599a6660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599a67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599a6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599a6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599a6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599a5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599a51b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599a5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599a54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599a7da0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599a5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599a57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7fb859a018a0" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7fb859a018a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a01c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a01db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a00020"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599ffc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a00340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a004d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a00660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a007f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a00980"/>
        <function-ref name="get" scoped="" ref="0x7fb859a00b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a00ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a00e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599ff020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599ff2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599ff440"/>
        <function-ref name="set" scoped="" ref="0x7fb8599ff5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599ff760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a001b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599ff8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599ffa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7fb8599bc580" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7fb8599bc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599bc900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599bca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599bcc20"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599ba980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599bb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599bb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599bb340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599bb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599bb660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599bb7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599bb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599bbb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599bbca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599ba020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599ba1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599ba340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599ba4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599bcdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599ba660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599ba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb859a4bd50" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb859a4bd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a4a100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a4a290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a4a420"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a481b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a4a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a4a8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a4aa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a4abf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a4ad80"/>
        <function-ref name="get" scoped="" ref="0x7fb859a49020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a491b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a49340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a494d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a49760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a498f0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a49a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a49c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a4a5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a49da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a48020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb859a32e50" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb859a32e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a31210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a313a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a31530"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a2f340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a31850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a319e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a31b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a31d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a30020"/>
        <function-ref name="get" scoped="" ref="0x7fb859a301b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a30340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a304d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a30660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a308f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a30a80"/>
        <function-ref name="set" scoped="" ref="0x7fb859a30c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a30da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a316c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a2f020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a2f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7fb859a18e50" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7fb859a18e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a17210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a173a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a17530"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a15340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a17850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a179e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a17b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a17d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a16020"/>
        <function-ref name="get" scoped="" ref="0x7fb859a161b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a16340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a164d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a16660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a168f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a16a80"/>
        <function-ref name="set" scoped="" ref="0x7fb859a16c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a16da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a176c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a15020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a151b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7fb8599c6580" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7fb8599c6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599c6900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599c6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599c6c20"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599c4980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599c5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599c51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599c5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599c54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599c5660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599c57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599c5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599c5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599c5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599c4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599c41b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599c4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599c44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599c6db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599c4660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599c47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7fb8599ac570" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7fb8599ac570"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599ac8f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599aca80"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599acc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599aa980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599ab020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599ab1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599ab340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599ab4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599ab660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599ab7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599ab980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599abb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599abca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599aa020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599aa1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599aa340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599aa4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599acda0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599aa660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599aa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7fb859a12020" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7fb859a12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a123a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a12530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a126c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a104d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a129e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a12b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a12d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a11020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a111b0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a11340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a114d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a11660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a117f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a11a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a11c10"/>
        <function-ref name="set" scoped="" ref="0x7fb859a11da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a10020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a12850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a101b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a10340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7fb8599f9020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7fb8599f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599f93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599f9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599f96c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599f74d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599f99e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599f9b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599f9d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599f8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599f81b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8599f8340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599f84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599f8660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599f87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599f8a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599f8c10"/>
        <function-ref name="set" scoped="" ref="0x7fb8599f8da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599f7020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599f9850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599f71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599f7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7fb8599e4020" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7fb8599e4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599e43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599e4530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599e46c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599e24d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599e49e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599e4b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599e4d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599e3020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599e31b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8599e3340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599e34d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599e3660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599e37f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599e3a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599e3c10"/>
        <function-ref name="set" scoped="" ref="0x7fb8599e3da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599e2020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599e4850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599e21b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb859a43580" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb859a43580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a43900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a43a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a43c20"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a41980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a42020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a421b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a42340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a424d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a42660"/>
        <function-ref name="get" scoped="" ref="0x7fb859a427f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a42980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a42b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a42ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a41020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a411b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a41340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a414d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a43db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a41660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a417f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7fb8599e9020" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7fb8599e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599e93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599e9530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599e96c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599e74d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599e99e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599e9b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599e9d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599e8020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599e81b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8599e8340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599e84d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599e8660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599e87f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599e8a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599e8c10"/>
        <function-ref name="set" scoped="" ref="0x7fb8599e8da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599e7020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599e9850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599e71b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599e7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb859a3e580" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb859a3e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a3e900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a3ea90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a3ec20"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a3c980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a3d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a3d1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a3d340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a3d4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a3d660"/>
        <function-ref name="get" scoped="" ref="0x7fb859a3d7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a3d980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a3db10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a3dca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a3c020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a3c1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a3c340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a3c4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a3edb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a3c660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a3c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7fb859a25710" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7fb859a25710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a25a90"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a25c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a25db0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a22a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a23340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a234d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a23660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a237f0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a23980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a23b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a23ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a23e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a22120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a222b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a22440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a225d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a23020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a22760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a228f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7fb859a0b8a0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7fb859a0b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a0bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a0bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a0a020"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a09c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a0a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a0a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a0a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a0a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a0a980"/>
        <function-ref name="get" scoped="" ref="0x7fb859a0ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a0aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a0ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a09020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a092b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a09440"/>
        <function-ref name="set" scoped="" ref="0x7fb859a095d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a09760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a0a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a098f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a09a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7fb8599f28a0" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7fb8599f28a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599f2c20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599f2db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599f1020"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599f0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599f1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599f14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599f1660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599f17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599f1980"/>
        <function-ref name="get" scoped="" ref="0x7fb8599f1b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599f1ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599f1e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599f0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599f02b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599f0440"/>
        <function-ref name="set" scoped="" ref="0x7fb8599f05d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599f0760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599f11b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599f08f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599f0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7fb8599dd8a0" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7fb8599dd8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599ddc20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599dddb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599dc020"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599dbc10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599dc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599dc4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599dc660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599dc7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599dc980"/>
        <function-ref name="get" scoped="" ref="0x7fb8599dcb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599dcca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599dce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599db020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599db2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599db440"/>
        <function-ref name="set" scoped="" ref="0x7fb8599db5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599db760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599dc1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599db8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599dba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb859a5ed50" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb859a5ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a4f100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a4f290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a4f420"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a4d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a4f740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a4f8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a4fa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a4fbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a4fd80"/>
        <function-ref name="get" scoped="" ref="0x7fb859a4e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a4e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a4e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a4e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a4e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a4e8f0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a4ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a4ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a4f5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a4eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb859a37d50" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb859a37d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a36100"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a36290"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a36420"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a341b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a36740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a368d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a36a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a36bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a36d80"/>
        <function-ref name="get" scoped="" ref="0x7fb859a35020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a351b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a35340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a354d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a35760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a358f0"/>
        <function-ref name="set" scoped="" ref="0x7fb859a35a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a35c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a365b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a35da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a34020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7fb859a1de50" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7fb859a1de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a1c210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a1c3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a1c530"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a1a340"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a1c850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a1c9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a1cb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a1cd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a1b020"/>
        <function-ref name="get" scoped="" ref="0x7fb859a1b1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a1b340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a1b4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a1b660"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a1b8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a1ba80"/>
        <function-ref name="set" scoped="" ref="0x7fb859a1bc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a1bda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a1c6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a1a020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7fb859a03020" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7fb859a03020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859a033a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859a03530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859a036c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859a014d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859a039e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859a03b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859a03d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859a02020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859a021b0"/>
        <function-ref name="get" scoped="" ref="0x7fb859a02340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859a024d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859a02660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859a027f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859a02a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859a02c10"/>
        <function-ref name="set" scoped="" ref="0x7fb859a02da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859a01020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859a03850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859a011b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859a01340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7fb8599b5d40" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7fb8599b5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599b40e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599b4270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599b4400"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599b21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599b4720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599b48b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599b4a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599b4bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599b4d60"/>
        <function-ref name="get" scoped="" ref="0x7fb8599b3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599b31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599b3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599b34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599b3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599b38f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599b3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599b3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599b4590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599b3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599b2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7fb8599a2560" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7fb8599a2560"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599a28e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599a2a70"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599a2c00"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599a0980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599a1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599a11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599a1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599a14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599a1660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599a17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599a1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599a1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599a1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599a0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599a01b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599a0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599a04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599a2d90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599a0660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599a07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7fb8599d0580" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7fb8599d0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599d0900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599d0a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599d0c20"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599ce980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599cf020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599cf1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599cf340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599cf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599cf660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599cf7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599cf980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599cfb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599cfca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599ce020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599ce1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599ce340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599ce4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599d0db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599ce660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599ce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7fb8599fe020" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7fb8599fe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599fe3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599fe530"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599fe6c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599fc4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599fe9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599feb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599fed00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599fd020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599fd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8599fd340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599fd4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599fd660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599fd7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599fda80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599fdc10"/>
        <function-ref name="set" scoped="" ref="0x7fb8599fdda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599fc020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599fe850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599fc1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7fb8599a0d40" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7fb8599a0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85999f0e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85999f270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85999f400"/>
        <function-ref name="clr" scoped="" ref="0x7fb85999d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85999f720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85999f8b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85999fa40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85999fbd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85999fd60"/>
        <function-ref name="get" scoped="" ref="0x7fb85999e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85999e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85999e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85999e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85999e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85999e8f0"/>
        <function-ref name="set" scoped="" ref="0x7fb85999ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85999ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85999f590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85999eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85999d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7fb859998580" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7fb859998580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859998900"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859998a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859998c20"/>
        <function-ref name="clr" scoped="" ref="0x7fb859996980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859997020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599971b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859997340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599974d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859997660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599977f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859997980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859997b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859997ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859996020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599961b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859996340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599964d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859998db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859996660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599967f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7fb8599d88f0" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7fb8599d88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599d70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599d7230"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8599d73c0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599d51b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599d76e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599d7870"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599d7a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599d7b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599d7d20"/>
        <function-ref name="get" scoped="" ref="0x7fb8599d6020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599d61b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599d6340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599d64d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599d6760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599d68f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8599d6a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599d6c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8599d7550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599d6da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599d5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859993d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859993d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599640e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859964270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859964400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599621b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859964720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599648b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859964a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859964bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859964d60"/>
        <function-ref name="get" scoped="" ref="0x7fb859963020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599631b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859963340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599634d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859963760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599638f0"/>
        <function-ref name="set" scoped="" ref="0x7fb859963a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859963c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859963da0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859964590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859962020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb85995f260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb85995f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85995f5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85995f770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85995f900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85995d660"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85995fc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85995fdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85995e020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85995e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85995e340"/>
        <function-ref name="get" scoped="" ref="0x7fb85995e4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85995e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85995e7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85995e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85995ec10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85995eda0"/>
        <function-ref name="set" scoped="" ref="0x7fb85995d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85995d1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85995d340"/>
        <function-ref name="clr" scoped="" ref="0x7fb85995fa90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85995d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb85995a740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb85995a740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85995aac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85995ac50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85995ade0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859958a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599591b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859959340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599594d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859959660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599597f0"/>
        <function-ref name="get" scoped="" ref="0x7fb859959980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859959b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859959ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859959e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859958120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599582b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859958440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599585d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859958760"/>
        <function-ref name="clr" scoped="" ref="0x7fb859959020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599588f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859955b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859955b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859954020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599541b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859954340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859952020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859954660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599547f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859954980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859954b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859954ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb859954e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859953020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599531b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859953340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599535d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859953760"/>
        <function-ref name="set" scoped="" ref="0x7fb8599538f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859953a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859953c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599544d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859953da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb85994f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb85994f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85994f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85994f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85994f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85994c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85994fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85994fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85994fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85994d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85994d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb85994d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85994d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85994d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85994d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85994da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85994dc10"/>
        <function-ref name="set" scoped="" ref="0x7fb85994dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85994c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85994c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb85994f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85994c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859949540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859949540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599498c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859949a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859949be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859947980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859948020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599481b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859948340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599484d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859948660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599487f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859948980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859948b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859948ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859947020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599471b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859947340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599474d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859947660"/>
        <function-ref name="clr" scoped="" ref="0x7fb859949d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859944b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859944b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859943020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599431b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859943340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859941020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859943660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599437f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859943980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859943b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859943ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb859943e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859942020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599421b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859942340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599425d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859942760"/>
        <function-ref name="set" scoped="" ref="0x7fb8599428f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859942a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859942c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599434d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859942da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb85993e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb85993e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85993e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85993e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85993e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85993c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85993ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85993ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85993ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85993d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85993d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb85993d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85993d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85993d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85993d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85993da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85993dc10"/>
        <function-ref name="set" scoped="" ref="0x7fb85993dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85993c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85993c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb85993e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85993c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859939540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859939540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599398c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859939a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859939be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859937980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859938020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599381b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859938340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599384d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859938660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599387f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859938980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859938b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859938ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859937020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599371b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859937340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599374d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859937660"/>
        <function-ref name="clr" scoped="" ref="0x7fb859939d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859934b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859934b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859933020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599331b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859933340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859931020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859933660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599337f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859933980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859933b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859933ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb859933e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859932020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599321b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859932340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599325d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859932760"/>
        <function-ref name="set" scoped="" ref="0x7fb8599328f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859932a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859932c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599334d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859932da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb85992e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb85992e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85992e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85992e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85992e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85992c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85992ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85992ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85992ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85992d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85992d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb85992d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85992d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85992d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85992d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85992da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85992dc10"/>
        <function-ref name="set" scoped="" ref="0x7fb85992dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85992c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85992c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb85992e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85992c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859929540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859929540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599298c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859929a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859929be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859927980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859928020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599281b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859928340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599284d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859928660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599287f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859928980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859928b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859928ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859927020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599271b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859927340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599274d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859927660"/>
        <function-ref name="clr" scoped="" ref="0x7fb859929d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599277f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859924d10" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859924d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599220e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859922270"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859922400"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8599201b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859922720"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599228b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859922a40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859922bd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859922d60"/>
        <function-ref name="get" scoped="" ref="0x7fb859921020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8599211b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859921340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8599214d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859921760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599218f0"/>
        <function-ref name="set" scoped="" ref="0x7fb859921a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859921c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859921da0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859922590"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859920020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb85991d260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb85991d260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85991d5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85991d770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85991d900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85991b660"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85991dc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85991ddb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85991c020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85991c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85991c340"/>
        <function-ref name="get" scoped="" ref="0x7fb85991c4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85991c660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85991c7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85991c980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85991cc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85991cda0"/>
        <function-ref name="set" scoped="" ref="0x7fb85991b020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85991b1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85991b340"/>
        <function-ref name="clr" scoped="" ref="0x7fb85991da90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85991b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859918740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859918740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859918ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859918c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859918de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859916a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8599171b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859917340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8599174d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859917660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8599177f0"/>
        <function-ref name="get" scoped="" ref="0x7fb859917980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859917b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859917ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859917e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859916120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599162b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859916440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599165d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859916760"/>
        <function-ref name="clr" scoped="" ref="0x7fb859917020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599168f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859913b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859913b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859912020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599121b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859912340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859910020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859912660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599127f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859912980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859912b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859912ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb859912e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859911020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599111b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859911340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599115d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859911760"/>
        <function-ref name="set" scoped="" ref="0x7fb8599118f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859911a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859911c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599124d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859911da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb85990d060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb85990d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85990d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85990d570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85990d700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85990b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85990da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85990dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85990dd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85990c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85990c1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb85990c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85990c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85990c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85990c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85990ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85990cc10"/>
        <function-ref name="set" scoped="" ref="0x7fb85990cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85990b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85990b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb85990d890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85990b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859908540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859908540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8599088c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859908a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859908be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859906980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859907020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599071b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859907340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8599074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859907660"/>
        <function-ref name="get" scoped="" ref="0x7fb8599077f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859907980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859907b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859907ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859906020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8599061b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859906340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8599064d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859906660"/>
        <function-ref name="clr" scoped="" ref="0x7fb859908d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8599067f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859903b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859903b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859902020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8599021b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859902340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859900020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859902660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8599027f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859902980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859902b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859902ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb859902e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859901020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8599011b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859901340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8599015d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859901760"/>
        <function-ref name="set" scoped="" ref="0x7fb8599018f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859901a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859901c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8599024d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859901da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598fd060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598fd060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598fd3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598fd570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598fd700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598fb4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598fda20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598fdbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598fdd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598fc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598fc1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8598fc340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598fc4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598fc660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598fc7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598fca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598fcc10"/>
        <function-ref name="set" scoped="" ref="0x7fb8598fcda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598fb020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598fb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598fd890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598fb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598f7540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598f7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598f78c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598f7a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598f7be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598f5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598f6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598f61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598f6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598f64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598f6660"/>
        <function-ref name="get" scoped="" ref="0x7fb8598f67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598f6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598f6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598f6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598f5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598f51b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8598f5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598f54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598f5660"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598f7d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598f57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598f2b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598f2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598f1020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598f11b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598f1340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598ef020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598f1660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598f17f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598f1980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598f1b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598f1ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb8598f1e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598f0020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598f01b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598f0340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598f05d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598f0760"/>
        <function-ref name="set" scoped="" ref="0x7fb8598f08f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598f0a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598f0c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598f14d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598f0da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598ec060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598ec060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598ec3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598ec570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598ec700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598ea4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598eca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598ecbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598ecd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598eb020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598eb1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8598eb340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598eb4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598eb660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598eb7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598eba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598ebc10"/>
        <function-ref name="set" scoped="" ref="0x7fb8598ebda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598ea020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598ea1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598ec890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598ea340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598e7540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598e7540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598e78c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598e7a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598e7be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598e5980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598e6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598e61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598e6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598e64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598e6660"/>
        <function-ref name="get" scoped="" ref="0x7fb8598e67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598e6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598e6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598e6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598e5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598e51b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8598e5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598e54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598e5660"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598e7d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598e57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598e2dc0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598e2dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598e1180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598e1310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598e14a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598df1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598e17c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598e1950"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598e1ae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598e1c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598e1e00"/>
        <function-ref name="get" scoped="" ref="0x7fb8598e0020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598e01b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598e0340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598e04d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598e0760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598e08f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8598e0a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598e0c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598e0da0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598e1630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598df020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598dc260" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598dc260"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598dc5e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598dc770"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598dc900"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598da660"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598dcc20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598dcdb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598db020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598db1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598db340"/>
        <function-ref name="get" scoped="" ref="0x7fb8598db4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598db660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598db7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598db980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598dbc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598dbda0"/>
        <function-ref name="set" scoped="" ref="0x7fb8598da020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598da1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598da340"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598dca90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598da4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598d7740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598d7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598d7ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598d7c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598d7de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598d5a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598d61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598d6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598d64d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598d6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598d67f0"/>
        <function-ref name="get" scoped="" ref="0x7fb8598d6980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598d6b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598d6ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598d6e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598d5120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598d52b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8598d5440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598d55d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598d5760"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598d6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598d58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598d2b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598d2b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598d0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598d01b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598d0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598ce020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598d0660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598d07f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598d0980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598d0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598d0ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb8598d0e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598cf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598cf1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598cf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598cf5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598cf760"/>
        <function-ref name="set" scoped="" ref="0x7fb8598cf8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598cfa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598cfc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598d04d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598cfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598cb060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598cb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598cb3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598cb570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598cb700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598c94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598cba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598cbbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598cbd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598ca020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598ca1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8598ca340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598ca4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598ca660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598ca7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598caa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598cac10"/>
        <function-ref name="set" scoped="" ref="0x7fb8598cada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598c9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598c91b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598cb890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598c9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598c6540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598c6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598c68c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598c6a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598c6be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598c4980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598c5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598c51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598c5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598c54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598c5660"/>
        <function-ref name="get" scoped="" ref="0x7fb8598c57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598c5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598c5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598c5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598c4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598c41b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8598c4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598c44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598c4660"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598c6d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598c47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598c1b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598c1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598c0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598c01b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598c0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598be020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598c0660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598c07f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598c0980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598c0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598c0ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb8598c0e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598bf020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598bf1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598bf340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598bf5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598bf760"/>
        <function-ref name="set" scoped="" ref="0x7fb8598bf8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598bfa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598bfc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598c04d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598bfda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598bb060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598bb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598bb3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598bb570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598bb700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598b94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598bba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598bbbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598bbd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598ba020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598ba1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8598ba340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598ba4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598ba660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598ba7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598baa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598bac10"/>
        <function-ref name="set" scoped="" ref="0x7fb8598bada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598b9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598b91b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598bb890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598b9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598b6540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598b6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598b68c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598b6a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598b6be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598b4980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598b5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598b51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598b5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598b54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598b5660"/>
        <function-ref name="get" scoped="" ref="0x7fb8598b57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598b5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598b5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598b5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598b4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598b41b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8598b4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598b44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598b4660"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598b6d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598b47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598b1b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598b1b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598b0020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598b01b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598b0340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598ae020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598b0660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598b07f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598b0980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598b0b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598b0ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb8598b0e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598af020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598af1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598af340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598af5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598af760"/>
        <function-ref name="set" scoped="" ref="0x7fb8598af8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598afa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598afc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598b04d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598afda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598ab060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598ab060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598ab3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598ab570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598ab700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598a94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598aba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598abbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598abd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598aa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598aa1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb8598aa340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598aa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598aa660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598aa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598aaa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598aac10"/>
        <function-ref name="set" scoped="" ref="0x7fb8598aada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598a9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598a91b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598ab890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598a9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598a6540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598a6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598a68c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8598a6a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8598a6be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598a3980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8598a4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598a41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8598a4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598a44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598a4660"/>
        <function-ref name="get" scoped="" ref="0x7fb8598a47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598a4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8598a4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598a4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8598a3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598a31b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8598a3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598a34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598a3660"/>
        <function-ref name="clr" scoped="" ref="0x7fb8598a6d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb8598a0b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb8598a0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85989f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85989f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85989f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85989d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85989f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85989f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85989f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85989fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85989fca0"/>
        <function-ref name="get" scoped="" ref="0x7fb85989fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85989e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85989e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85989e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85989e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85989e760"/>
        <function-ref name="set" scoped="" ref="0x7fb85989e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85989ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85989ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fb85989f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85989eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb85989a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb85989a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85989a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85989a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85989a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598984d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85989aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85989abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85989ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859899020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598991b0"/>
        <function-ref name="get" scoped="" ref="0x7fb859899340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598994d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859899660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598997f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859899a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859899c10"/>
        <function-ref name="set" scoped="" ref="0x7fb859899da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859898020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598981b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb85989a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859898340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859895540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859895540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598958c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859895a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859895be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859893980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859894020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598941b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859894340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598944d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859894660"/>
        <function-ref name="get" scoped="" ref="0x7fb8598947f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859894980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859894b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859894ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859893020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598931b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859893340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598934d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859893660"/>
        <function-ref name="clr" scoped="" ref="0x7fb859895d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598937f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859890b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859890b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85988f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85988f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85988f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85988d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85988f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85988f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85988f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85988fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85988fca0"/>
        <function-ref name="get" scoped="" ref="0x7fb85988fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85988e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85988e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85988e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85988e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85988e760"/>
        <function-ref name="set" scoped="" ref="0x7fb85988e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85988ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85988ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fb85988f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85988eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb85988a060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb85988a060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85988a3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85988a570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85988a700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598884d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85988aa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85988abb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85988ad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859889020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598891b0"/>
        <function-ref name="get" scoped="" ref="0x7fb859889340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598894d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859889660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598897f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859889a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859889c10"/>
        <function-ref name="set" scoped="" ref="0x7fb859889da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859888020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598881b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb85988a890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859888340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859885540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859885540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598858c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859885a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859885be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859883980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859884020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598841b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859884340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598844d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859884660"/>
        <function-ref name="get" scoped="" ref="0x7fb8598847f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859884980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859884b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859884ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859883020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598831b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859883340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598834d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859883660"/>
        <function-ref name="clr" scoped="" ref="0x7fb859885d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598837f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859880b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859880b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85987f020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85987f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85987f340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85987d020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85987f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85987f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85987f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85987fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85987fca0"/>
        <function-ref name="get" scoped="" ref="0x7fb85987fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85987e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85987e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85987e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85987e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85987e760"/>
        <function-ref name="set" scoped="" ref="0x7fb85987e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85987ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85987ec10"/>
        <function-ref name="clr" scoped="" ref="0x7fb85987f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85987eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859879060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859879060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598793e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859879570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859879700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598774d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859879a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859879bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859879d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859878020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598781b0"/>
        <function-ref name="get" scoped="" ref="0x7fb859878340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598784d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859878660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598787f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859878a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859878c10"/>
        <function-ref name="set" scoped="" ref="0x7fb859878da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859877020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598771b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859879890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859877340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859874540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859874540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598748c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859874a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859874be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859872980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859873020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598731b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859873340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598734d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859873660"/>
        <function-ref name="get" scoped="" ref="0x7fb8598737f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859873980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859873b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859873ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859872020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598721b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859872340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598724d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859872660"/>
        <function-ref name="clr" scoped="" ref="0x7fb859874d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598727f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb85986fb90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb85986fb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb85986e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb85986e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb85986e340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb85986c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb85986e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85986e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb85986e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb85986eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85986eca0"/>
        <function-ref name="get" scoped="" ref="0x7fb85986ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb85986d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb85986d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb85986d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb85986d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb85986d760"/>
        <function-ref name="set" scoped="" ref="0x7fb85986d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb85986da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb85986dc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb85986e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb85986dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859869060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859869060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598693e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859869570"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859869700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8598674d0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859869a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb859869bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859869d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb859868020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8598681b0"/>
        <function-ref name="get" scoped="" ref="0x7fb859868340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8598684d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859868660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8598687f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859868a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859868c10"/>
        <function-ref name="set" scoped="" ref="0x7fb859868da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859867020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8598671b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb859869890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859867340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fb859864540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7fb859864540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8598648c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859864a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859864be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859862980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859863020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8598631b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859863340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8598634d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859863660"/>
        <function-ref name="get" scoped="" ref="0x7fb8598637f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859863980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859863b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859863ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb859862020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8598621b0"/>
        <function-ref name="set" scoped="" ref="0x7fb859862340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8598624d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb859862660"/>
        <function-ref name="clr" scoped="" ref="0x7fb859864d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8598627f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb8597d4610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8597d4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8597d4990"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8597d4b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8597d4cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8597d2980"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8597d3020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8597d31b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8597d3340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8597d34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8597d3660"/>
        <function-ref name="get" scoped="" ref="0x7fb8597d37f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8597d3980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8597d3b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8597d3ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8597d2020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8597d21b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8597d2340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8597d24d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8597d2660"/>
        <function-ref name="clr" scoped="" ref="0x7fb8597d4e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8597d27f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb8597e6480" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb8597e6480"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8597e6800"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8597e6990"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8597e6b20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8597e6cb0"/>
        <function-ref name="get" scoped="" ref="0x7fb8597e6e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8597d4020"/>
        <function-ref name="set" scoped="" ref="0x7fb8597d41b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8597d4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb8597cfde0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8597cfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8597cd180"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8597cd310"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8597cd4a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8597cb1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8597cd7c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8597cd950"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8597cdae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8597cdc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8597cde00"/>
        <function-ref name="get" scoped="" ref="0x7fb8597cc020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8597cc1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8597cc340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8597cc4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8597cc760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8597cc8f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8597cca80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8597ccc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8597ccda0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8597cd630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8597cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb8597d0b20" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb8597d0b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8597cf020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8597cf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8597cf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8597cf4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb8597cf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8597cf7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8597cf980"/>
        <function-ref name="clr" scoped="" ref="0x7fb8597cfb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb8597c8480" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8597c8480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8597c8800"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8597c8990"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8597c8b20"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8597c67f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8597c8e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8597c7020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8597c71b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8597c7340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8597c74d0"/>
        <function-ref name="get" scoped="" ref="0x7fb8597c7660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8597c77f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8597c7980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8597c7b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8597c7da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8597c6020"/>
        <function-ref name="set" scoped="" ref="0x7fb8597c61b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8597c6340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8597c64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8597c8cb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8597c6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb8597c91b0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb8597c91b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8597c9530"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8597c96c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8597c9850"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8597c99e0"/>
        <function-ref name="get" scoped="" ref="0x7fb8597c9b70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8597c9d00"/>
        <function-ref name="set" scoped="" ref="0x7fb8597c8020"/>
        <function-ref name="clr" scoped="" ref="0x7fb8597c81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7fb859720190" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7fb859720190"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb859720510"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb8597206a0"/>
        <function-ref name="start" scoped="" ref="0x7fb859720830"/>
        <function-ref name="stop" scoped="" ref="0x7fb8597209c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fb8597bbcd0" loc="8:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7fb8597bbcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fb8597b80a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fb859744c30" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb859744c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85979c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb85979c1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85979c340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85979c4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb85979c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fb859734020" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb859734020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8597343a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb859734530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8597346c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb859734850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8597349e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb8597180f0" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb8597180f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb859718470"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb859718600"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb859718790"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb859718920"/>
        <function-ref name="getPower" scoped="" ref="0x7fb859718ab0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb859718c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerDormir" ref="0x7fb8597a21c0" loc="13:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerDormir" scoped="" ref="0x7fb8597a21c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb85979e630"/>
        <function-ref name="fired" scoped="" ref="0x7fb8597a1c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8597a09d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb8597a0550"/>
        <function-ref name="getdt" scoped="" ref="0x7fb85979d020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb85979eab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8597a00d0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb8597a2db0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb85979e020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8597a12e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb8597a17b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7fb859724840" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb859724840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb859724bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb8597b8360" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb8597b8360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb8597b86e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb8597b8870"/>
        <function-ref name="led1On" scoped="" ref="0x7fb8597b8a00"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb8597b8b90"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb8597b8d20"/>
        <function-ref name="get" scoped="" ref="0x7fb8597b7020"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb8597b71b0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb8597b77f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8597b7340"/>
        <function-ref name="led0On" scoped="" ref="0x7fb8597b74d0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb8597b7660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7fb8597ab820" loc="11:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7fb8597ab820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8597aacf0"/>
        <function-ref name="fired" scoped="" ref="0x7fb8597b5300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8597aa0d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb8597b5c00"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8597a8660"/>
        <function-ref name="gett0" scoped="" ref="0x7fb8597a81e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8597b5780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb8597b6480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb8597aa6e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8597b6950"/>
        <function-ref name="stop" scoped="" ref="0x7fb8597b6e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7fb8597a8cd0" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7fb8597a8cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8597a3220"/>
        <function-ref name="fired" scoped="" ref="0x7fb8597a67c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8597a5590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb8597a5110"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8597a3b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fb8597a36a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8597a6c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb8597a7940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb8597a5ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8597a7e10"/>
        <function-ref name="stop" scoped="" ref="0x7fb8597a6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fb859733be0" loc="15:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb859733be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb85979b020"/>
        <function-ref name="source" scoped="" ref="0x7fb85979b1b0"/>
        <function-ref name="address" scoped="" ref="0x7fb85979b340"/>
        <function-ref name="destination" scoped="" ref="0x7fb85979b4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb85979b660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb85979b7f0"/>
        <function-ref name="type" scoped="" ref="0x7fb85979b980"/>
        <function-ref name="setType" scoped="" ref="0x7fb85979bb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb85979bca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb85979be30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb859745020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb8596ec980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8596ec980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8593c0e80"/>
        <function-ref name="fired" scoped="" ref="0x7fb8593c24a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8593c0260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb8593c2da0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8593bf7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb8593bf320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8593c2920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb8593c35a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb8593c0870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8593c3a70"/>
        <function-ref name="stop" scoped="" ref="0x7fb8593c2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fb8596e6d80" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fb8596e6d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8596df220"/>
        <function-ref name="fired" scoped="" ref="0x7fb8596e27f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8596e15b0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb8596e1130"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8596dfb20"/>
        <function-ref name="gett0" scoped="" ref="0x7fb8596df6a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8596e2c70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb8596e39a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb8596e1bc0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8596e3e70"/>
        <function-ref name="stop" scoped="" ref="0x7fb8596e2370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fb8596d9790" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7fb8596d9790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8596d6c40"/>
        <function-ref name="fired" scoped="" ref="0x7fb8596d7220"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8596d6020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb8596d7b20"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8596d5590"/>
        <function-ref name="gett0" scoped="" ref="0x7fb8596d5110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8596d76a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb8596d83b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb8596d6630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8596d8880"/>
        <function-ref name="stop" scoped="" ref="0x7fb8596d8d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb8596d31a0" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb8596d31a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8596d3dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb8596dd9a0" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb8596dd9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb8596ddd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb859493870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb859493870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb85948f090"/>
        <function-ref name="fired" scoped="" ref="0x7fb859490090"/>
        <function-ref name="startAt" scoped="" ref="0x7fb859490a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb859490550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb85948f550"/>
        <function-ref name="start" scoped="" ref="0x7fb8594916a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb859491bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb859493020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb859493020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb8594933a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb8582214f0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb8582214f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb85821fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fb858220da0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb85821f760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb85821f2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb85821d2a0"/>
        <function-ref name="start" scoped="" ref="0x7fb8582203d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb8582208e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb858222b10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb858222b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb858221020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb858207da0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb858207da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb858205180"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb858205310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8582054a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb858205630"/>
        <function-ref name="fired" scoped="" ref="0x7fb8582057c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb858209340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb858209340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8582096c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb858209850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8582099e0"/>
        <function-ref name="get" scoped="" ref="0x7fb858209b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb858209d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb858208020"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8582081b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb858208340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8582084d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb858208660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8582087f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb858208a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb858208a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb858208e00"/>
        <function-ref name="getControl" scoped="" ref="0x7fb858207020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8582071b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb858207340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8582074d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb858207660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8582077f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb858207980"/>
        <function-ref name="setControl" scoped="" ref="0x7fb858207b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb85969a1d0" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb85969a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85969a550"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb85969a6e0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb85969a870"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb85969aa00"/>
        <function-ref name="fired" scoped="" ref="0x7fb85969ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb85969f990" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb85969f990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85969fd10"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb85969e020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb85969e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb85969e340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb85969e4d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb85969e660"/>
        <function-ref name="getMode" scoped="" ref="0x7fb85969e7f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb85969e980"/>
        <function-ref name="overflow" scoped="" ref="0x7fb85969eb10"/>
        <function-ref name="setMode" scoped="" ref="0x7fb85969eca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb85969ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb85969d720" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb85969d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb85969daa0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb85969dc30"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb85969ddc0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb85969c020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb85969c1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb85969c340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb85969c4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb85969c660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb85969c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7fb85968a730" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7fb85968a730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb85968aab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb85968ac40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb85968add0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb859689020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8596891b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb859689340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8596894d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb859689660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8596897f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7fb859685280" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7fb859685280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb859685600"/>
        <function-ref name="getControl" scoped="" ref="0x7fb859685790"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb859685920"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb859685ab0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb859685c40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb859685dd0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb859684020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8596841b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb859684340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7fb85968b700" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7fb85968b700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85968ba80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb85968bc10"/>
        <function-ref name="captured" scoped="" ref="0x7fb85968bda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb85968a020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb85968a1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb85968a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7fb859678020" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7fb859678020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8596783a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb859678530"/>
        <function-ref name="captured" scoped="" ref="0x7fb8596786c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb859678850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8596789e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb859678b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7fb859691890" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7fb859691890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb859691c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb859691da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb85968b020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb85968b1b0"/>
        <function-ref name="fired" scoped="" ref="0x7fb85968b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7fb859679160" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7fb859679160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8596794e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb859679670"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb859679800"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb859679990"/>
        <function-ref name="fired" scoped="" ref="0x7fb859679b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7fb85966fae0" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7fb85966fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85966fe60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb85966e020"/>
        <function-ref name="captured" scoped="" ref="0x7fb85966e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb85966e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb85966e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb85966e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7fb859677020" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7fb859677020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb8596773a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb859677530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8596776c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb859677850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8596779e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb859677b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb859677d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb859676020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8596761b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7fb8596950c0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7fb8596950c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb859695440"/>
        <function-ref name="getControl" scoped="" ref="0x7fb8596955d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb859695760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8596958f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb859695a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb859695c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb859695da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb859694020"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8596941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7fb85967fa20" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7fb85967fa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85967fda0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb85967e020"/>
        <function-ref name="captured" scoped="" ref="0x7fb85967e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb85967e340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb85967e4d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb85967e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7fb859680bb0" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7fb859680bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85967f020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb85967f1b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb85967f340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb85967f4d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb85967f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7fb859682730" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7fb859682730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb859682ab0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb859682c40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb859682dd0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb859680020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8596801b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb859680340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8596804d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb859680660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8596807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7fb859688a20" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7fb859688a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb859688da0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb859687020"/>
        <function-ref name="captured" scoped="" ref="0x7fb8596871b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb859687340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8596874d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb859687660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7fb859675570" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7fb859675570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8596758f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb859675a80"/>
        <function-ref name="captured" scoped="" ref="0x7fb859675c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb859675da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb859674020"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8596741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7fb85967ea50" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7fb85967ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb85967edd0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb85967d020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb85967d1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb85967d340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb85967d4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb85967d660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb85967d7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb85967d980"/>
        <function-ref name="setControl" scoped="" ref="0x7fb85967db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7fb859689bb0" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7fb859689bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb859688020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8596881b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb859688340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8596884d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb859688660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7fb859699830" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7fb859699830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859699bb0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb859699d40"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb859696020"/>
        <function-ref name="get" scoped="" ref="0x7fb8596961b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb859696340"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8596964d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb859696660"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8596967f0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb859696980"/>
        <function-ref name="setMode" scoped="" ref="0x7fb859696b10"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb859696ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7fb859676570" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7fb859676570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb859676af0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb859676c80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb859676e10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb859675020"/>
        <function-ref name="fired" scoped="" ref="0x7fb8596751b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7fb859692410" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7fb859692410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb859692790"/>
        <function-ref name="getControl" scoped="" ref="0x7fb859692920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb859692ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb859692c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb859692dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb859691020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8596911b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb859691340"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8596914d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7fb8596745a0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7fb8596745a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb859674920"/>
        <function-ref name="getControl" scoped="" ref="0x7fb859674ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb859674c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb859674dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb859673020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8596731b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb859673340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8596734d0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb859673660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7fb85968c410" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7fb85968c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85968c790"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb85968c920"/>
        <function-ref name="captured" scoped="" ref="0x7fb85968cab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb85968cc40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb85968cdd0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb859692020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7fb85967cda0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7fb85967cda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85967b180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb85967b310"/>
        <function-ref name="captured" scoped="" ref="0x7fb85967b4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb85967b630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb85967b7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb85967b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7fb859694570" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7fb859694570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8596948f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb859694a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb859694c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb859694da0"/>
        <function-ref name="fired" scoped="" ref="0x7fb859693020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7fb85967c020" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7fb85967c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85967c3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb85967c530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb85967c6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb85967c850"/>
        <function-ref name="fired" scoped="" ref="0x7fb85967c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7fb859672890" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7fb859672890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb859672c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb859672da0"/>
        <function-ref name="captured" scoped="" ref="0x7fb859671020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8596711b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb859671340"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8596714d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7fb85967bd40" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7fb85967bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb85967a0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb85967a270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb85967a400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb85967a590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb85967a720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb85967a8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb85967aa40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb85967abd0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb85967ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7fb8596879e0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7fb8596879e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859687d60"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb859686020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8596861b0"/>
        <function-ref name="get" scoped="" ref="0x7fb859686340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8596864d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb859686660"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8596867f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb859686980"/>
        <function-ref name="overflow" scoped="" ref="0x7fb859686b10"/>
        <function-ref name="setMode" scoped="" ref="0x7fb859686ca0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb859686e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7fb859683700" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7fb859683700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb859683a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb859683c10"/>
        <function-ref name="captured" scoped="" ref="0x7fb859683da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb859682020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8596821b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb859682340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7fb859673a20" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7fb859673a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb859673da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb859672020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8596721b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb859672340"/>
        <function-ref name="fired" scoped="" ref="0x7fb8596724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7fb859670d40" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7fb859670d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85966f0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb85966f270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb85966f400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb85966f590"/>
        <function-ref name="fired" scoped="" ref="0x7fb85966f720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7fb859684700" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7fb859684700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb859684b80"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb859684d10"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb859683020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8596831b0"/>
        <function-ref name="fired" scoped="" ref="0x7fb859683340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7fb8596718c0" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7fb8596718c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb859671c40"/>
        <function-ref name="getControl" scoped="" ref="0x7fb859671dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb859670020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8596701b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb859670340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8596704d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb859670660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8596707f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb859670980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fb859636940" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb859636940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb859636cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fb8596362f0" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb8596362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb859636670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fb859635020" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb859635020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8596353a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fb859637bf0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb859637bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb859636020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb8596383e0" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8596383e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859638760"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8596388f0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb859638a80"/>
        <function-ref name="get" scoped="" ref="0x7fb859638c10"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb859638da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb859637020"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8596371b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb859637340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8596374d0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb859637660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8596377f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7fb85962e750" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7fb85962e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb85962ead0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7fb85962e100" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7fb85962e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb85962e480"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7fb85962eda0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7fb85962eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb85962d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7fb85962fa60" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb85962fa60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb85962fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb859630260" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb859630260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8596305e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb859630770"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb859630900"/>
        <function-ref name="get" scoped="" ref="0x7fb859630a90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb859630c20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb859630db0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb85962f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb85962f1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb85962f340"/>
        <function-ref name="setMode" scoped="" ref="0x7fb85962f4d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb85962f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb8595e37a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb8595e37a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595e3b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb8595e3cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb8595e3e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595e2020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595e21b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8595e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb85962a6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb85962a6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb85962aa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb85962abe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb85962ad70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8595e4020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8595e41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595e4340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8595e44d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8595e4660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8595e47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb8595e1c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb8595e1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8595e0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb8595e4ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb8595e4ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595e4e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8595e3020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8595e31b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8595e3340"/>
        <function-ref name="fired" scoped="" ref="0x7fb8595e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb8595e2610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8595e2610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8595e2990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8595e2b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595e2cb0"/>
        <function-ref name="get" scoped="" ref="0x7fb8595e2e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595e1020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595e11b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8595e1340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595e14d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8595e1660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8595e17f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8595e1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb8595dccb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb8595dccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595db0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb8595db230"/>
        <function-ref name="captured" scoped="" ref="0x7fb8595db3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595db550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595db6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8595db870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb8595deb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb8595deb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb8595dd020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb8595dd1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595dd340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8595dd4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8595dd660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595dd7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8595dd980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8595ddb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8595ddca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb8595d92f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb8595d92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8595d9670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb8595dc020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb8595dc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595dc3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8595dc530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8595dc6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8595dc850"/>
        <function-ref name="fired" scoped="" ref="0x7fb8595dc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb8595dbb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8595dbb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8595da020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8595da1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595da340"/>
        <function-ref name="get" scoped="" ref="0x7fb8595da4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595da660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595da7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8595da980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595dab10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8595daca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8595dae30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8595d9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb8595d32f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb8595d32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595d3670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb8595d3800"/>
        <function-ref name="captured" scoped="" ref="0x7fb8595d3990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595d3b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595d3cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8595d3e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb8595d5220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb8595d5220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb8595d55a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb8595d5730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595d58c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8595d5a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8595d5be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595d5d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8595d4020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8595d41b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8595d4340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb8595d17a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb8595d17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8595d1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb8595d4610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb8595d4610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595d4990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8595d4b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8595d4cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8595d4e40"/>
        <function-ref name="fired" scoped="" ref="0x7fb8595d3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb8595d2160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8595d2160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8595d24e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8595d2670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595d2800"/>
        <function-ref name="get" scoped="" ref="0x7fb8595d2990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595d2b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595d2cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8595d2e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595d1020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8595d11b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8595d1340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8595d14d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb8595cc7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb8595cc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595ccb20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb8595cccb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb8595cce40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595cb020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595cb1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8595cb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb8595ce6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb8595ce6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb8595cea50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb8595cebe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595ced70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8595cd020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8595cd1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595cd340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8595cd4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8595cd660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8595cd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb8595cac50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb8595cac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8595c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb8595cdac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb8595cdac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595cde40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8595cc020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8595cc1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8595cc340"/>
        <function-ref name="fired" scoped="" ref="0x7fb8595cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb8595cb610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8595cb610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8595cb990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8595cbb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595cbcb0"/>
        <function-ref name="get" scoped="" ref="0x7fb8595cbe40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595ca020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595ca1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8595ca340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595ca4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8595ca660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8595ca7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8595ca980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb8595c4cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb8595c4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595c30a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb8595c3230"/>
        <function-ref name="captured" scoped="" ref="0x7fb8595c33c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595c3550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595c36e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8595c3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb8595c7b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb8595c7b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb8595c5020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb8595c51b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595c5340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8595c54d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8595c5660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595c57f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8595c5980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8595c5b10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8595c5ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb8595c12f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb8595c12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8595c1670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb8595c4020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb8595c4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595c43a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8595c4530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8595c46c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8595c4850"/>
        <function-ref name="fired" scoped="" ref="0x7fb8595c49e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb8595c3b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8595c3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8595c2020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8595c21b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595c2340"/>
        <function-ref name="get" scoped="" ref="0x7fb8595c24d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595c2660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595c27f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8595c2980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595c2b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8595c2ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8595c2e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8595c1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb8595bc2f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb8595bc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595bc670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb8595bc800"/>
        <function-ref name="captured" scoped="" ref="0x7fb8595bc990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595bcb20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595bccb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8595bce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb8595be220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb8595be220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb8595be5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb8595be730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595be8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8595bea50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8595bebe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595bed70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8595bd020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8595bd1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8595bd340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb8595ba7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb8595ba7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8595bab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb8595bd610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb8595bd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595bd990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8595bdb20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8595bdcb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8595bde40"/>
        <function-ref name="fired" scoped="" ref="0x7fb8595bc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb8595bb160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8595bb160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8595bb4e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8595bb670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595bb800"/>
        <function-ref name="get" scoped="" ref="0x7fb8595bb990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595bbb20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595bbcb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8595bbe40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595ba020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8595ba1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8595ba340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8595ba4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb8595b47a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb8595b47a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595b4b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb8595b4cb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb8595b4e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595b3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595b31b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8595b3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb8595b76d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb8595b76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb8595b7a50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb8595b7be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595b7d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8595b5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8595b51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595b5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8595b54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8595b5660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8595b57f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb8595b2c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb8595b2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8595b1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb8595b5ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb8595b5ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595b5e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8595b4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8595b41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8595b4340"/>
        <function-ref name="fired" scoped="" ref="0x7fb8595b44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb8595b3610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8595b3610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8595b3990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8595b3b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595b3cb0"/>
        <function-ref name="get" scoped="" ref="0x7fb8595b3e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595b2020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595b21b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8595b2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595b24d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8595b2660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8595b27f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8595b2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb8595adcb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb8595adcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595ac0a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb8595ac230"/>
        <function-ref name="captured" scoped="" ref="0x7fb8595ac3c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595ac550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595ac6e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8595ac870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb8595afb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb8595afb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb8595ae020"/>
        <function-ref name="getControl" scoped="" ref="0x7fb8595ae1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595ae340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8595ae4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8595ae660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595ae7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8595ae980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8595aeb10"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8595aeca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb8595aa2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb8595aa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8595aa670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb8595ad020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb8595ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595ad3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8595ad530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8595ad6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8595ad850"/>
        <function-ref name="fired" scoped="" ref="0x7fb8595ad9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb8595acb40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8595acb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8595ab020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8595ab1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595ab340"/>
        <function-ref name="get" scoped="" ref="0x7fb8595ab4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595ab660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595ab7f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8595ab980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595abb10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8595abca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8595abe30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8595aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb8595a42f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb8595a42f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595a4670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb8595a4800"/>
        <function-ref name="captured" scoped="" ref="0x7fb8595a4990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595a4b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595a4cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb8595a4e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb8595a7220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb8595a7220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb8595a75a0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb8595a7730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595a78c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8595a7a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8595a7be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595a7d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8595a6020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8595a61b0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8595a6340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb8595a27a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb8595a27a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8595a2b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb8595a6610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb8595a6610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8595a6990"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8595a6b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8595a6cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8595a6e40"/>
        <function-ref name="fired" scoped="" ref="0x7fb8595a4020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb8595a3160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8595a3160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8595a34e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8595a3670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8595a3800"/>
        <function-ref name="get" scoped="" ref="0x7fb8595a3990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8595a3b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8595a3cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8595a3e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8595a2020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8595a21b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8595a2340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8595a24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb85959d7a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb85959d7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85959db20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb85959dcb0"/>
        <function-ref name="captured" scoped="" ref="0x7fb85959de40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb85959c020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb85959c1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb85959c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7fb85959f6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7fb85959f6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb85959fa50"/>
        <function-ref name="getControl" scoped="" ref="0x7fb85959fbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb85959fd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb85959e020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb85959e1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb85959e340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb85959e4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb85959e660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb85959e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7fb85959bc50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7fb85959bc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb85959a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fb85959eac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7fb85959eac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb85959ee40"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb85959d020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb85959d1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb85959d340"/>
        <function-ref name="fired" scoped="" ref="0x7fb85959d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fb85959c610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb85959c610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85959c990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb85959cb20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb85959ccb0"/>
        <function-ref name="get" scoped="" ref="0x7fb85959ce40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb85959b020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb85959b1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb85959b340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb85959b4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb85959b660"/>
        <function-ref name="setMode" scoped="" ref="0x7fb85959b7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb85959b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7fb859595bc0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7fb859595bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb859593020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7fb8595963f0" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7fb8595963f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb859596770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7fb859596b80" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7fb859596b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb859595020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7fb859595430" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7fb859595430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8595957b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fb8581fda80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb8581fda80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb8581fde00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb8581fb020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb8581fb1b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb8581fb340"/>
        <function-ref name="fired" scoped="" ref="0x7fb8581fb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb8581ff190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb8581ff190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8581ff510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8581ff6a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8581ff830"/>
        <function-ref name="get" scoped="" ref="0x7fb8581ff9c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8581ffb50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8581ffce0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8581ffe70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8581fe030"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8581fe1c0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8581fe350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8581fe4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb858202020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb858202020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb858200870"/>
        <function-ref name="fired" scoped="" ref="0x7fb858201840"/>
        <function-ref name="startAt" scoped="" ref="0x7fb858200220"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb858201d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb858200d30"/>
        <function-ref name="start" scoped="" ref="0x7fb858202e30"/>
        <function-ref name="stop" scoped="" ref="0x7fb858201380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb858203660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb858203660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb8582039e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb8581fe770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb8581fe770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb8581feaf0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb8581fec80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8581fee10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb8581fd020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8581fd1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8581fd340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8581fd4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb8581fd660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8581fd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb85950b8c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb85950b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb859510700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb85950f0d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb859510bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb85950f590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7fb8595098e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7fb8595098e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb859506780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb859505150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb859506c40"/>
        <function-ref name="overflow" scoped="" ref="0x7fb859505610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb8594f4c50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb8594f4c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8594f3020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb8594f31b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb8594f3340"/>
        <function-ref name="get" scoped="" ref="0x7fb8594f34d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb8594f3660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8594f37f0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb8594f3980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8594f3b10"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8594f3ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb8594f3e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb8594f2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb859503b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb859503b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8594f59b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8594f4360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8594f5e70"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8594f4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fb8594d10f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fb8594d10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8594cf020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8594cf9a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8594cf4e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8594cfe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb8594efcf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb8594efcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8594d3b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8594d2550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8594d2090"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8594d2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb85821b890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb85821b890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8582180d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb8582190d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb858219a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb858219590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb858218590"/>
        <function-ref name="start" scoped="" ref="0x7fb85821a6e0"/>
        <function-ref name="stop" scoped="" ref="0x7fb85821abf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fb8582140a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fb8582140a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb858210b30"/>
        <function-ref name="fired" scoped="" ref="0x7fb8582139f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb8582104e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb858210020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb85820f020"/>
        <function-ref name="start" scoped="" ref="0x7fb858213020"/>
        <function-ref name="stop" scoped="" ref="0x7fb858213530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb858218c00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb858218c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb858216a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8582154e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb858215020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8582159a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fb85945c9c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7fb85945c9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb85945cd40"/>
        <function-ref name="runTask" scoped="" ref="0x7fb85945b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fb859460850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb859460850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb85945c090"/>
        <function-ref name="fired" scoped="" ref="0x7fb85945e090"/>
        <function-ref name="startAt" scoped="" ref="0x7fb85945ea10"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb85945e550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb85945c550"/>
        <function-ref name="start" scoped="" ref="0x7fb85945f6a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb85945fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb8594652f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8594652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb859461870"/>
        <function-ref name="fired" scoped="" ref="0x7fb859464e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb859463c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb859463780"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8594601e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb859461cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb859463300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb859464020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb859461260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8594644f0"/>
        <function-ref name="stop" scoped="" ref="0x7fb8594649c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fb8593dd020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fb8593dd020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8593da630"/>
        <function-ref name="fired" scoped="" ref="0x7fb8593dca60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8593db920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb8593db4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8593d8020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb8593daab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8593db020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb8593ddc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb8593da020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8593dc110"/>
        <function-ref name="stop" scoped="" ref="0x7fb8593dc5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fb8593d8450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fb8593d8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fb8593d87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb8593e58e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8593e58e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8593df020"/>
        <function-ref name="fired" scoped="" ref="0x7fb8593e24c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8593e0300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb8593e2e00"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8593df960"/>
        <function-ref name="gett0" scoped="" ref="0x7fb8593df4c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8593e2960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb8593e3560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb8593e0930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8593e3a50"/>
        <function-ref name="stop" scoped="" ref="0x7fb8593e2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fb85801e100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7fb85801e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb85801e480"/>
        <function-ref name="runTask" scoped="" ref="0x7fb85801e610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fb8580253d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7fb8580253d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb858021870"/>
        <function-ref name="fired" scoped="" ref="0x7fb858024e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb858023c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb858023780"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8580201e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb858021cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb858023300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb858024020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb858021260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8580244f0"/>
        <function-ref name="stop" scoped="" ref="0x7fb8580249c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7fb85801fa40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7fb85801fa40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7fb85801fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7fb8580205d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7fb8580205d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7fb85801f660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7fb85801f7f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7fb858020c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7fb858020e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7fb85801f020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7fb85801f1b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7fb85801f340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7fb85801f4d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7fb858020950"/>
        <function-ref name="node_id" scoped="" ref="0x7fb858020ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb85802cdb0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb85802cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb858027470"/>
        <function-ref name="fired" scoped="" ref="0x7fb85802a9b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8580287c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb858028320"/>
        <function-ref name="getdt" scoped="" ref="0x7fb858027db0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb858027910"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb85802ae50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb85802ba80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb858028df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb85802a020"/>
        <function-ref name="stop" scoped="" ref="0x7fb85802a510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb8593d5020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb8593d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8593d5c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb8593cb300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb8593cb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8593ca150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8593caad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8593ca610"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8593c9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb8593bd260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8593bd260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8593b96e0"/>
        <function-ref name="fired" scoped="" ref="0x7fb8593bcca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8593baa70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb8593ba5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8593b8020"/>
        <function-ref name="gett0" scoped="" ref="0x7fb8593b9b60"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8593ba170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb8593bde50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb8593b90d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8593bc350"/>
        <function-ref name="stop" scoped="" ref="0x7fb8593bc820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb8593b7b00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerDormir"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8593b7b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8593b2110"/>
        <function-ref name="fired" scoped="" ref="0x7fb8593b45b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb8593b34a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb8593b3020"/>
        <function-ref name="getdt" scoped="" ref="0x7fb8593b2a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fb8593b2590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8593b4a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb8593b6750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb8593b3ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb8593b6c20"/>
        <function-ref name="stop" scoped="" ref="0x7fb8593b4130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb8593a3690" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb8593a3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb8593a3a10"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb8593a3ba0"/>
        <function-ref name="start" scoped="" ref="0x7fb8593a3d30"/>
        <function-ref name="stop" scoped="" ref="0x7fb8593a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb8593992c0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb8593992c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb859399640"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb8593997d0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb859399960"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb859399af0"/>
        <function-ref name="setCca" scoped="" ref="0x7fb859399c80"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb859399e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fb8593891d0" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fb8593891d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fb859389650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb85939d760" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb85939d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85939dae0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb85939dc70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85939de00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85939c020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb85939c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb8593a27f0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb8593a27f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8593a2b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8593a2d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8593a1020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8593a11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8593a1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fb85939f880" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fb85939f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb85939fc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb85939c480" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb85939c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb85939c800"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb85939c990"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb85939cb20"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb85939ccb0"/>
        <function-ref name="getPower" scoped="" ref="0x7fb85939ce40"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb85939b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb859384130" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb859384130"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb8593844b0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb859384640"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb8593847d0"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb859384960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb8593a1b20" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb8593a1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb85939f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fb85939a020" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb85939a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb85939a3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fb85939a530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb85939a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb85937b430" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb85937b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb85937b7b0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb85937b940"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb85937bad0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb85937bc60"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb85937bdf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb85939e020" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb85939e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb85939e3a0"/>
        <function-ref name="source" scoped="" ref="0x7fb85939e530"/>
        <function-ref name="address" scoped="" ref="0x7fb85939e6c0"/>
        <function-ref name="destination" scoped="" ref="0x7fb85939e850"/>
        <function-ref name="setSource" scoped="" ref="0x7fb85939e9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb85939eb70"/>
        <function-ref name="type" scoped="" ref="0x7fb85939ed00"/>
        <function-ref name="setType" scoped="" ref="0x7fb85939d020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb85939d1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb85939d340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb85939d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb859390170" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb859390170"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb8593904f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb859376020" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb859376020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb8593763a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb859376530"/>
        <function-ref name="start" scoped="" ref="0x7fb8593766c0"/>
        <function-ref name="stop" scoped="" ref="0x7fb859376850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb8593629d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb8593629d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb859362d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb859361b70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb859361b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb859360020"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb8593601b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb859360340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb8593604d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb859360660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb859363020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb859363020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb8593633a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb859363530"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb8593636c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb859363850"/>
        <function-ref name="getPower" scoped="" ref="0x7fb8593639e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb859363b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fb85936ea70" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fb85936ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb85936edf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb859366020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8593661b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb859366340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8593664d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb859361080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb859361080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb859361400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb859361590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb859361720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb8593618b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fb85936f690" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fb85936f690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb85936fa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fb859362020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb859362020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb8593623a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fb859362530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb8593626c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb859375530" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb859375530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8593758b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb859375a40"/>
        <function-ref name="request" scoped="" ref="0x7fb859375bd0"/>
        <function-ref name="granted" scoped="" ref="0x7fb859375d60"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb859374020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fb859365940" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fb859365940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb859365cc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb859365e50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85936f020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb85936f1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb85936f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fb85936fd50" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb85936fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85936e100"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb85936e290"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85936e420"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85936e5b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb85936e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fb859366840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fb859366840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb859366bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb85935d390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb85935d390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb85935d710"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb85935d8a0"/>
        <function-ref name="start" scoped="" ref="0x7fb85935da30"/>
        <function-ref name="stop" scoped="" ref="0x7fb85935dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb85935b330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb85935b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb85935b6b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb85935b840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb85935b9d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb85935bb60"/>
        <function-ref name="setCca" scoped="" ref="0x7fb85935bcf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb85935be80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb85935de80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb85935de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb85935c220"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85935c3b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85935c540"/>
        <function-ref name="cancel" scoped="" ref="0x7fb85935c6d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb85935c860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb85935cb40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb85935cb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb85935b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb85935ae70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb85935ae70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb859357220"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb8593573b0"/>
        <function-ref name="start" scoped="" ref="0x7fb859357540"/>
        <function-ref name="stop" scoped="" ref="0x7fb8593576d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb8593567e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb8593567e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb859356b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb859356cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb859356e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb859355030"/>
        <function-ref name="setCca" scoped="" ref="0x7fb8593551c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb859355350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fb859348060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fb859348060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb8593483e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb859348570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb859348700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb859348890"/>
        <function-ref name="setCca" scoped="" ref="0x7fb859348a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb859348bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb85933f330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb85933f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb85933f6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb85933f840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb85933f9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb85933fb60"/>
        <function-ref name="getPower" scoped="" ref="0x7fb85933fcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb85933fe80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7fb8593412a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb8593412a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb859341620"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8593417b0"/>
        <function-ref name="modify" scoped="" ref="0x7fb859341940"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb859341ad0"/>
        <function-ref name="resend" scoped="" ref="0x7fb859341c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb859357990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb859357990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb859357d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb859356020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8593561b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb859356340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8593564d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fb85933e420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb85933e420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb85933e7a0"/>
        <function-ref name="rand32" scoped="" ref="0x7fb85933e930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fb859349760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fb859349760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb859349ae0"/>
        <function-ref name="stop" scoped="" ref="0x7fb859349c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb859337920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb859337920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb859337ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb859337e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb85933c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7fb85934cb50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fb85934cb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fb859353020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fb8593531b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fb859353340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fb8593534d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fb859353660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fb8593537f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fb859353980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fb859353b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb85933ebf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb85933ebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb859340020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb8593401b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb859340340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb8593404d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb859340660"/>
        <function-ref name="get" scoped="" ref="0x7fb8593407f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb859340980"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb85933f020"/>
        <function-ref name="set" scoped="" ref="0x7fb859340b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fb859340ca0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb859340e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7fb859355640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb859355640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8593559c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb859355b50"/>
        <function-ref name="request" scoped="" ref="0x7fb859355ce0"/>
        <function-ref name="granted" scoped="" ref="0x7fb859355e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb859354030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7fb85933b110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7fb85933b110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb85933b590"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb85933b720"/>
        <function-ref name="isState" scoped="" ref="0x7fb85933b8b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb85933ba40"/>
        <function-ref name="requestState" scoped="" ref="0x7fb85933bbd0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb85933bd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7fb85932db70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7fb85932db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb85932c020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb85932c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7fb85932eba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7fb85932eba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb85932d020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb85932d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7fb85932fc20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7fb85932fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb85932e020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb85932e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fb8592d5dc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb8592d5dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb8592e1180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb8592e1310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb8592e14a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb8592e1630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb8592e17c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb8592e1950"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb8592e1ae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb8592e1c70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb8592e1e00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb8592e0020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb8592e01b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb8592e0340"/>
        <function-ref name="sync" scoped="" ref="0x7fb8592e04d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb8592e0760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb8592e08f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fb8592d20c0" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fb8592d20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592d2cb0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb8592cf170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fb8592e0bf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fb8592e0bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fb8592d4020"/>
        <function-ref name="rfOff" scoped="" ref="0x7fb8592d41b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7fb8592d4340"/>
        <function-ref name="startVReg" scoped="" ref="0x7fb8592d44d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fb8592d4660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fb8592d47f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fb8592d4980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fb8592d4b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb8592e5950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb8592e5950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8592e5cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb8592e5e60"/>
        <function-ref name="request" scoped="" ref="0x7fb8592e2020"/>
        <function-ref name="granted" scoped="" ref="0x7fb8592e21b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb8592e2340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7fb8592cb970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb8592cb970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb8592cbcf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb8592cbe80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb8592ca030"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb8592ca1c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb8592ca350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb8592ca4e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb8592ca670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb8592ca800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb8592ca990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb8592cab20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb8592cacb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb8592cae40"/>
        <function-ref name="sync" scoped="" ref="0x7fb8592c9020"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb8592c92b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb8592c9440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7fb8592aa1e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb8592aa1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592aa560"/>
        <function-ref name="write" scoped="" ref="0x7fb8592aa6f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7fb8592c5020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb8592c5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fb8592c53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7fb8592c5a10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7fb8592c5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8592c12a0"/>
        <function-ref name="fired" scoped="" ref="0x7fb8592c22a0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb8592c2c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8592c2760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb8592c1760"/>
        <function-ref name="start" scoped="" ref="0x7fb8592c3890"/>
        <function-ref name="stop" scoped="" ref="0x7fb8592c3da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7fb8592ad020" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb8592ad020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592ad3a0"/>
        <function-ref name="write" scoped="" ref="0x7fb8592ad530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7fb8592bfe70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fb8592bfe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8592be220"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8592be3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8592be540"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8592be6d0"/>
        <function-ref name="get" scoped="" ref="0x7fb8592be860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8592be9f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8592beb80"/>
        <function-ref name="clr" scoped="" ref="0x7fb8592bed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7fb8592c8b40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7fb8592c8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592c7750"/>
        <function-ref name="readDone" scoped="" ref="0x7fb8592c7bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7fb859298ca0" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7fb859298ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb8592970a0"/>
        <function-ref name="runTask" scoped="" ref="0x7fb859297230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7fb8592aaa80" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb8592aaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592aae00"/>
        <function-ref name="write" scoped="" ref="0x7fb8592a9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fb8592a93c0" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb8592a93c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592a9740"/>
        <function-ref name="write" scoped="" ref="0x7fb8592a98d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7fb8592abcd0" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb8592abcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592b20a0"/>
        <function-ref name="write" scoped="" ref="0x7fb8592b2230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fb8592b3390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb8592b3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fb8592b3710"/>
        <function-ref name="changed" scoped="" ref="0x7fb8592b38a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fb8592b3a30"/>
        <function-ref name="setAddress" scoped="" ref="0x7fb8592b3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fb8592c1c50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb8592c1c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8592bf020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8592bf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8592bf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8592bf4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb8592bf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8592bf7f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8592bf980"/>
        <function-ref name="clr" scoped="" ref="0x7fb8592bfb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7fb8592a6450" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb8592a6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8592a69d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7fb8592bd0f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fb8592bd0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8592bd470"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8592bd600"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8592bd790"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8592bd920"/>
        <function-ref name="get" scoped="" ref="0x7fb8592bdab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8592bdc40"/>
        <function-ref name="set" scoped="" ref="0x7fb8592bddd0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8592bc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb8592cc510" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb8592cc510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb8592cc890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fb8592ad8f0" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb8592ad8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592adc70"/>
        <function-ref name="write" scoped="" ref="0x7fb8592ade00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7fb8592a6d70" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb8592a6d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8592a5180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb8592a5520" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb8592a5520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8592a58a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb8592a5a30"/>
        <function-ref name="request" scoped="" ref="0x7fb8592a5bc0"/>
        <function-ref name="granted" scoped="" ref="0x7fb8592a5d50"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb8592a3020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7fb8592a2180" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7fb8592a2180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8592a2500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb8592a2690"/>
        <function-ref name="request" scoped="" ref="0x7fb8592a2820"/>
        <function-ref name="granted" scoped="" ref="0x7fb8592a29b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb8592a2b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7fb8592c9740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7fb8592c9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7fb8592c9ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7fb8592c9c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7fb8592c9de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7fb8592c8020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7fb8592c81b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7fb8592c8340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7fb8592c84d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7fb8592c8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7fb8592b25d0" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb8592b25d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592b2950"/>
        <function-ref name="write" scoped="" ref="0x7fb8592b2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7fb8592ab420" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb8592ab420"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592ab7a0"/>
        <function-ref name="write" scoped="" ref="0x7fb8592ab930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7fb8592a4570" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb8592a4570"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8592a48f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb8592a2e00" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb8592a2e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb8592a11c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb8592a1350"/>
        <function-ref name="led1On" scoped="" ref="0x7fb8592a14e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb8592a1670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb8592a1800"/>
        <function-ref name="get" scoped="" ref="0x7fb8592a1990"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb8592a1b20"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb8592a01b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8592a1cb0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb8592a1e40"/>
        <function-ref name="led2On" scoped="" ref="0x7fb8592a0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7fb859299db0" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7fb859299db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb859298180"/>
        <function-ref name="runTask" scoped="" ref="0x7fb859298310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb8592ccb80" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb8592ccb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8592cb020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb8592cb1b0"/>
        <function-ref name="request" scoped="" ref="0x7fb8592cb340"/>
        <function-ref name="granted" scoped="" ref="0x7fb8592cb4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb8592cb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7fb8592aee20" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb8592aee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592b71c0"/>
        <function-ref name="write" scoped="" ref="0x7fb8592b7350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7fb8592ae4a0" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb8592ae4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8592ae920"/>
        <function-ref name="write" scoped="" ref="0x7fb8592aeab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7fb8592b8c00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fb8592b8c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8592bb020"/>
        <function-ref name="disable" scoped="" ref="0x7fb8592bb1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb8592bb340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb8592bb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7fb8592a33d0" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7fb8592a33d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8592a3750"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb8592a38e0"/>
        <function-ref name="request" scoped="" ref="0x7fb8592a3a70"/>
        <function-ref name="granted" scoped="" ref="0x7fb8592a3c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb8592a3d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7fb8592a4c80" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb8592a4c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8592a60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb8592217e0" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb8592217e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb859221b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fb85921e220" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb85921e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb85921bb30"/>
        <function-ref name="fired" scoped="" ref="0x7fb85921da60"/>
        <function-ref name="startAt" scoped="" ref="0x7fb85921b4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb85921b020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb85921a020"/>
        <function-ref name="start" scoped="" ref="0x7fb85921d090"/>
        <function-ref name="stop" scoped="" ref="0x7fb85921d5a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb859218260" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb859218260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb8592185e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7fb859218af0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7fb859218af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb8591dd390"/>
        <function-ref name="fired" scoped="" ref="0x7fb8591de360"/>
        <function-ref name="startAt" scoped="" ref="0x7fb8591dece0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb8591de820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb8591dd850"/>
        <function-ref name="start" scoped="" ref="0x7fb8591e0970"/>
        <function-ref name="stop" scoped="" ref="0x7fb8591e0e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb857fc7180" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb857fc7180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb857fc5b30"/>
        <function-ref name="fired" scoped="" ref="0x7fb857fc69f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb857fc54e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb857fc5020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb857fc4020"/>
        <function-ref name="start" scoped="" ref="0x7fb857fc6020"/>
        <function-ref name="stop" scoped="" ref="0x7fb857fc6530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb857fc8900" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb857fc8900"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb857fc8c80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb857fc02a0" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb857fc02a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb857fbdb30"/>
        <function-ref name="fired" scoped="" ref="0x7fb857fbfaa0"/>
        <function-ref name="startAt" scoped="" ref="0x7fb857fbd4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb857fbd020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb857fbc020"/>
        <function-ref name="start" scoped="" ref="0x7fb857fbf0d0"/>
        <function-ref name="stop" scoped="" ref="0x7fb857fbf5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb857fc1a10" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb857fc1a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb857fc1d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7fb857fa7c10" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb857fa7c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb857fa6020"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb857fa61b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb857fa6340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb857fa64d0"/>
        <function-ref name="fired" scoped="" ref="0x7fb857fa6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7fb857faa1b0" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb857faa1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb857faa530"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb857faa6c0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb857faa850"/>
        <function-ref name="get" scoped="" ref="0x7fb857faa9e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb857faab70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb857faad00"/>
        <function-ref name="getMode" scoped="" ref="0x7fb857fa8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb857fa81b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb857fa8340"/>
        <function-ref name="setMode" scoped="" ref="0x7fb857fa84d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb857fa8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7fb857fa88f0" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb857fa88f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb857fa8c70"/>
        <function-ref name="getControl" scoped="" ref="0x7fb857fa8e00"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb857fa7020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb857fa71b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb857fa7340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb857fa74d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb857fa7660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb857fa77f0"/>
        <function-ref name="setControl" scoped="" ref="0x7fb857fa7980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7fb857f9aa80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7fb857f9aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb857f9ae00"/>
        <function-ref name="setEvent" scoped="" ref="0x7fb857f99020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7fb857f991b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7fb857f99340"/>
        <function-ref name="fired" scoped="" ref="0x7fb857f994d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb857fa0020" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb857fa0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb857fa03a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb857fa0530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb857fa06c0"/>
        <function-ref name="get" scoped="" ref="0x7fb857fa0850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb857fa09e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb857fa0b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fb857fa0d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb857f9e020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb857f9e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb857f9e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb857f9e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb857fa4da0" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb857fa4da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb857fa1670"/>
        <function-ref name="fired" scoped="" ref="0x7fb857fa2610"/>
        <function-ref name="startAt" scoped="" ref="0x7fb857fa1020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb857fa2ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb857fa1b30"/>
        <function-ref name="start" scoped="" ref="0x7fb857fa3bf0"/>
        <function-ref name="stop" scoped="" ref="0x7fb857fa2150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb857fa4510" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb857fa4510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb857fa4890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb857f9e760" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb857f9e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb857f9eae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb857f9ec70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb857f9ee00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb857f9a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb857f9a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb857f9a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb857f9a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb857f9a660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb857f9a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb859202080" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb859202080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb859201020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8592019a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8592014e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb859201e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7fb8591f90f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7fb8591f90f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8591f8020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8591f89a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8591f84e0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8591f8e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb8591fdcd0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb8591fdcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8591fbb60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8591fa550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8591fa090"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8591faa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fb857fba5f0" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7fb857fba5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb857fb8e50"/>
        <function-ref name="fired" scoped="" ref="0x7fb857fb9e00"/>
        <function-ref name="startAt" scoped="" ref="0x7fb857fb8800"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb857fb8340"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb857fb6340"/>
        <function-ref name="start" scoped="" ref="0x7fb857fb9430"/>
        <function-ref name="stop" scoped="" ref="0x7fb857fb9940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7fb857fb4d20" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7fb857fb4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb857fb1670"/>
        <function-ref name="fired" scoped="" ref="0x7fb857fb2550"/>
        <function-ref name="startAt" scoped="" ref="0x7fb857fb1020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb857fb2a10"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb857fb1b30"/>
        <function-ref name="start" scoped="" ref="0x7fb857fb3b60"/>
        <function-ref name="stop" scoped="" ref="0x7fb857fb2090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb857fb69b0" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb857fb69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb857fb57e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb857fb41b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb857fb5ca0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb857fb4670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7fb8591d7090" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fb8591d7090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591d7410"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591d75a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591d7730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591d78c0"/>
        <function-ref name="get" scoped="" ref="0x7fb8591d7a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591d7be0"/>
        <function-ref name="set" scoped="" ref="0x7fb8591d7d70"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7fb8591d6390" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fb8591d6390"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591d6710"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591d68a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591d6a30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591d6bc0"/>
        <function-ref name="get" scoped="" ref="0x7fb8591d6d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591d5020"/>
        <function-ref name="set" scoped="" ref="0x7fb8591d51b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591d5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7fb8591d56a0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7fb8591d56a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591d5a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591d5bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591d5d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591d4020"/>
        <function-ref name="get" scoped="" ref="0x7fb8591d41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591d4340"/>
        <function-ref name="set" scoped="" ref="0x7fb8591d44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591d4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7fb8591d9e60" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb8591d9e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591d8210"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591d83a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591d8530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591d86c0"/>
        <function-ref name="get" scoped="" ref="0x7fb8591d8850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591d89e0"/>
        <function-ref name="set" scoped="" ref="0x7fb8591d8b70"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591d8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7fb8591d3ce0" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7fb8591d3ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591d20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591d2230"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591d23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591d2550"/>
        <function-ref name="get" scoped="" ref="0x7fb8591d26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591d2870"/>
        <function-ref name="set" scoped="" ref="0x7fb8591d2a00"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591d2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7fb85921fb10" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fb85921fb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591d9020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591d91b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591d9340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591d94d0"/>
        <function-ref name="get" scoped="" ref="0x7fb8591d9660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591d97f0"/>
        <function-ref name="set" scoped="" ref="0x7fb8591d9980"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591d9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7fb8591d49b0" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fb8591d49b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591d4d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591d3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591d31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591d3340"/>
        <function-ref name="get" scoped="" ref="0x7fb8591d34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591d3660"/>
        <function-ref name="set" scoped="" ref="0x7fb8591d37f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591d3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb8591ce2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591ce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591ce670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591ce800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8591ce990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8591cc660"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591cecb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591cee40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8591cd020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8591cd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591cd340"/>
        <function-ref name="get" scoped="" ref="0x7fb8591cd4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8591cd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8591cd7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8591cd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8591cdc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8591cdda0"/>
        <function-ref name="set" scoped="" ref="0x7fb8591cc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8591cc1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8591cc340"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591ceb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8591cc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb8591d0020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591d03a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591d0530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591d06c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591d0850"/>
        <function-ref name="get" scoped="" ref="0x7fb8591d09e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591d0b70"/>
        <function-ref name="set" scoped="" ref="0x7fb8591d0d00"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591ce020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb8591c97a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591c97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591c9b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591c9cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8591c9e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8591c7a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591c81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591c8340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8591c84d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8591c8660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591c87f0"/>
        <function-ref name="get" scoped="" ref="0x7fb8591c8980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8591c8b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8591c8ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8591c8e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8591c7120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8591c72b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8591c7440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8591c75d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8591c7760"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591c8020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8591c78f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb8591ca630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591ca630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591ca9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591cab40"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591cacd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591cae60"/>
        <function-ref name="get" scoped="" ref="0x7fb8591c9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591c91b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8591c9340"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591c94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb8591c4c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591c4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591c3020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591c31b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8591c3340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8591c1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591c3660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591c37f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8591c3980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8591c3b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591c3ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb8591c3e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8591c2020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8591c21b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8591c2340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8591c25d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8591c2760"/>
        <function-ref name="set" scoped="" ref="0x7fb8591c28f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8591c2a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8591c2c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591c34d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8591c2da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb8591c5b00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591c5b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591c5e80"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591c4030"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591c41c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591c4350"/>
        <function-ref name="get" scoped="" ref="0x7fb8591c44e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591c4670"/>
        <function-ref name="set" scoped="" ref="0x7fb8591c4800"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591c4990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb8591be2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591be2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591be670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591be800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8591be990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8591bc660"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591becb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591bee40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8591bd020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8591bd1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591bd340"/>
        <function-ref name="get" scoped="" ref="0x7fb8591bd4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8591bd660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8591bd7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8591bd980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8591bdc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8591bdda0"/>
        <function-ref name="set" scoped="" ref="0x7fb8591bc020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8591bc1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8591bc340"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591beb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8591bc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb8591bf020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591bf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591bf3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591bf530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591bf6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591bf850"/>
        <function-ref name="get" scoped="" ref="0x7fb8591bf9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591bfb70"/>
        <function-ref name="set" scoped="" ref="0x7fb8591bfd00"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591be020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb8591b97a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591b97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591b9b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591b9cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8591b9e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8591b6a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591b71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591b7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8591b74d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8591b7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591b77f0"/>
        <function-ref name="get" scoped="" ref="0x7fb8591b7980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8591b7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8591b7ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8591b7e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8591b6120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8591b62b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8591b6440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8591b65d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8591b6760"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591b7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8591b68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb8591ba630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591ba630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591ba9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591bab40"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591bacd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591bae60"/>
        <function-ref name="get" scoped="" ref="0x7fb8591b9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591b91b0"/>
        <function-ref name="set" scoped="" ref="0x7fb8591b9340"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb8591b3c60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591b3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591b2020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591b21b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8591b2340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8591b0020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591b2660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591b27f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8591b2980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8591b2b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591b2ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb8591b2e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8591b1020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8591b11b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8591b1340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8591b15d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8591b1760"/>
        <function-ref name="set" scoped="" ref="0x7fb8591b18f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8591b1a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8591b1c10"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591b24d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8591b1da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb8591b4af0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591b4af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591b4e70"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591b3030"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591b31c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591b3350"/>
        <function-ref name="get" scoped="" ref="0x7fb8591b34e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591b3670"/>
        <function-ref name="set" scoped="" ref="0x7fb8591b3800"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591b3990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb8591ad2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb8591ad2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591ad670"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591ad800"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb8591ad990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb8591ab660"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591adcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591ade40"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb8591ac020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8591ac1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591ac340"/>
        <function-ref name="get" scoped="" ref="0x7fb8591ac4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb8591ac660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb8591ac7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb8591ac980"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8591acc10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb8591acda0"/>
        <function-ref name="set" scoped="" ref="0x7fb8591ab020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb8591ab1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8591ab340"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591adb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb8591ab4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb8591ae020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb8591ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8591ae3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb8591ae530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8591ae6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591ae850"/>
        <function-ref name="get" scoped="" ref="0x7fb8591ae9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb8591aeb70"/>
        <function-ref name="set" scoped="" ref="0x7fb8591aed00"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7fb859191700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fb859191700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fb859191a80"/>
        <function-ref name="disable" scoped="" ref="0x7fb859191c10"/>
        <function-ref name="captured" scoped="" ref="0x7fb859191da0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fb859194020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7fb859194400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7fb859194400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb859194780"/>
        <function-ref name="disable" scoped="" ref="0x7fb859194910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb859194aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb859194c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7fb859193060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb859193060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb8591933e0"/>
        <function-ref name="disable" scoped="" ref="0x7fb859193570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb859193700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb859193890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7fb859175a80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7fb859175a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7fb859175e00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7fb859174020"/>
        <function-ref name="captured" scoped="" ref="0x7fb8591741b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb859174340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8591744d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7fb859174660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7fb85918dc20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7fb85918dc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fb859176020"/>
        <function-ref name="disable" scoped="" ref="0x7fb8591761b0"/>
        <function-ref name="captured" scoped="" ref="0x7fb859176340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fb8591764d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7fb859176760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7fb859176760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7fb859176ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7fb859176c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb859176e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7fb859175020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7fb8591751b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb859175340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7fb8591754d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7fb859175660"/>
        <function-ref name="setControl" scoped="" ref="0x7fb8591757f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7fb859174930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb859174930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb859174cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb859174e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb859173020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb859172c10"/>
        <function-ref name="toggle" scoped="" ref="0x7fb859173340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb8591734d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb859173660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb8591737f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb859173980"/>
        <function-ref name="get" scoped="" ref="0x7fb859173b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb859173ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb859173e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb859172020"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb8591722b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb859172440"/>
        <function-ref name="set" scoped="" ref="0x7fb8591725d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb859172760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb8591728f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb8591731b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb859172a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb8591613f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb8591613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859161770"/>
        <function-ref name="fired" scoped="" ref="0x7fb859161900"/>
        <function-ref name="disable" scoped="" ref="0x7fb859161a90"/>
        <function-ref name="edge" scoped="" ref="0x7fb859161c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb859161db0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859160020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8591601b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859160340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb8591553f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb8591553f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859155770"/>
        <function-ref name="fired" scoped="" ref="0x7fb859155900"/>
        <function-ref name="disable" scoped="" ref="0x7fb859155a90"/>
        <function-ref name="edge" scoped="" ref="0x7fb859155c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb859155db0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859154020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8591541b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859154340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb85915ed50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb85915ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85915d100"/>
        <function-ref name="fired" scoped="" ref="0x7fb85915d290"/>
        <function-ref name="disable" scoped="" ref="0x7fb85915d420"/>
        <function-ref name="edge" scoped="" ref="0x7fb85915d5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85915d740"/>
        <function-ref name="enable" scoped="" ref="0x7fb85915d8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85915da60"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85915dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb85915b3f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb85915b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85915b770"/>
        <function-ref name="fired" scoped="" ref="0x7fb85915b900"/>
        <function-ref name="disable" scoped="" ref="0x7fb85915ba90"/>
        <function-ref name="edge" scoped="" ref="0x7fb85915bc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85915bdb0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85915a020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85915a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85915a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb85916abc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb85916abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859163020"/>
        <function-ref name="fired" scoped="" ref="0x7fb8591631b0"/>
        <function-ref name="disable" scoped="" ref="0x7fb859163340"/>
        <function-ref name="edge" scoped="" ref="0x7fb8591634d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb859163660"/>
        <function-ref name="enable" scoped="" ref="0x7fb8591637f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb859163980"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859163b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb859158d50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb859158d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859157210"/>
        <function-ref name="fired" scoped="" ref="0x7fb8591573a0"/>
        <function-ref name="disable" scoped="" ref="0x7fb859157530"/>
        <function-ref name="edge" scoped="" ref="0x7fb8591576c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb859157850"/>
        <function-ref name="enable" scoped="" ref="0x7fb8591579e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb859157b70"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859157d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb859160710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb859160710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859160a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb859160c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb859160db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb85915f020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85915f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85915f340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85915f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85915f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb859154710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb859154710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859154a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb859154c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb859154db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859153020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb8591531b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859153340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8591534d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859153660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb859165620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb859165620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8591659a0"/>
        <function-ref name="fired" scoped="" ref="0x7fb859165b30"/>
        <function-ref name="disable" scoped="" ref="0x7fb859165cc0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859165e50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85916b020"/>
        <function-ref name="enable" scoped="" ref="0x7fb85916b1b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85916b340"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85916b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb85915a710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb85915a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85915aa90"/>
        <function-ref name="fired" scoped="" ref="0x7fb85915ac20"/>
        <function-ref name="disable" scoped="" ref="0x7fb85915adb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859159020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb8591591b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859159340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8591594d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859159660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb859162020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb859162020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8591623a0"/>
        <function-ref name="fired" scoped="" ref="0x7fb859162530"/>
        <function-ref name="disable" scoped="" ref="0x7fb8591626c0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859162850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb8591629e0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859162b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb859162d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859161020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb859156100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb859156100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859156480"/>
        <function-ref name="fired" scoped="" ref="0x7fb859156610"/>
        <function-ref name="disable" scoped="" ref="0x7fb8591567a0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859156930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb859156ac0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859156c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb859156de0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859155020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb85915fa30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb85915fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85915fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fb85915e020"/>
        <function-ref name="disable" scoped="" ref="0x7fb85915e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb85915e340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85915e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85915e660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85915e7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85915e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb85915c020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb85915c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85915c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fb85915c530"/>
        <function-ref name="disable" scoped="" ref="0x7fb85915c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fb85915c850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85915c9e0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85915cb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85915cd00"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85915b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb85916b8a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb85916b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85916bc20"/>
        <function-ref name="fired" scoped="" ref="0x7fb85916bdb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb85916a020"/>
        <function-ref name="edge" scoped="" ref="0x7fb85916a1b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85916a340"/>
        <function-ref name="enable" scoped="" ref="0x7fb85916a4d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85916a660"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85916a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb859159a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb859159a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859159db0"/>
        <function-ref name="fired" scoped="" ref="0x7fb859158020"/>
        <function-ref name="disable" scoped="" ref="0x7fb8591581b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859158340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb8591584d0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859158660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8591587f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859158980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7fb85914b3f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7fb85914b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85914b770"/>
        <function-ref name="fired" scoped="" ref="0x7fb85914b900"/>
        <function-ref name="disable" scoped="" ref="0x7fb85914ba90"/>
        <function-ref name="edge" scoped="" ref="0x7fb85914bc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85914bdb0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85914a020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85914a1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85914a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7fb85913e3f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7fb85913e3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85913e770"/>
        <function-ref name="fired" scoped="" ref="0x7fb85913e900"/>
        <function-ref name="disable" scoped="" ref="0x7fb85913ea90"/>
        <function-ref name="edge" scoped="" ref="0x7fb85913ec20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85913edb0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85913d020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85913d1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85913d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7fb859147d50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7fb859147d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859146100"/>
        <function-ref name="fired" scoped="" ref="0x7fb859146290"/>
        <function-ref name="disable" scoped="" ref="0x7fb859146420"/>
        <function-ref name="edge" scoped="" ref="0x7fb8591465b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb859146740"/>
        <function-ref name="enable" scoped="" ref="0x7fb8591468d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb859146a60"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859146bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7fb8591443f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7fb8591443f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859144770"/>
        <function-ref name="fired" scoped="" ref="0x7fb859144900"/>
        <function-ref name="disable" scoped="" ref="0x7fb859144a90"/>
        <function-ref name="edge" scoped="" ref="0x7fb859144c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb859144db0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859143020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8591431b0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859143340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7fb85914ed50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7fb85914ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85914d100"/>
        <function-ref name="fired" scoped="" ref="0x7fb85914d290"/>
        <function-ref name="disable" scoped="" ref="0x7fb85914d420"/>
        <function-ref name="edge" scoped="" ref="0x7fb85914d5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85914d740"/>
        <function-ref name="enable" scoped="" ref="0x7fb85914d8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85914da60"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85914dbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7fb859141d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7fb859141d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859140210"/>
        <function-ref name="fired" scoped="" ref="0x7fb8591403a0"/>
        <function-ref name="disable" scoped="" ref="0x7fb859140530"/>
        <function-ref name="edge" scoped="" ref="0x7fb8591406c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb859140850"/>
        <function-ref name="enable" scoped="" ref="0x7fb8591409e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb859140b70"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859140d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7fb85914a710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7fb85914a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85914aa90"/>
        <function-ref name="fired" scoped="" ref="0x7fb85914ac20"/>
        <function-ref name="disable" scoped="" ref="0x7fb85914adb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859149020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb8591491b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859149340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8591494d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859149660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7fb85913d710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7fb85913d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85913da90"/>
        <function-ref name="fired" scoped="" ref="0x7fb85913dc20"/>
        <function-ref name="disable" scoped="" ref="0x7fb85913ddb0"/>
        <function-ref name="edge" scoped="" ref="0x7fb85913c020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85913c1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85913c340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85913c4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85913c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7fb8591527a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7fb8591527a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859152b20"/>
        <function-ref name="fired" scoped="" ref="0x7fb859152cb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb859152e40"/>
        <function-ref name="edge" scoped="" ref="0x7fb85914f020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85914f1b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85914f340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85914f4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85914f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7fb859143710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7fb859143710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859143a90"/>
        <function-ref name="fired" scoped="" ref="0x7fb859143c20"/>
        <function-ref name="disable" scoped="" ref="0x7fb859143db0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859142020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb8591421b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859142340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8591424d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859142660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7fb85914c020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7fb85914c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85914c3a0"/>
        <function-ref name="fired" scoped="" ref="0x7fb85914c530"/>
        <function-ref name="disable" scoped="" ref="0x7fb85914c6c0"/>
        <function-ref name="edge" scoped="" ref="0x7fb85914c850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85914c9e0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85914cb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85914cd00"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85914b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7fb85913f100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7fb85913f100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85913f480"/>
        <function-ref name="fired" scoped="" ref="0x7fb85913f610"/>
        <function-ref name="disable" scoped="" ref="0x7fb85913f7a0"/>
        <function-ref name="edge" scoped="" ref="0x7fb85913f930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85913fac0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85913fc50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85913fde0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85913e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7fb859149a30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7fb859149a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859149db0"/>
        <function-ref name="fired" scoped="" ref="0x7fb859147020"/>
        <function-ref name="disable" scoped="" ref="0x7fb8591471b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859147340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb8591474d0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859147660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8591477f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859147980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7fb859145020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7fb859145020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8591453a0"/>
        <function-ref name="fired" scoped="" ref="0x7fb859145530"/>
        <function-ref name="disable" scoped="" ref="0x7fb8591456c0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859145850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb8591459e0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859145b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb859145d00"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859144020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7fb85914fa30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7fb85914fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85914fdb0"/>
        <function-ref name="fired" scoped="" ref="0x7fb85914e020"/>
        <function-ref name="disable" scoped="" ref="0x7fb85914e1b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb85914e340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb85914e4d0"/>
        <function-ref name="enable" scoped="" ref="0x7fb85914e660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb85914e7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb85914e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7fb859142a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7fb859142a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859142db0"/>
        <function-ref name="fired" scoped="" ref="0x7fb859141020"/>
        <function-ref name="disable" scoped="" ref="0x7fb8591411b0"/>
        <function-ref name="edge" scoped="" ref="0x7fb859141340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb8591414d0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859141660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8591417f0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859141980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fb8590322f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fb8590322f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859032670"/>
        <function-ref name="fired" scoped="" ref="0x7fb859032800"/>
        <function-ref name="disable" scoped="" ref="0x7fb859032990"/>
        <function-ref name="edge" scoped="" ref="0x7fb859032b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb859032cb0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859032e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb859025020"/>
        <function-ref name="getValue" scoped="" ref="0x7fb8590251b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fb859033680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fb859033680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb859033a00"/>
        <function-ref name="disable" scoped="" ref="0x7fb859033b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb859033d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb859032020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7fb8590237a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7fb8590237a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb859023b20"/>
        <function-ref name="fired" scoped="" ref="0x7fb859023cb0"/>
        <function-ref name="disable" scoped="" ref="0x7fb859023e40"/>
        <function-ref name="edge" scoped="" ref="0x7fb859022020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7fb8590221b0"/>
        <function-ref name="enable" scoped="" ref="0x7fb859022340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7fb8590224d0"/>
        <function-ref name="getValue" scoped="" ref="0x7fb859022660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7fb859024b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7fb859024b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb859023020"/>
        <function-ref name="disable" scoped="" ref="0x7fb8590231b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb859023340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb8590234d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb858bc2e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb858bc2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc1410"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc15a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb858bcc160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb858bcc160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bcc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb858bc6e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb858bc6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc5210"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb858bc0880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858bc0880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc0c00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc0d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb858bb80a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb858bb80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb8420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb85b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb858bbf0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb858bbf0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bbf420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bbf5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb858baa500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb858baa500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858baa880"/>
        <function-ref name="write" scoped="" ref="0x7fb858baaa10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb858bac500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb858bac500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bac880"/>
        <function-ref name="write" scoped="" ref="0x7fb858baca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb858bcb490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb858bcb490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bcb810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb858bb4880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb858bb4880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb4c00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb4d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb858bb0500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb858bb0500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb0880"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb0a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb858bc5e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb858bc5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc3210"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb858bc3e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb858bc3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc2210"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb858bba880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb858bba880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bbac00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bbad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb858bbb0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb858bbb0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bbb420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bbb5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb858bbf880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb858bbf880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bbfc00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bbfd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb858bcea90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858bcea90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb858bcee10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb858bcd020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb858bcd1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb858bcae00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb858bcae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bc81c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb858bc8490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb858bc8490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bc8910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb858bb3c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb858bb3c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb20a0"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb2230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb858bc8be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb858bc8be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bc7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb858bb0ce0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb858bb0ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bac0a0"/>
        <function-ref name="write" scoped="" ref="0x7fb858bac230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb858bca160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb858bca160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bca4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb858bb40a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb858bb40a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb4420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb45b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb858bc3670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb858bc3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc39f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb858bc5670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb858bc5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc59f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb858bcdad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb858bcdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bcde50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb858bb50a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb858bb50a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb5420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb55b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb858bb8880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb858bb8880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb8c00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb858bb5880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb858bb5880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb5c00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb5d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb858babce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb858babce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858baa0a0"/>
        <function-ref name="write" scoped="" ref="0x7fb858baa230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb858bacce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb858bacce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bab0a0"/>
        <function-ref name="write" scoped="" ref="0x7fb858bab230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb858bbb880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb858bbb880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bbbc00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bbbd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb858bb70a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb858bb70a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb7420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb75b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb858bb1ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb858bb1ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb00a0"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb0230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb858bbe880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb858bbe880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bbec00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bbed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb858baace0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb858baace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858ba90a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858ba9230"/>
        <function-ref name="write" scoped="" ref="0x7fb858ba93c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858ba9550"/>
        <function-ref name="readDone" scoped="" ref="0x7fb858ba96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb858bcd480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb858bcd480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bcd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb858bc6670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb858bc6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc69f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb858bc2670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb858bc2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc29f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb858bb90a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb858bb90a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb9420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb95b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb858bbe0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb858bbe0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bbe420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bbe5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb858bb9880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb858bb9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb9c00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb9d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb858bc1870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb858bc1870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc1bf0"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc1d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb858bcc7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb858bcc7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bccb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb858bc00a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb858bc00a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bc0420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bc05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858bcfe20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858bcfe20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858bce1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858bce350"/>
        <function-ref name="request" scoped="" ref="0x7fb858bce4e0"/>
        <function-ref name="granted" scoped="" ref="0x7fb858bce670"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858bce800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb858bc72f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb858bc72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bc7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb858bc6020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb858bc6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bc63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb858bb1500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb858bb1500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb1880"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb1a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb858bb2ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb858bb2ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb10a0"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb1230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb858bca7b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb858bca7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bcab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb858bb2500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb858bb2500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb2880"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb858bab500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb858bab500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bab880"/>
        <function-ref name="write" scoped="" ref="0x7fb858baba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb858bba0a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb858bba0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bba420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bba5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb858bb7880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb858bb7880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb7c00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb7d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb858bcce00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb858bcce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bcb1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb858bcbae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb858bcbae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bcbe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb858bbd0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb858bbd0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bbd420"/>
        <function-ref name="write" scoped="" ref="0x7fb858bbd5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb858bc7940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb858bc7940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858bc7cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb858bbd880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb858bbd880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bbdc00"/>
        <function-ref name="write" scoped="" ref="0x7fb858bbdd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb858bb30a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb858bb30a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858bb3820"/>
        <function-ref name="write" scoped="" ref="0x7fb858bb39b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb858ba99b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb858ba99b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858ba9d30"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858ba8020"/>
        <function-ref name="write" scoped="" ref="0x7fb858ba81b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858ba8340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb858ba84d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fb858fde2c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fb858fde2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858fde640"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858fde7d0"/>
        <function-ref name="write" scoped="" ref="0x7fb858fde960"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858fdeaf0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb858fdec80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb858fe0350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858fe0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb858fe06d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb858fe0860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb858fe09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fb858fdd540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fb858fdd540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858fdd8c0"/>
        <function-ref name="write" scoped="" ref="0x7fb858fdda50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fb858fdc370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fb858fdc370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858fdc6f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858fdc880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858fe14d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858fe14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858fe1850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858fe19e0"/>
        <function-ref name="request" scoped="" ref="0x7fb858fe1b70"/>
        <function-ref name="granted" scoped="" ref="0x7fb858fe1d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858fe0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fb858fdb1d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fb858fdb1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858fdb550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7fb858fc52e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb858fc52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb858fc5660"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb858fc57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7fb858fd6890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7fb858fd6890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858fd6c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858fd6da0"/>
        <function-ref name="write" scoped="" ref="0x7fb858fd4020"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858fd41b0"/>
        <function-ref name="readDone" scoped="" ref="0x7fb858fd4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb858fd8660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858fd8660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb858fd89e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb858fd8b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb858fd8d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7fb858fcdc70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb858fcdc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb858fcf020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7fb858fc5b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7fb858fc5b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb858fce020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb858fce1b0"/>
        <function-ref name="isState" scoped="" ref="0x7fb858fce340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb858fce4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb858fce660"/>
        <function-ref name="forceState" scoped="" ref="0x7fb858fce7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb858fd0060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb858fd0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858fd03e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858fd0570"/>
        <function-ref name="request" scoped="" ref="0x7fb858fd0700"/>
        <function-ref name="granted" scoped="" ref="0x7fb858fd0890"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858fd0a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7fb858fd4ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7fb858fd4ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858fd3020"/>
        <function-ref name="write" scoped="" ref="0x7fb858fd31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7fb858fd3a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7fb858fd3a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858fd3db0"/>
        <function-ref name="write" scoped="" ref="0x7fb858fd2020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb858fcea70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb858fcea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb858fcedf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb858fcc020"/>
        <function-ref name="led1On" scoped="" ref="0x7fb858fcc1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb858fcc340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb858fcc4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb858fcc660"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb858fcc7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb858fcce30"/>
        <function-ref name="set" scoped="" ref="0x7fb858fcc980"/>
        <function-ref name="led0On" scoped="" ref="0x7fb858fccb10"/>
        <function-ref name="led2On" scoped="" ref="0x7fb858fccca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858fd7510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858fd7510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858fd7890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858fd7a20"/>
        <function-ref name="request" scoped="" ref="0x7fb858fd7bb0"/>
        <function-ref name="granted" scoped="" ref="0x7fb858fd7d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858fd6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7fb858fc1bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7fb858fc1bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb858fc0020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb858fc01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7fb858fd28b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7fb858fd28b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858fd2c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb858f66770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb858f66770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb858f66af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb858f66c80"/>
        <function-ref name="isState" scoped="" ref="0x7fb858f66e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb858f5e020"/>
        <function-ref name="requestState" scoped="" ref="0x7fb858f5e1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb858f5e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb858f611d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb858f611d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb858f61550"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb858f616e0"/>
        <function-ref name="isState" scoped="" ref="0x7fb858f61870"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb858f61a00"/>
        <function-ref name="requestState" scoped="" ref="0x7fb858f61b90"/>
        <function-ref name="forceState" scoped="" ref="0x7fb858f61d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb858f5d020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb858f5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb858f5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb858f5db70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb858f5db70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb858f5c020"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb858f5c1b0"/>
        <function-ref name="isState" scoped="" ref="0x7fb858f5c340"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb858f5c4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb858f5c660"/>
        <function-ref name="forceState" scoped="" ref="0x7fb858f5c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb858bf5020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb858bf5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb858bf53a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb858bf5530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb858f438f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb858f438f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb858f43c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858f44c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858f44c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858f43020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858f431b0"/>
        <function-ref name="request" scoped="" ref="0x7fb858f43340"/>
        <function-ref name="granted" scoped="" ref="0x7fb858f434d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858f43660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb857ec55d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb857ec55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb857ec5950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb857ec5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb857ec0020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb857ec0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb857ec03a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb857ec0530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fb857ec07c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb857ec07c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb857ec0b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb857ec5d70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb857ec5d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb857ec1180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb857ec6940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb857ec6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb857ec6cc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb857ec6e50"/>
        <function-ref name="request" scoped="" ref="0x7fb857ec5020"/>
        <function-ref name="granted" scoped="" ref="0x7fb857ec51b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb857ec5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fb857ec1410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fb857ec1410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fb857ec1790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fb857ec1920"/>
        <function-ref name="splitRead" scoped="" ref="0x7fb857ec1ab0"/>
        <function-ref name="write" scoped="" ref="0x7fb857ec1c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb858eda8e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858eda8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb858edac60"/>
        <function-ref name="configure" scoped="" ref="0x7fb858edadf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb858edc850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb858edc850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb858edcbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb858edcd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fb858ed8a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb858ed8a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb858ed8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb858edd110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb858edd110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb858edd490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb858ed9690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb858ed9690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858ed9a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858ed9ba0"/>
        <function-ref name="request" scoped="" ref="0x7fb858ed9d30"/>
        <function-ref name="granted" scoped="" ref="0x7fb858ed8020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858ed81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858ee3d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858ee3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858edf180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858edf310"/>
        <function-ref name="request" scoped="" ref="0x7fb858edf4a0"/>
        <function-ref name="granted" scoped="" ref="0x7fb858edf630"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858edf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fb858edd790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fb858edd790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fb858eddb10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fb858eddca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7fb858edde30"/>
        <function-ref name="write" scoped="" ref="0x7fb858edc020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb858ed3b40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb858ed3b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb858ed5020"/>
        <function-ref name="txDone" scoped="" ref="0x7fb858ed51b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7fb858e61250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858e61250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb858e615f0"/>
        <function-ref name="configure" scoped="" ref="0x7fb858e61780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7fb858e60c50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7fb858e60c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb858e5f020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb858e5f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7fb858e5e3e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7fb858e5e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7fb858e5e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7fb858e61a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7fb858e61a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7fb858e61d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7fb858e5ea50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb858e5ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb858e5edd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb858e5d020"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb858e5d1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb858e5d340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb858e5d4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb858e5d660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb858e5d7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb858e5d980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb858e5db10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb858e5dca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb858e5de30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb858e5c020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb858e5c1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb858e5c440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb858e5c5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb858e5c760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb858e5c8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb858e5ca80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb858e5cc10"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb858e5cda0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb858e5b020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb858e5b1b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb858e5b340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb858e5b4d0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb858e5b660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb858e5b9f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb858e5bb80"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb858e5bd10"/>
        <function-ref name="tx" scoped="" ref="0x7fb858e5a020"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb858e5a1b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb858e5a340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb858e5a4d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb858e5a660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb858e5a7f0"/>
        <function-ref name="rx" scoped="" ref="0x7fb858e5a980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb858e5ab10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb858e5aca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb858e5ae30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb858e59020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb858e591b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb858e59c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb858e59c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb858e57020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb858e571b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb858e57340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb858e574d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb858e57660"/>
        <function-ref name="get" scoped="" ref="0x7fb858e577f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb858e57980"/>
        <function-ref name="led2On" scoped="" ref="0x7fb858e56020"/>
        <function-ref name="set" scoped="" ref="0x7fb858e57ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb858e57b10"/>
        <function-ref name="led0On" scoped="" ref="0x7fb858e57e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7fb858e5f5b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7fb858e5f5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858e5f950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858e5fae0"/>
        <function-ref name="request" scoped="" ref="0x7fb858e5fc70"/>
        <function-ref name="granted" scoped="" ref="0x7fb858e5fe00"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858e5e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858e62470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858e62470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858e62810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858e629a0"/>
        <function-ref name="request" scoped="" ref="0x7fb858e62b30"/>
        <function-ref name="granted" scoped="" ref="0x7fb858e62cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858e62e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7fb858e60060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7fb858e60060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7fb858e603e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7fb858e60570"/>
        <function-ref name="splitRead" scoped="" ref="0x7fb858e60700"/>
        <function-ref name="write" scoped="" ref="0x7fb858e60890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7fb858e59480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7fb858e59480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb858e59800"/>
        <function-ref name="txDone" scoped="" ref="0x7fb858e59990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7fb858e562f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7fb858e562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb858e56670"/>
        <function-ref name="runTask" scoped="" ref="0x7fb858e56800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fb858e462c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb858e462c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb858e46640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb858e4ad10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb858e4ad10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb858e490e0"/>
        <function-ref name="txDone" scoped="" ref="0x7fb858e49270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb858e4e020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb858e4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb858e4e3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb858e4e530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb858e4e6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb858e4e850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb858e4e9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb858e4eb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb858e4ed00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb858e4d020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb858e4d1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb858e4d340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb858e4d4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb858e4d660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb858e4d7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb858e4da80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb858e4dc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb858e4dda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb858e4c020"/>
        <function-ref name="isUart" scoped="" ref="0x7fb858e4c1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb858e4c340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb858e4c4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb858e4c660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb858e4c7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb858e4c980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb858e4cb10"/>
        <function-ref name="getMode" scoped="" ref="0x7fb858e4cca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb858e4b220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb858e4b3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb858e4b540"/>
        <function-ref name="tx" scoped="" ref="0x7fb858e4b6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb858e4b860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb858e4b9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb858e4bb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb858e4bd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb858e4a020"/>
        <function-ref name="rx" scoped="" ref="0x7fb858e4a1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb858e4a340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb858e4a4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb858e4a660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb858e4a7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb858e4a980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fb858e0dbb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fb858e0dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858e0c020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858e0c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb858e0c340"/>
        <function-ref name="clr" scoped="" ref="0x7fb858e0a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858e0c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858e0c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb858e0c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb858e0cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858e0cca0"/>
        <function-ref name="get" scoped="" ref="0x7fb858e0ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb858e0b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb858e0b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb858e0b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb858e0b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb858e0b760"/>
        <function-ref name="set" scoped="" ref="0x7fb858e0b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb858e0ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb858e0c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb858e0bc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb858e0bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb858e402d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb858e402d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb858e40650"/>
        <function-ref name="txDone" scoped="" ref="0x7fb858e407e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7fb858e0a3e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7fb858e0a3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858e0a760"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858e0a8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb858e0aa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb858e087f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858e0ada0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858e09020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb858e091b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb858e09340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858e094d0"/>
        <function-ref name="get" scoped="" ref="0x7fb858e09660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb858e097f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb858e09980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb858e09b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb858e09da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb858e08020"/>
        <function-ref name="set" scoped="" ref="0x7fb858e081b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb858e08340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb858e0ac10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb858e084d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb858e08660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7fb858e08bb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7fb858e08bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858e06020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858e061b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb858e06340"/>
        <function-ref name="clr" scoped="" ref="0x7fb858e04020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858e06660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858e067f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb858e06980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb858e06b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858e06ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb858e06e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb858e05020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb858e051b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb858e05340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb858e055d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb858e05760"/>
        <function-ref name="set" scoped="" ref="0x7fb858e058f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb858e05a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb858e064d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb858e05c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb858e05da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7fb858e45700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7fb858e45700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb858e45a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb858e45c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb858e45da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb858e44020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb858e441b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb858e44340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb858e444d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb858e44660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb858e447f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb858e44980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb858e44b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb858e44ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb858e44e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb858e43120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb858e432b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb858e43440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb858e435d0"/>
        <function-ref name="isUart" scoped="" ref="0x7fb858e43760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb858e438f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb858e43a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb858e43c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb858e43da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb858e42020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb858e421b0"/>
        <function-ref name="getMode" scoped="" ref="0x7fb858e42340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb858e426d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb858e42860"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb858e429f0"/>
        <function-ref name="tx" scoped="" ref="0x7fb858e42b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb858e42d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb858e41020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb858e411b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb858e41340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb858e414d0"/>
        <function-ref name="rx" scoped="" ref="0x7fb858e41660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb858e417f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb858e41980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb858e41b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb858e41ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb858e41e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7fb858e17d10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fb858e17d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb858e3e0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb858e3e270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb858e3e400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb858e3e590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb858e3e720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb858e3e8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb858e3ea40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb858e3ebd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb858e3ed60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb858e3d020"/>
        <function-ref name="getData" scoped="" ref="0x7fb858e3d1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb858e3d340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb858e3d4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb858e3d760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb858e3d8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fb858e3da80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb858e3dc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb858e3dda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb858e16020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb858e161b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb858e16340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb858e164d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb858e16660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb858e167f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb858e16980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb858e16d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb858e15020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb858e151b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb858e15340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb858e154d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb858e15660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb858e157f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb858e15980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb858e15b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb858e15ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb858e15e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb858e14020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb858e141b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb858e14340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb858e144d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb858e14660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb858e147f0"/>
        <function-ref name="setData" scoped="" ref="0x7fb858e14980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb858e14b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb858e14ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb858e14e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb858e13020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb858e131b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb858e13340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb858e138d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb858e13a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb858e13bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb858e13d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb858e12020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb858e121b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb858e12340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb858e124d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb858e12660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb858e127f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7fb858e0f3e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7fb858e0f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858e0f760"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858e0f8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb858e0fa80"/>
        <function-ref name="clr" scoped="" ref="0x7fb858e0d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858e0fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858e0e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb858e0e1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb858e0e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858e0e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fb858e0e660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb858e0e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb858e0e980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb858e0eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb858e0eda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb858e0d020"/>
        <function-ref name="set" scoped="" ref="0x7fb858e0d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb858e0d340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb858e0fc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb858e0d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb858e0d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb858e40c20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb858e40c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb858e3f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fb858e12bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fb858e12bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858e11020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858e111b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb858e11340"/>
        <function-ref name="clr" scoped="" ref="0x7fb858e0f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858e11660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858e117f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb858e11980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb858e11b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858e11ca0"/>
        <function-ref name="get" scoped="" ref="0x7fb858e11e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb858e10020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb858e101b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb858e10340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb858e105d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb858e10760"/>
        <function-ref name="set" scoped="" ref="0x7fb858e108f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb858e10a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb858e114d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb858e10c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb858e10da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb857eb8020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb857eb8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb857eb83a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb857eb8530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7fb857eb2440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7fb857eb2440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb857eb27c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb857eaa760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb857eaa760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb857eaaae0"/>
        <function-ref name="configure" scoped="" ref="0x7fb857eaac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fb857eb2a50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb857eb2a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb857eb2dd0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb857eb0020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb857eb01b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb857eb0340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb857eb04d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb857eb0660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb857eb07f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb857eb0980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb857eb0b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb857eb0ca0"/>
        <function-ref name="getData" scoped="" ref="0x7fb857eb0e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb857eaf020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb857eaf1b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb857eaf440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb857eaf5d0"/>
        <function-ref name="getIV" scoped="" ref="0x7fb857eaf760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb857eaf8f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb857eafa80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb857eafc10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb857eafda0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb857eae020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb857eae1b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb857eae340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb857eae4d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb857eae660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb857eae9f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb857eaeb80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb857eaed10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb857ead020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb857ead1b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb857ead340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb857ead4d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb857ead660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb857ead7f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb857ead980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb857eadb10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb857eadca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb857eade30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb857eac020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb857eac1b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb857eac340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb857eac4d0"/>
        <function-ref name="setData" scoped="" ref="0x7fb857eac660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb857eac7f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb857eac980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb857eacb10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb857eacca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb857eace30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb857eab020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb857eab5b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb857eab740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb857eab8d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb857eaba60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb857eabbf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb857eabd80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb857eaa020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb857eaa1b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb857eaa340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb857eaa4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7fb857eb3c10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7fb857eb3c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb857eb2020"/>
        <function-ref name="txDone" scoped="" ref="0x7fb857eb21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb857eb9340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb857eb9340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb857eb96c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb857eb9850"/>
        <function-ref name="request" scoped="" ref="0x7fb857eb99e0"/>
        <function-ref name="granted" scoped="" ref="0x7fb857eb9b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb857eb9d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7fb857eb7020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7fb857eb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb857eb73a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb857eb7530"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb857eb76c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb857eb7850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb857eb79e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb857eb7b70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb857eb7d00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb857eb6020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb857eb61b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb857eb6340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb857eb64d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb857eb6660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb857eb67f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb857eb6a80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb857eb6c10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb857eb6da0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb857eb5020"/>
        <function-ref name="isUart" scoped="" ref="0x7fb857eb51b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb857eb5340"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb857eb54d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb857eb5660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb857eb57f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb857eb5980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb857eb5b10"/>
        <function-ref name="getMode" scoped="" ref="0x7fb857eb5ca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb857eb4220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb857eb43b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb857eb4540"/>
        <function-ref name="tx" scoped="" ref="0x7fb857eb46d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb857eb4860"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb857eb49f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb857eb4b80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb857eb4d10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb857eb3020"/>
        <function-ref name="rx" scoped="" ref="0x7fb857eb31b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb857eb3340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb857eb34d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb857eb3660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb857eb37f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb857eb3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb857eb87c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb857eb87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb857eb8b40"/>
        <function-ref name="userId" scoped="" ref="0x7fb857eb8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb858d5e2c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb858d5e2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb858d5e640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb858d5e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb858d5d8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858d5d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb858d5dc20"/>
        <function-ref name="configure" scoped="" ref="0x7fb858d5ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb858d624d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb858d624d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb858d62850"/>
        <function-ref name="txDone" scoped="" ref="0x7fb858d629e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858d5f020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858d5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858d5f3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858d5f530"/>
        <function-ref name="request" scoped="" ref="0x7fb858d5f6c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb858d5f850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858d5f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb858d613f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb858d613f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb858d61770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb858d5ead0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb858d5ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb858d5ee50"/>
        <function-ref name="userId" scoped="" ref="0x7fb858d5d020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7fb858d48bf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb858d48bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb858d47020"/>
        <function-ref name="userId" scoped="" ref="0x7fb858d471b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7fb858d5bd60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7fb858d5bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb858d5a180"/>
        <function-ref name="txDone" scoped="" ref="0x7fb858d5a310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7fb858d485e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7fb858d485e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb858d48960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7fb858d5a710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7fb858d5a710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb858d5aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7fb858d5ad80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7fb858d5ad80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7fb858d48180"/>
        <function-ref name="txDone" scoped="" ref="0x7fb858d48310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb858cc9a60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb858cc9a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb858cc9e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb858cc7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb858cc6790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb858cc6790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb858cc6b30"/>
        <function-ref name="configure" scoped="" ref="0x7fb858cc6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb858cc7270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb858cc7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858cc75f0"/>
        <function-ref name="requested" scoped="" ref="0x7fb858cc7780"/>
        <function-ref name="granted" scoped="" ref="0x7fb858cc7910"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858cc7aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb858cc7c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858ccaca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858ccaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858cc90a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858cc9230"/>
        <function-ref name="request" scoped="" ref="0x7fb858cc93c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb858cc9550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858cc96e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fb858cc5020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fb858cc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb858cc53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb858cc7e80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb858cc7e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb858cc6220"/>
        <function-ref name="userId" scoped="" ref="0x7fb858cc63b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb857e3f020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb857e3f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb857e3f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb857e3f630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb857e3f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb857e3f9b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb857e3fb40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb857e3fcd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb857e3fe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7fb857e3c6c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7fb857e3c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7fb857e3ca60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb857e3cbf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7fb857e399d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7fb857e399d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7fb857e39d70"/>
        <function-ref name="configure" scoped="" ref="0x7fb857e38020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb857e382b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb857e382b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb857e38630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb857e387c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb857e38950"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb857e38ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7fb857e3ce40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7fb857e3ce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb857e3a1e0"/>
        <function-ref name="requested" scoped="" ref="0x7fb857e3a370"/>
        <function-ref name="granted" scoped="" ref="0x7fb857e3a500"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb857e3a690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7fb857e3a820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb857e38d30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb857e38d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb857e370e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb857e37270"/>
        <function-ref name="led1On" scoped="" ref="0x7fb857e37400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb857e37590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb857e37720"/>
        <function-ref name="get" scoped="" ref="0x7fb857e378b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb857e37a40"/>
        <function-ref name="led0On" scoped="" ref="0x7fb857e361b0"/>
        <function-ref name="set" scoped="" ref="0x7fb857e37d60"/>
        <function-ref name="led2On" scoped="" ref="0x7fb857e37bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb857e36020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb857e3d850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb857e3d850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb857e3dbf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb857e3dd80"/>
        <function-ref name="request" scoped="" ref="0x7fb857e3c020"/>
        <function-ref name="granted" scoped="" ref="0x7fb857e3c1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb857e3c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7fb857e392d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7fb857e392d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb857e39650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7fb857e3aa70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7fb857e3aa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7fb857e3adf0"/>
        <function-ref name="userId" scoped="" ref="0x7fb857e39020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7fb857e36480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7fb857e36480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb857e36800"/>
        <function-ref name="runTask" scoped="" ref="0x7fb857e36990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7fb858cbc020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7fb858cbc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb858cbc3a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb858cbc530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb858cbc6c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb858cbc850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb858cbc9e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb858cbcb70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb858cbcd00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb858cbb020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb858cbb1b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb858cbb340"/>
        <function-ref name="getData" scoped="" ref="0x7fb858cbb4d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb858cbb660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb858cbb7f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb858cbba80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb858cbbc10"/>
        <function-ref name="getIV" scoped="" ref="0x7fb858cbbda0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb858cba020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb858cba1b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb858cba340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb858cba4d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb858cba660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb858cba7f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb858cba980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb858cbab10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb858cbaca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb858cb9220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb858cb93b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb858cb9540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb858cb96d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb858cb9860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb858cb99f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb858cb9b80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb858cb9d10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb858cb8020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb858cb81b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb858cb8340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb858cb84d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb858cb8660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb858cb87f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb858cb8980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb858cb8b10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb858cb8ca0"/>
        <function-ref name="setData" scoped="" ref="0x7fb858cb8e30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb858cb7020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb858cb71b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb858cb7340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb858cb74d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb858cb7660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb858cb77f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb858cb7d80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb858cb6020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb858cb61b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb858cb6340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb858cb64d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb858cb6660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb858cb67f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb858cb6980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb858cb6b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb858cb6ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7fb858cacbb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7fb858cacbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7fb858cab020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7fb858cab1b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7fb858cab340"/>
        <function-ref name="enableUart" scoped="" ref="0x7fb858cab4d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7fb858cab660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7fb858cab7f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7fb858cab980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7fb858cabb10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7fb858cabca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7fb858cabe30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7fb858caa020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7fb858caa1b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7fb858caa340"/>
        <function-ref name="getUbr" scoped="" ref="0x7fb858caa5d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7fb858caa760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7fb858caa8f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7fb858caaa80"/>
        <function-ref name="isUart" scoped="" ref="0x7fb858caac10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7fb858caada0"/>
        <function-ref name="isSpi" scoped="" ref="0x7fb858ca9020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7fb858ca91b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7fb858ca9340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7fb858ca94d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7fb858ca9660"/>
        <function-ref name="getMode" scoped="" ref="0x7fb858ca97f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7fb858ca9b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7fb858ca9d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7fb858ca8020"/>
        <function-ref name="tx" scoped="" ref="0x7fb858ca81b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7fb858ca8340"/>
        <function-ref name="disableUart" scoped="" ref="0x7fb858ca84d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7fb858ca8660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7fb858ca87f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7fb858ca8980"/>
        <function-ref name="rx" scoped="" ref="0x7fb858ca8b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7fb858ca8ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7fb858ca8e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7fb858ca7020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7fb858ca71b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7fb858ca7340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7fb858ca5e40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7fb858ca5e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858ca41e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858ca4370"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb858ca4500"/>
        <function-ref name="clr" scoped="" ref="0x7fb858ca21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858ca4820"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858ca49b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb858ca4b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb858ca4cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858ca4e60"/>
        <function-ref name="get" scoped="" ref="0x7fb858ca3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb858ca31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb858ca3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb858ca34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb858ca3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb858ca38f0"/>
        <function-ref name="set" scoped="" ref="0x7fb858ca3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb858ca3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb858ca4690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb858ca3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb858ca2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7fb858cb5d40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7fb858cb5d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7fb858cb20e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7fb858cb2270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7fb858cb2400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7fb858cb2590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7fb858cb2720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7fb858cb28b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7fb858cb2a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7fb858cb2bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb858cb2d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7fb858cb1020"/>
        <function-ref name="getData" scoped="" ref="0x7fb858cb11b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7fb858cb1340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7fb858cb14d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7fb858cb1760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7fb858cb18f0"/>
        <function-ref name="getIV" scoped="" ref="0x7fb858cb1a80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7fb858cb1c10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7fb858cb1da0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7fb858cb0020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7fb858cb01b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7fb858cb0340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7fb858cb04d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7fb858cb0660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7fb858cb07f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7fb858cb0980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7fb858cb0d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7fb858caf020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7fb858caf1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7fb858caf340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7fb858caf4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7fb858caf660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7fb858caf7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7fb858caf980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7fb858cafb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7fb858cafca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7fb858cafe30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7fb858cae020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7fb858cae1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7fb858cae340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7fb858cae4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7fb858cae660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7fb858cae7f0"/>
        <function-ref name="setData" scoped="" ref="0x7fb858cae980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7fb858caeb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7fb858caeca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7fb858caee30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7fb858cad020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7fb858cad1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7fb858cad340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7fb858cad8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7fb858cada60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7fb858cadbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7fb858cadd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7fb858cac020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7fb858cac1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7fb858cac340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7fb858cac4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7fb858cac660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7fb858cac7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7fb858ca7700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7fb858ca7700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858ca7a80"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858ca7c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb858ca7da0"/>
        <function-ref name="clr" scoped="" ref="0x7fb858ca5a80"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858ca61b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858ca6340"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb858ca64d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb858ca6660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858ca67f0"/>
        <function-ref name="get" scoped="" ref="0x7fb858ca6980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb858ca6b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb858ca6ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb858ca6e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb858ca5120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb858ca52b0"/>
        <function-ref name="set" scoped="" ref="0x7fb858ca5440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb858ca55d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb858ca6020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb858ca5760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb858ca58f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb858b90c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb858b90c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b8f210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b8f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb858b9bda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb858b9bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b99180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb858b93b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb858b93b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b92020"/>
        <function-ref name="write" scoped="" ref="0x7fb858b921b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb858b8d670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858b8d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b8d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b8db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb858b86e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb858b86e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b85210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb858b8de50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb858b8de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b8c210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b8c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb858b7a2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb858b7a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7a670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb858b7c2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb858b7c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7c670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb858b98120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb858b98120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b984a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb858b82670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb858b82670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b829f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b82b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb858b7d2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb858b7d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7d670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb858b92c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb858b92c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b91020"/>
        <function-ref name="write" scoped="" ref="0x7fb858b911b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb858b91c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb858b91c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b90020"/>
        <function-ref name="write" scoped="" ref="0x7fb858b901b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb858b88670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb858b88670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b889f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b88b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb858b8ae50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb858b8ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b89210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b893a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb858b8c670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb858b8c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b8c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b8cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb858b9c760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858b9c760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb858b9cae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb858b9cc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb858b9ce00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb858b97aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb858b97aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b97e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb858b96120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb858b96120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b965a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb858b81a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb858b81a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b81df0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb858b96870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb858b96870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b96bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb858b7dad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb858b7dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7de50"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb858b98dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb858b98dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b97180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb858b83e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb858b83e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b82210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b823a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb858b91480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb858b91480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b91800"/>
        <function-ref name="write" scoped="" ref="0x7fb858b91990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb858b92480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb858b92480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b92800"/>
        <function-ref name="write" scoped="" ref="0x7fb858b92990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb858b9b750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb858b9b750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b9bad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb858b84e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb858b84e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b83210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb858b85670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb858b85670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b859f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b85b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb858b83670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb858b83670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b839f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b83b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb858b7bad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb858b7bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7be50"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb858b7cad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb858b7cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7ce50"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb858b89670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb858b89670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b899f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b89b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb858b85e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb858b85e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b84210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb858b7ead0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb858b7ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7ee50"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb858b8b670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb858b8b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b8b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b8bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb858b7aad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb858b7aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858b7ae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858b78020"/>
        <function-ref name="write" scoped="" ref="0x7fb858b781b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858b78340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb858b784d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb858b9b100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb858b9b100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b9b480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb858b93370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb858b93370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b936f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b93880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb858b90480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb858b90480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b90800"/>
        <function-ref name="write" scoped="" ref="0x7fb858b90990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb858b88e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb858b88e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b86210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb858b8ce50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb858b8ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b8b210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b8b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb858b86670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb858b86670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b869f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b86b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb858b8f670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb858b8f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b8f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b8fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb858b99450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb858b99450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b997d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb858b8fe50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb858b8fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b8d210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b8d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858b9da80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858b9da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858b9de00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858b9c020"/>
        <function-ref name="request" scoped="" ref="0x7fb858b9c1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb858b9c340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858b9c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb858b95020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb858b95020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b953a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb858b95cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb858b95cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b930a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb858b7e2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb858b7e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7e670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb858b7fad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb858b7fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7fe50"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb858b97450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb858b97450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b977d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb858b7f2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb858b7f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7f670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb858b7b2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb858b7b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b7b670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b7b800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb858b89e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb858b89e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b88210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb858b84670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb858b84670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b849f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b84b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb858b99aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb858b99aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b99e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb858b98770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb858b98770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b98af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb858b8be50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb858b8be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b8a210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b8a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb858b95670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb858b95670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b959f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb858b8a670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb858b8a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b8a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b8ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb858b82e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb858b82e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b81610"/>
        <function-ref name="write" scoped="" ref="0x7fb858b817a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb858b787a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb858b787a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858b78b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858b78cb0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b78e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858b77020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb858b771b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb858b63c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb858b63c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b62210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b623a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb858b6eda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb858b6eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b6d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb858b67b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb858b67b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b66020"/>
        <function-ref name="write" scoped="" ref="0x7fb858b661b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb858b61670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858b61670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b619f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b61b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb858b5ae50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb858b5ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b59210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b593a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb858b61e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb858b61e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b60210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b603a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb858b4d2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb858b4d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b4d670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b4d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb858b4f2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb858b4f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b4f670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b4f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb858b6c120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb858b6c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b6c4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb858b55670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb858b55670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b559f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b55b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb858b512f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb858b512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b51670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b51800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb858b66c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb858b66c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b64020"/>
        <function-ref name="write" scoped="" ref="0x7fb858b641b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb858b64c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb858b64c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b63020"/>
        <function-ref name="write" scoped="" ref="0x7fb858b631b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb858b5b670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb858b5b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b5b9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b5bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb858b5de50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb858b5de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b5c210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b5c3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb858b60670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb858b60670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b609f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b60b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb858b6f760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858b6f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb858b6fae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb858b6fc70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb858b6fe00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb858b6aaa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb858b6aaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b6ae20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb858b69120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb858b69120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b695a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb858b54a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb858b54a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b54df0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b53020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb858b69870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb858b69870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b69bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb858b51ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb858b51ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b51e50"/>
        <function-ref name="write" scoped="" ref="0x7fb858b4f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb858b6cdc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb858b6cdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b6a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb858b56e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb858b56e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b55210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b553a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb858b64480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb858b64480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b64800"/>
        <function-ref name="write" scoped="" ref="0x7fb858b64990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb858b66480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb858b66480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b66800"/>
        <function-ref name="write" scoped="" ref="0x7fb858b66990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb858b6e750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb858b6e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b6ead0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb858b58e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb858b58e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b56210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b563a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb858b59670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb858b59670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b599f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b59b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb858b56670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb858b56670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b569f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b56b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb858b4ead0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb858b4ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b4ee50"/>
        <function-ref name="write" scoped="" ref="0x7fb858b4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb858b4fad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb858b4fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b4fe50"/>
        <function-ref name="write" scoped="" ref="0x7fb858b4e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb858b5c670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb858b5c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b5c9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b5cb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb858b59e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb858b59e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b58210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b583a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb858b52ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb858b52ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b52e50"/>
        <function-ref name="write" scoped="" ref="0x7fb858b51020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb858b5f670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb858b5f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b5f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b5fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb858b4dad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb858b4dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858b4de50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858b4c020"/>
        <function-ref name="write" scoped="" ref="0x7fb858b4c1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858b4c340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb858b4c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb858b6e100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb858b6e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b6e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb858b67370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb858b67370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b676f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b67880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb858b63480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb858b63480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b63800"/>
        <function-ref name="write" scoped="" ref="0x7fb858b63990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb858b5be50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb858b5be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b5a210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b5a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb858b60e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb858b60e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b5f210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b5f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb858b5a670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb858b5a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b5a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b5ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb858b62670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb858b62670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b629f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b62b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb858b6d450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb858b6d450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b6d7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb858b62e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb858b62e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b61210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b613a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858b709e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858b709e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858b70d60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858b6f020"/>
        <function-ref name="request" scoped="" ref="0x7fb858b6f1b0"/>
        <function-ref name="granted" scoped="" ref="0x7fb858b6f340"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858b6f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb858b68020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb858b68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b683a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb858b68cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb858b68cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b670a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb858b522f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb858b522f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b52670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b52800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb858b53ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb858b53ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b53e50"/>
        <function-ref name="write" scoped="" ref="0x7fb858b52020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb858b6a450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb858b6a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b6a7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb858b532f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb858b532f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b53670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b53800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb858b4e2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb858b4e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b4e670"/>
        <function-ref name="write" scoped="" ref="0x7fb858b4e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb858b5ce50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb858b5ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b5b210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b5b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb858b58670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb858b58670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b589f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b58b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb858b6daa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb858b6daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b6de20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb858b6c770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb858b6c770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b6caf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb858b5fe50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb858b5fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b5d210"/>
        <function-ref name="write" scoped="" ref="0x7fb858b5d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb858b68670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb858b68670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858b689f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb858b5d670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb858b5d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b5d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b5db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb858b55e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb858b55e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b54610"/>
        <function-ref name="write" scoped="" ref="0x7fb858b547a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb858b4c7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb858b4c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858b4cb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858b4ccb0"/>
        <function-ref name="write" scoped="" ref="0x7fb858b4ce40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858b4b020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb858b4b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7fb858b44b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb858b44b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fb858b41020"/>
        <function-ref name="changed" scoped="" ref="0x7fb858b411b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fb858b41340"/>
        <function-ref name="setAddress" scoped="" ref="0x7fb858b414d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fb858b43d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb858b43d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fb858b2c0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7fb858b27310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7fb858b27310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7fb858b27690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7fb858b24880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fb858b24880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b24c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fb858b19020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fb858b19020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b193a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7fb858b10bd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fb858b10bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b13020"/>
        <function-ref name="write" scoped="" ref="0x7fb858b131b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7fb858b13530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7fb858b13530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb858b138b0"/>
        <function-ref name="stop" scoped="" ref="0x7fb858b13a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7fb858b14140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7fb858b14140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858b144c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fb858b18c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fb858b18c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858aff020"/>
        <function-ref name="write" scoped="" ref="0x7fb858aff1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fb858aff540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fb858aff540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858aff8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858affa50"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858affbe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858affd70"/>
        <function-ref name="get" scoped="" ref="0x7fb858afe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858afe1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb858afe340"/>
        <function-ref name="clr" scoped="" ref="0x7fb858afe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7fb858af6950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fb858af6950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4e640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb859b4e9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fb858af9780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7fb858afb150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7fb858afb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858afb4d0"/>
        <function-ref name="write" scoped="" ref="0x7fb858afb660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7fb858afb9f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7fb858afb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858afbd70"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858afa020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858afa1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858afa340"/>
        <function-ref name="get" scoped="" ref="0x7fb858afa4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858afa660"/>
        <function-ref name="set" scoped="" ref="0x7fb858afa7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb858afa980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fb858afdca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fb858afdca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4e640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb859b4e9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fb858ad6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7fb858ad3a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7fb858ad3a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4e640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb859b4e9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7fb858ac48d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb858ac3020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb858ac3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4e640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb859b4e9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb858ac3e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb858ac2800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb858ac2340"/>
        <function-ref name="overflow" scoped="" ref="0x7fb858ac2cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7fb858abd530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7fb858abd530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4e640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb859b4e9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb858abc3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb858abcd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb858abc890"/>
        <function-ref name="overflow" scoped="" ref="0x7fb858abb260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7fb858ab6020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7fb858ab6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb858ab63a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7fb858ab6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7fb858ab66c0"/>
        <function-ref name="get" scoped="" ref="0x7fb858ab6850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7fb858ab69e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb858ab6b70"/>
        <function-ref name="getMode" scoped="" ref="0x7fb858ab6d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb858ab5020"/>
        <function-ref name="overflow" scoped="" ref="0x7fb858ab51b0"/>
        <function-ref name="setMode" scoped="" ref="0x7fb858ab5340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7fb858ab54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fb858abae50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb858abae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4e640"/>
            <typename><typedef-ref name="TMicro" ref="0x7fb859b4e9b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb858ab8ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb858ab7670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb858ab71b0"/>
        <function-ref name="overflow" scoped="" ref="0x7fb858ab7b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7fb858b00590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7fb858b00590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858b00910"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858b00aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858b00c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858b00dc0"/>
        <function-ref name="get" scoped="" ref="0x7fb858ab1020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858ab11b0"/>
        <function-ref name="set" scoped="" ref="0x7fb858ab1340"/>
        <function-ref name="clr" scoped="" ref="0x7fb858ab14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7fb858aafc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7fb858aafc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858aae020"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858aae1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7fb858aae340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7fb858aac020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858aae660"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858aae7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7fb858aae980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7fb858aaeb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858aaeca0"/>
        <function-ref name="get" scoped="" ref="0x7fb858aaee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7fb858aad020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7fb858aad1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7fb858aad340"/>
        <function-ref name="getRaw" scoped="" ref="0x7fb858aad5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7fb858aad760"/>
        <function-ref name="set" scoped="" ref="0x7fb858aad8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7fb858aada80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7fb858aadc10"/>
        <function-ref name="clr" scoped="" ref="0x7fb858aae4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7fb858aadda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7fb858ab09e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7fb858ab09e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858ab0d60"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858aaf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858aaf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858aaf340"/>
        <function-ref name="get" scoped="" ref="0x7fb858aaf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858aaf660"/>
        <function-ref name="set" scoped="" ref="0x7fb858aaf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb858aaf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb858aa61b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb858aa61b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb858aa6530"/>
        <function-ref name="stop" scoped="" ref="0x7fb858aa66c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb858a97cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb858a97cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb858a960a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb858a96230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb858a963c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb858a96550"/>
        <function-ref name="setCca" scoped="" ref="0x7fb858a966e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb858a96870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fb858a93990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb858a93990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb858a93d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7fb858a97020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7fb858a97020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb858a973a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb858a97530"/>
        <function-ref name="modify" scoped="" ref="0x7fb858a976c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb858a97850"/>
        <function-ref name="resend" scoped="" ref="0x7fb858a979e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb858a9a6c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb858a9a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb858a9aa40"/>
        <function-ref name="stop" scoped="" ref="0x7fb858a9abd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fb858a95150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fb858a95150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb858a954d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb858a88970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb858a88970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb858a88cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb858a88e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb858a87030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb858a871c0"/>
        <function-ref name="setCca" scoped="" ref="0x7fb858a87350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb858a874e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fb858a7bc60" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb858a7bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb858a76210"/>
        <function-ref name="clear" scoped="" ref="0x7fb858a76940"/>
        <function-ref name="isValid" scoped="" ref="0x7fb858a7eac0"/>
        <function-ref name="set" scoped="" ref="0x7fb858a75090"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fb858a61020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858a61020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858a613a0"/>
        <function-ref name="write" scoped="" ref="0x7fb858a61530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fb858a61890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb858a61890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858a61c10"/>
        <function-ref name="write" scoped="" ref="0x7fb858a61da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7fb858a87900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7fb858a87900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb858a87c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7fb858a65530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb858a65530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858a658b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7fb858a74a80" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7fb858a74a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7fb858a74e00"/>
        <function-ref name="disable" scoped="" ref="0x7fb858a73020"/>
        <function-ref name="captured" scoped="" ref="0x7fb858a731b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7fb858a73340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7fb858a85ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7fb858a85ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb858a82390"/>
        <function-ref name="fired" scoped="" ref="0x7fb858a83360"/>
        <function-ref name="startAt" scoped="" ref="0x7fb858a83ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb858a83820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fb858a82850"/>
        <function-ref name="start" scoped="" ref="0x7fb858a84970"/>
        <function-ref name="stop" scoped="" ref="0x7fb858a84e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb858a82d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858a82d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb858a800a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb858a80230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb858a803c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb858a80550"/>
        <function-ref name="getPower" scoped="" ref="0x7fb858a806e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb858a80870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7fb858a67550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb858a67550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858a678d0"/>
        <function-ref name="write" scoped="" ref="0x7fb858a67a60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7fb858a67e00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb858a67e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858a661c0"/>
        <function-ref name="write" scoped="" ref="0x7fb858a66350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7fb858a5bd40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fb858a5bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb858a5e0e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fb858a5e270"/>
        <function-ref name="sfd" scoped="" ref="0x7fb858a5e400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb858a89bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb858a89bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb858a88020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb858a881b0"/>
        <function-ref name="modify" scoped="" ref="0x7fb858a88340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb858a884d0"/>
        <function-ref name="resend" scoped="" ref="0x7fb858a88660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7fb858a69d10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858a69d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb858a680e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb858a68270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb858a68400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7fb858a65c60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb858a65c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858a63020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fb858a6c9b0" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb858a6c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858a6cd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858a6b020"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858a6b1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858a6b340"/>
        <function-ref name="get" scoped="" ref="0x7fb858a6b4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858a6b660"/>
        <function-ref name="set" scoped="" ref="0x7fb858a6b7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fb858a6b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb858a8ac60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb858a8ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb858a89020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb858a80bb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb858a80bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb858a7f020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb858a7f1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb858a7f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7fb858a6ee80" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb858a6ee80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb858a74220"/>
        <function-ref name="isSet" scoped="" ref="0x7fb858a743b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb858a74540"/>
        <function-ref name="set" scoped="" ref="0x7fb858a746d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7fb858a633e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb858a633e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858a63960"/>
        <function-ref name="write" scoped="" ref="0x7fb858a63af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb858a69020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb858a69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858a693a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858a69530"/>
        <function-ref name="request" scoped="" ref="0x7fb858a696c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb858a69850"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858a699e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7fb858a73690" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7fb858a73690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858a73b10"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858a73ca0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858a73e30"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858a6c020"/>
        <function-ref name="get" scoped="" ref="0x7fb858a6c1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858a6c340"/>
        <function-ref name="set" scoped="" ref="0x7fb858a6c4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb858a6c660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fb858a60130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb858a60130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858a604b0"/>
        <function-ref name="write" scoped="" ref="0x7fb858a60640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7fb858a609c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb858a609c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858a60d40"/>
        <function-ref name="write" scoped="" ref="0x7fb858a5f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fb858a666d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb858a666d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858a66a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7fb858a6bcd0" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7fb858a6bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858a6a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858a6a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858a6a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858a6a550"/>
        <function-ref name="get" scoped="" ref="0x7fb858a6a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858a6a870"/>
        <function-ref name="set" scoped="" ref="0x7fb858a6aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fb858a6ab90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb858a5e6c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb858a5e6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb858a5ea40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb858a5ebd0"/>
        <function-ref name="led1On" scoped="" ref="0x7fb858a5ed60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb858a5d020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb858a5d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fb858a5d340"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb858a5d4d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb858a5db10"/>
        <function-ref name="set" scoped="" ref="0x7fb858a5d660"/>
        <function-ref name="led0On" scoped="" ref="0x7fb858a5d7f0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb858a5d980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fb858a625e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb858a625e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858a62960"/>
        <function-ref name="write" scoped="" ref="0x7fb858a62af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb858a89320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb858a89320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb858a896a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb858a89830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7fb858a68780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb858a68780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858a68b00"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858a68c90"/>
        <function-ref name="write" scoped="" ref="0x7fb858a68e20"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858a67020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb858a671b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7fb858a66de0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb858a66de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858a65180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7fb858a63e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb858a63e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858a62220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7fb858a850f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7fb858a850f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb858a85470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb8589c1c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb8589c1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589bf210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589bf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb8589ca020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb8589ca020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589ca3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb8589c4c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb8589c4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589c3020"/>
        <function-ref name="write" scoped="" ref="0x7fb8589c31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb8589be670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb8589be670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589be9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589beb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb8589b7e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb8589b7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b6210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb8589bee50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb8589bee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589bd210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589bd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb8589aa2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb8589aa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589aa670"/>
        <function-ref name="write" scoped="" ref="0x7fb8589aa800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb8589ad2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb8589ad2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589ad670"/>
        <function-ref name="write" scoped="" ref="0x7fb8589ad800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb8589c9370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb8589c9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb8589b2670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb8589b2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b29f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb8589ae2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb8589ae2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589ae670"/>
        <function-ref name="write" scoped="" ref="0x7fb8589ae800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb8589c3c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb8589c3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589c2020"/>
        <function-ref name="write" scoped="" ref="0x7fb8589c21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb8589c2c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb8589c2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589c1020"/>
        <function-ref name="write" scoped="" ref="0x7fb8589c11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb8589b8670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb8589b8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b89f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb8589bbe50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb8589bbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589ba210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589ba3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb8589bd670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb8589bd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589bd9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589bdb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb8589cc8f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb8589cc8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb8589ccc70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb8589cce00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb8589cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb8589c8d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb8589c8d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c70a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb8589c7370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb8589c7370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c77f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb8589b1a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb8589b1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b1df0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb8589c7ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb8589c7ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb8589aead0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb8589aead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589aee50"/>
        <function-ref name="write" scoped="" ref="0x7fb8589ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb8589c8060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb8589c8060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c83e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb8589b4e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb8589b4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b2210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb8589c2480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb8589c2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589c2800"/>
        <function-ref name="write" scoped="" ref="0x7fb8589c2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb8589c3480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb8589c3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589c3800"/>
        <function-ref name="write" scoped="" ref="0x7fb8589c3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb8589cb940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb8589cb940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589cbcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb8589b5e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb8589b5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b4210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb8589b6670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb8589b6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b69f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb8589b4670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb8589b4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b49f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb8589acad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb8589acad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589ace50"/>
        <function-ref name="write" scoped="" ref="0x7fb8589aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb8589adad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb8589adad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589ade50"/>
        <function-ref name="write" scoped="" ref="0x7fb8589ac020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb8589ba670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb8589ba670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589ba9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589bab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb8589b6e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb8589b6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b5210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb8589afad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb8589afad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589afe50"/>
        <function-ref name="write" scoped="" ref="0x7fb8589ae020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb8589bc670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb8589bc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589bc9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589bcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb8589aaad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb8589aaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb8589aae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb8589a9020"/>
        <function-ref name="write" scoped="" ref="0x7fb8589a91b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb8589a9340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb8589a94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb8589cb2f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb8589cb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589cb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb8589c4490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb8589c4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589c4810"/>
        <function-ref name="write" scoped="" ref="0x7fb8589c49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb8589c1480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb8589c1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589c1800"/>
        <function-ref name="write" scoped="" ref="0x7fb8589c1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb8589b8e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb8589b8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b7210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb8589bde50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb8589bde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589bc210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589bc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb8589b7670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb8589b7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b79f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb8589bf670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb8589bf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589bf9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589bfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb8589ca670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb8589ca670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589ca9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb8589bfe50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb8589bfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589be210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589be3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb8589cec30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb8589cec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8589cc020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb8589cc1b0"/>
        <function-ref name="request" scoped="" ref="0x7fb8589cc340"/>
        <function-ref name="granted" scoped="" ref="0x7fb8589cc4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb8589cc660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb8589c5160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb8589c5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb8589c5e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb8589c5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb8589af2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb8589af2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589af670"/>
        <function-ref name="write" scoped="" ref="0x7fb8589af800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb8589b0ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb8589b0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b0e50"/>
        <function-ref name="write" scoped="" ref="0x7fb8589af020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb8589c86b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb8589c86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c8a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb8589b02f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb8589b02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b0670"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb8589ac2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb8589ac2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589ac670"/>
        <function-ref name="write" scoped="" ref="0x7fb8589ac800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb8589bae50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb8589bae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b8210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb8589b5670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb8589b5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b59f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb8589cacc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb8589cacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb8589c99c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb8589c99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb8589bce50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb8589bce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589bb210"/>
        <function-ref name="write" scoped="" ref="0x7fb8589bb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb8589c57b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb8589c57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8589c5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb8589bb670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb8589bb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589bb9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589bbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb8589b2e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb8589b2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589b1610"/>
        <function-ref name="write" scoped="" ref="0x7fb8589b17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb8589a97a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb8589a97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb8589a9b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb8589a9cb0"/>
        <function-ref name="write" scoped="" ref="0x7fb8589a9e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb8589a8020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb8589a81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fb85899ddf0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fb85899ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb85899a1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fb85899a350"/>
        <function-ref name="sfd" scoped="" ref="0x7fb85899a4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb85899a7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb85899a7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb85899ab40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fb858999020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fb858999020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb8589993a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb85899d5c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb85899d5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb85899d940"/>
        <function-ref name="stop" scoped="" ref="0x7fb85899dad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7fb858991380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7fb858991380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858991700"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858991890"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858991a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858991bb0"/>
        <function-ref name="get" scoped="" ref="0x7fb858991d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858990020"/>
        <function-ref name="set" scoped="" ref="0x7fb8589901b0"/>
        <function-ref name="clr" scoped="" ref="0x7fb858990340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fb858989b90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb858989b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb858988020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb8589881b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb858988340"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb8589884d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb858988660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb8589887f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb858988980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb858988b10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb858988ca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb858988e30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb858987020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb8589871b0"/>
        <function-ref name="sync" scoped="" ref="0x7fb858987340"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb8589875d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb858987760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7fb8589729d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7fb8589729d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb858972d50"/>
        <function-ref name="runTask" scoped="" ref="0x7fb858971020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7fb858987d70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7fb858987d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb858985330"/>
        <function-ref name="clear" scoped="" ref="0x7fb858985a60"/>
        <function-ref name="isValid" scoped="" ref="0x7fb858986ba0"/>
        <function-ref name="set" scoped="" ref="0x7fb858983210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7fb8589906b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7fb8589906b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb858990a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858990bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fb858990d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb85898e020"/>
        <function-ref name="get" scoped="" ref="0x7fb85898e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb85898e340"/>
        <function-ref name="set" scoped="" ref="0x7fb85898e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fb85898e660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7fb858982cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858982cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589810a0"/>
        <function-ref name="write" scoped="" ref="0x7fb858981230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7fb858981590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb858981590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858981910"/>
        <function-ref name="write" scoped="" ref="0x7fb858981aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7fb8589806d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb8589806d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858980a50"/>
        <function-ref name="write" scoped="" ref="0x7fb858980be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb85898a330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb85898a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb85898a6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb85898a840"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb85898a9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb85898ab60"/>
        <function-ref name="getPower" scoped="" ref="0x7fb85898acf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb85898ae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7fb858994550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7fb858994550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8589948d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7fb858994a60"/>
        <function-ref name="sfd" scoped="" ref="0x7fb858994bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7fb85898b3a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb85898b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb85898b720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7fb858992020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7fb858992020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fb8589923a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fb858992530"/>
        <function-ref name="toggle" scoped="" ref="0x7fb8589926c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fb858992850"/>
        <function-ref name="get" scoped="" ref="0x7fb8589929e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fb858992b70"/>
        <function-ref name="set" scoped="" ref="0x7fb858992d00"/>
        <function-ref name="clr" scoped="" ref="0x7fb858991020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7fb85897f020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb85897f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85897f3a0"/>
        <function-ref name="write" scoped="" ref="0x7fb85897f530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb858995620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb858995620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb8589959a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb8589891e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589891e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb858989560"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb8589896f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb858989880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb858993020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb858993020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8589933a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7fb85898d6e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7fb85898d6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb85898da60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb85898dbf0"/>
        <function-ref name="request" scoped="" ref="0x7fb85898dd80"/>
        <function-ref name="granted" scoped="" ref="0x7fb85898c020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb85898c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7fb858981e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb858981e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8589801c0"/>
        <function-ref name="write" scoped="" ref="0x7fb858980350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7fb85898c530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb85898c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb85898c8b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb85898ca40"/>
        <function-ref name="write" scoped="" ref="0x7fb85898cbd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb85898cd60"/>
        <function-ref name="readDone" scoped="" ref="0x7fb85898b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7fb85897f8b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb85897f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb85897fe30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7fb8589937c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7fb8589937c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7fb858993b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb85897e150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb85897e150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb85897e4d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb85897e660"/>
        <function-ref name="led1On" scoped="" ref="0x7fb85897e7f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb85897e980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb85897eb10"/>
        <function-ref name="get" scoped="" ref="0x7fb85897eca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb85897ee30"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb85897d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fb85897d020"/>
        <function-ref name="led0On" scoped="" ref="0x7fb85897d1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fb85897d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7fb8589823e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb8589823e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858982760"/>
        <function-ref name="write" scoped="" ref="0x7fb8589828f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7fb858983b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb858983b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858982020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7fb85898ea50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7fb85898ea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7fb85898edd0"/>
        <function-ref name="disable" scoped="" ref="0x7fb85898d020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7fb85898d1b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7fb85898d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7fb85898bad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb85898bad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb85898a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7fb858995ca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7fb858995ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7fb8589940a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb858994230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb858911a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb858911a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb858911df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb858915670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858915670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb8589159f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb858915b80"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb858915d10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb858912020"/>
        <function-ref name="getPower" scoped="" ref="0x7fb8589121b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb858912340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fb858910550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb858910550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb85890fb00"/>
        <function-ref name="clear" scoped="" ref="0x7fb85890e2a0"/>
        <function-ref name="isValid" scoped="" ref="0x7fb85890f3d0"/>
        <function-ref name="set" scoped="" ref="0x7fb85890e9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fb8589110c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8589110c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb858911440"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb8589115d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb858911760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fb858908480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb858908480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb858908800"/>
        <function-ref name="isSet" scoped="" ref="0x7fb858908990"/>
        <function-ref name="cancel" scoped="" ref="0x7fb858908b20"/>
        <function-ref name="set" scoped="" ref="0x7fb858908cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fb85890c660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb85890c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb85890bce0"/>
        <function-ref name="clear" scoped="" ref="0x7fb85890a460"/>
        <function-ref name="isValid" scoped="" ref="0x7fb85890b5b0"/>
        <function-ref name="set" scoped="" ref="0x7fb85890ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb8589126e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb8589126e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb858912a60"/>
        <function-ref name="noAck" scoped="" ref="0x7fb858912bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb858912d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7fb858902020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7fb858902020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7fb8589023a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7fb858907d20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858907d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb8589040e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb858904270"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb858904400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb858904590"/>
        <function-ref name="getPower" scoped="" ref="0x7fb858904720"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb8589048b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fb8588f94a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb8588f94a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8588f9820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb8588f99b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8588f9b40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8588f9cd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb8588f9e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fb858902a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb858902a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb858900020"/>
        <function-ref name="clear" scoped="" ref="0x7fb858900750"/>
        <function-ref name="isValid" scoped="" ref="0x7fb8589018d0"/>
        <function-ref name="set" scoped="" ref="0x7fb858900e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7fb858903640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb858903640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb8589039c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb858903b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb858903ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7fb8588fa8b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7fb8588fa8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8588fac30"/>
        <function-ref name="isSet" scoped="" ref="0x7fb8588fadc0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8588f9020"/>
        <function-ref name="set" scoped="" ref="0x7fb8588f91b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7fb8588f83b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7fb8588f83b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8588f7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7fb8588f76e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7fb8588f76e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8588f63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fb8588feaf0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb8588feaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb8588fc0d0"/>
        <function-ref name="clear" scoped="" ref="0x7fb8588fc800"/>
        <function-ref name="isValid" scoped="" ref="0x7fb8588fd970"/>
        <function-ref name="set" scoped="" ref="0x7fb8588fa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb858904c50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb858904c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb858903020"/>
        <function-ref name="noAck" scoped="" ref="0x7fb8589031b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb858903340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fb8588a6020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7fb8588a6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8588a6c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fb8588a5300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7fb8588a5300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fb8588a3150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fb8588a3ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fb8588a3610"/>
        <function-ref name="overflow" scoped="" ref="0x7fb8588a2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fb8588a0450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7fb8588a0450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fb85889ca20"/>
        <function-ref name="fired" scoped="" ref="0x7fb85889e020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fb85889eda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fb85889e920"/>
        <function-ref name="getdt" scoped="" ref="0x7fb85889b4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fb85889b020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fb85889e4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fb85889f090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fb85889c410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fb85889f560"/>
        <function-ref name="stop" scoped="" ref="0x7fb85889fa30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7fb85888bc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7fb85888bc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85888a210"/>
        <function-ref name="write" scoped="" ref="0x7fb85888a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7fb858894020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7fb858894020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8588943a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7fb85888ec70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7fb85888ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85888d020"/>
        <function-ref name="write" scoped="" ref="0x7fb85888d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7fb858888670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7fb858888670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8588889f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858888b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7fb858881e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7fb858881e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858880210"/>
        <function-ref name="write" scoped="" ref="0x7fb8588803a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7fb858888e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7fb858888e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858887210"/>
        <function-ref name="write" scoped="" ref="0x7fb8588873a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7fb8588752f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7fb8588752f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858875670"/>
        <function-ref name="write" scoped="" ref="0x7fb858875800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7fb8588772f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7fb8588772f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858877670"/>
        <function-ref name="write" scoped="" ref="0x7fb858877800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7fb858893370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7fb858893370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8588936f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7fb85887d670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7fb85887d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85887d9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb85887db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7fb8588782f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7fb8588782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858878670"/>
        <function-ref name="write" scoped="" ref="0x7fb858878800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7fb85888dc60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7fb85888dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85888c020"/>
        <function-ref name="write" scoped="" ref="0x7fb85888c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7fb85888cc60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7fb85888cc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85888b020"/>
        <function-ref name="write" scoped="" ref="0x7fb85888b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7fb858883670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7fb858883670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8588839f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858883b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7fb858885e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7fb858885e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858884210"/>
        <function-ref name="write" scoped="" ref="0x7fb8588843a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7fb858887670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7fb858887670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8588879f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858887b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7fb858897970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7fb858897970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7fb858897cf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7fb858897e80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7fb858896030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7fb858892d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7fb858892d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8588910a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7fb858891370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7fb858891370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8588917f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7fb85887ca70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7fb85887ca70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85887cdf0"/>
        <function-ref name="write" scoped="" ref="0x7fb85887a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7fb858891ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7fb858891ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858891e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7fb858878ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7fb858878ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858878e50"/>
        <function-ref name="write" scoped="" ref="0x7fb858877020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7fb858892060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7fb858892060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8588923e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7fb85887ee50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7fb85887ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85887d210"/>
        <function-ref name="write" scoped="" ref="0x7fb85887d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7fb85888c480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7fb85888c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85888c800"/>
        <function-ref name="write" scoped="" ref="0x7fb85888c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7fb85888d480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7fb85888d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85888d800"/>
        <function-ref name="write" scoped="" ref="0x7fb85888d990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7fb858896950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7fb858896950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858896cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7fb85887fe50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7fb85887fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85887e210"/>
        <function-ref name="write" scoped="" ref="0x7fb85887e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7fb858880670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7fb858880670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8588809f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858880b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7fb85887e670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7fb85887e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85887e9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb85887eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7fb858876ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7fb858876ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858876e50"/>
        <function-ref name="write" scoped="" ref="0x7fb858875020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7fb858877ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7fb858877ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858877e50"/>
        <function-ref name="write" scoped="" ref="0x7fb858876020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7fb858884670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7fb858884670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8588849f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858884b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7fb858880e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7fb858880e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85887f210"/>
        <function-ref name="write" scoped="" ref="0x7fb85887f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7fb858879ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7fb858879ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858879e50"/>
        <function-ref name="write" scoped="" ref="0x7fb858878020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7fb858886670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7fb858886670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8588869f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858886b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7fb858875ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7fb858875ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858875e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858873020"/>
        <function-ref name="write" scoped="" ref="0x7fb8588731b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858873340"/>
        <function-ref name="readDone" scoped="" ref="0x7fb8588734d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7fb858896300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7fb858896300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858896680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7fb85888e490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7fb85888e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85888e810"/>
        <function-ref name="write" scoped="" ref="0x7fb85888e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7fb85888b480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7fb85888b480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85888b800"/>
        <function-ref name="write" scoped="" ref="0x7fb85888b990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7fb858883e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7fb858883e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858881210"/>
        <function-ref name="write" scoped="" ref="0x7fb8588813a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7fb858887e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7fb858887e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858886210"/>
        <function-ref name="write" scoped="" ref="0x7fb8588863a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7fb858881670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7fb858881670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8588819f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858881b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7fb85888a670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7fb85888a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85888a9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb85888ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7fb858894670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7fb858894670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8588949f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7fb85888ae50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7fb85888ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858888210"/>
        <function-ref name="write" scoped="" ref="0x7fb8588883a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb858898d00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb858898d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8588970a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858897230"/>
        <function-ref name="request" scoped="" ref="0x7fb8588973c0"/>
        <function-ref name="granted" scoped="" ref="0x7fb858897550"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb8588976e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7fb858890160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7fb858890160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8588904e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7fb858890e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7fb858890e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb85888e1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7fb8588792f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7fb8588792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858879670"/>
        <function-ref name="write" scoped="" ref="0x7fb858879800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7fb85887aad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7fb85887aad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85887ae50"/>
        <function-ref name="write" scoped="" ref="0x7fb858879020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7fb8588926b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7fb8588926b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858892a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7fb85887a2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7fb85887a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85887a670"/>
        <function-ref name="write" scoped="" ref="0x7fb85887a800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7fb8588762f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7fb8588762f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858876670"/>
        <function-ref name="write" scoped="" ref="0x7fb858876800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7fb858884e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7fb858884e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858883210"/>
        <function-ref name="write" scoped="" ref="0x7fb8588833a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7fb85887f670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7fb85887f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85887f9f0"/>
        <function-ref name="write" scoped="" ref="0x7fb85887fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7fb858894cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7fb858894cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb8588930a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7fb8588939c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7fb8588939c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858893d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7fb858886e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7fb858886e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb858885210"/>
        <function-ref name="write" scoped="" ref="0x7fb8588853a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7fb8588907b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7fb8588907b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7fb858890b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7fb858885670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7fb858885670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb8588859f0"/>
        <function-ref name="write" scoped="" ref="0x7fb858885b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7fb85887de50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7fb85887de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7fb85887c610"/>
        <function-ref name="write" scoped="" ref="0x7fb85887c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7fb8588737a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7fb8588737a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7fb858873b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7fb858873cb0"/>
        <function-ref name="write" scoped="" ref="0x7fb858873e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7fb858872020"/>
        <function-ref name="readDone" scoped="" ref="0x7fb8588721b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fb85884aa20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb85884aa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb85884ada0"/>
        <function-ref name="rand32" scoped="" ref="0x7fb858847020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fb858848920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fb858848920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb85884a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb85884e990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb85884e990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb85884ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7fb858843a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb858843a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb858843da0"/>
        <function-ref name="rand32" scoped="" ref="0x7fb858842020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7fb858844940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7fb858844940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb858843560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb858844080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb858844080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb858844400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb85884caa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb85884caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb85884ce20"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb858845020"/>
        <function-ref name="isState" scoped="" ref="0x7fb8588451b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb858845340"/>
        <function-ref name="requestState" scoped="" ref="0x7fb8588454d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb858845660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb858828020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb858828020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8588283a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb858828530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8588286c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb858828850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8588289e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb85882d220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb85882d220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb85882d5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85882d730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85882d8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb85882da50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb85882dbe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb858823e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb858823e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb858822210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8588223a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb858822530"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8588226c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb858822850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb858827a10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb858827a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb858827d90"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb858823020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8588231b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb858823340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8588234d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7fb8588218f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7fb8588218f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7fb858821c70"/>
        <function-ref name="rand32" scoped="" ref="0x7fb858821e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb858823750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb858823750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb858823ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb858820170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb858820170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb8588204f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb858820680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb858820810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7fb858822ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb858822ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb858822e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb858821020"/>
        <function-ref name="isState" scoped="" ref="0x7fb8588211b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb858821340"/>
        <function-ref name="requestState" scoped="" ref="0x7fb8588214d0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb858821660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb858825690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb858825690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb858825a10"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb858825ba0"/>
        <function-ref name="isState" scoped="" ref="0x7fb858825d30"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb85880f020"/>
        <function-ref name="requestState" scoped="" ref="0x7fb85880f1b0"/>
        <function-ref name="forceState" scoped="" ref="0x7fb85880f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb858809950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb858809950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb858809cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb85880caa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb85880caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb85880ce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fb858809200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb858809200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb858809580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb8588043f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb8588043f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb858804770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb858805b70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb858805b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb858804020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb858808e30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb858808e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8588051e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb858804a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb858804a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb858804df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb858803020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb8588031b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7fb858805570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7fb858805570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8588058f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb8587d5020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb8587d5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8587d53a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb8587d56b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb8587d56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8587d5a30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8587d5bc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8587d5d50"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8587d4020"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8587d41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb8587da8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb8587da8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8587dac60"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8587dadf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8587d8020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8587d81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8587d8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fb8587d8c90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fb8587d8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8587d70a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8587d7230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8587d73c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8587d7550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8587d76e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb8587d85e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb8587d85e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8587d8960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb8587dbbe0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb8587dbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8587da020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb8587da1b0"/>
        <function-ref name="request" scoped="" ref="0x7fb8587da340"/>
        <function-ref name="granted" scoped="" ref="0x7fb8587da4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb8587da660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fb8587d7a50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fb8587d7a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8587d7dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fb8587d6170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb8587d6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8587d64f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb8587d6680"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8587d6810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8587d69a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb8587d6b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb8587cbd70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb8587cbd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8587ca180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8587ca310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8587ca4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8587ca630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8587ca7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb8587cab10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb8587cab10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8587c9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7fb85879cdb0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7fb85879cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb85879b180"/>
        <function-ref name="runTask" scoped="" ref="0x7fb85879b310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb8587c92f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb8587c92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb8587c9670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb8587c9800"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb8587c9990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb8587c9b20"/>
        <function-ref name="getPower" scoped="" ref="0x7fb8587c9cb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb8587c9e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7fb8587cea20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7fb8587cea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8587ceda0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8587cd020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8587cd1b0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8587cd340"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8587cd4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7fb8587c8b70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7fb8587c8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb8587c7020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb8587c71b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb8587c7340"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb8587c74d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb8587c8170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb8587c8170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb8587c84f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb8587c8680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb8587c8810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7fb8587ce370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7fb8587ce370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8587ce6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7fb8587d07b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7fb8587d07b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb8587d0b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb8587d0cc0"/>
        <function-ref name="request" scoped="" ref="0x7fb8587d0e50"/>
        <function-ref name="granted" scoped="" ref="0x7fb8587cf020"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb8587cf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7fb8587cf4d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7fb8587cf4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8587cf850"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8587cf9e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8587cfb70"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8587cfd00"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8587ce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7fb8587cd840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7fb8587cd840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8587cdbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7fb8587cb020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7fb8587cb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8587cb3a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb8587cb530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8587cb6c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8587cb850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb8587cb9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fb85877cdd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7fb85877cdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fb85877b180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7fb85877b410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7fb85877b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7fb85877b790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7fb85877b920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7fb85877bab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7fb85877bc40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb858770b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb858770b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb85876e020"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb85876e1b0"/>
        <function-ref name="start" scoped="" ref="0x7fb85876e340"/>
        <function-ref name="stop" scoped="" ref="0x7fb85876e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb85876d860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb85876d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb85876dbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85876dd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85876c020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb85876c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb85876c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb85876c690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb85876c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb85876ca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb858774ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb858774ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8587710a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb858771230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8587713c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb858771550"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8587716e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb858770080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb858770080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb858770400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb858770590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb858770720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb8587708b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7fb85876e800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7fb85876e800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb85876eb80"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb85876ed10"/>
        <function-ref name="isState" scoped="" ref="0x7fb85876d020"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb85876d1b0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb85876d340"/>
        <function-ref name="forceState" scoped="" ref="0x7fb85876d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7fb85876cd90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7fb85876cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb85876b180"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb85876b310"/>
        <function-ref name="start" scoped="" ref="0x7fb85876b4a0"/>
        <function-ref name="stop" scoped="" ref="0x7fb85876b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb858771980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb858771980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb858771d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb8587682d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb8587682d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb858768650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb8587687e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb858768970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb858768b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7fb85876a580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7fb85876a580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7fb85876a900"/>
        <function-ref name="toIdle" scoped="" ref="0x7fb85876aa90"/>
        <function-ref name="isState" scoped="" ref="0x7fb85876ac20"/>
        <function-ref name="isIdle" scoped="" ref="0x7fb85876adb0"/>
        <function-ref name="requestState" scoped="" ref="0x7fb858769020"/>
        <function-ref name="forceState" scoped="" ref="0x7fb8587691b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb85875bd70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb85875bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb85875a180"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85875a310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85875a4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb85875a630"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb85875a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb85875e350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb85875e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb85875e6d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85875e860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85875e9f0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb85875eb80"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb85875ed10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb85875b020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb85875b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb85875b3a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb85875b530"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb85875b6c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb85875b850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb85875b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7fb8587561c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb8587561c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb858756540"/>
        <function-ref name="noAck" scoped="" ref="0x7fb8587566d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb858756860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7fb858759410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7fb858759410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7fb858759790"/>
        <function-ref name="setRetries" scoped="" ref="0x7fb858759920"/>
        <function-ref name="getRetries" scoped="" ref="0x7fb858759ab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7fb858759c40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7fb858759dd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7fb858736690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7fb858736690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb858736a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7fb858737860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7fb858737860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb858737be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb858737d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb858736020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8587361b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb858736340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7fb858734610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7fb858734610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7fb858734990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7fb858734b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7fb858734cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7fb858734e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7fb858733020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7fb8587331b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7fb858733340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7fb8587334d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7fb858733660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7fb8587337f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7fb858733980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7fb858733b10"/>
        <function-ref name="sync" scoped="" ref="0x7fb858733ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7fb858732020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7fb8587321b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7fb8587398b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7fb8587398b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb858739c30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb858739dc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb858737020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb8587371b0"/>
        <function-ref name="setCca" scoped="" ref="0x7fb858737340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb8587374d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7fb85873ace0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7fb85873ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7fb8587390a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7fb8587311f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7fb8587311f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7fb858731570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7fb858731700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7fb858731890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7fb858731a20"/>
        <function-ref name="setCca" scoped="" ref="0x7fb858731bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7fb858731d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb85873ba80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb85873ba80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb85873be00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb85873a020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85873a1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85873a340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb85873a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb85873e020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb85873e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb85873e3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85873e530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85873e6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb85873e850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb85873e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fb85873ddf0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fb85873ddf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb85873c1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7fb858736ce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7fb858736ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7fb8587350a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7fb858735230"/>
        <function-ref name="getRssi" scoped="" ref="0x7fb8587353c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7fb858735550"/>
        <function-ref name="getPower" scoped="" ref="0x7fb8587356e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7fb858735870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7fb8587324d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7fb8587324d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7fb858732950"/>
        <function-ref name="changed" scoped="" ref="0x7fb858732ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7fb858732c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7fb858732e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7fb858735b70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7fb858735b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7fb858734020"/>
        <function-ref name="getHeader" scoped="" ref="0x7fb8587341b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7fb858734340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb85873d210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb85873d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb85873d590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fb858730d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7fb858730d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fb85872f0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fb85872f270"/>
        <function-ref name="led1On" scoped="" ref="0x7fb85872f400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fb85872f590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fb85872f720"/>
        <function-ref name="get" scoped="" ref="0x7fb85872f8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fb85872fa40"/>
        <function-ref name="led2Off" scoped="" ref="0x7fb85872e1b0"/>
        <function-ref name="set" scoped="" ref="0x7fb85872fbd0"/>
        <function-ref name="led0On" scoped="" ref="0x7fb85872fd60"/>
        <function-ref name="led2On" scoped="" ref="0x7fb85872e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb85873c470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb85873c470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb85873c7f0"/>
        <function-ref name="source" scoped="" ref="0x7fb85873c980"/>
        <function-ref name="address" scoped="" ref="0x7fb85873cb10"/>
        <function-ref name="destination" scoped="" ref="0x7fb85873cca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb85873ce30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb85873b020"/>
        <function-ref name="type" scoped="" ref="0x7fb85873b1b0"/>
        <function-ref name="setType" scoped="" ref="0x7fb85873b340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb85873b4d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb85873b660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb85873b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7fb8587300f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7fb8587300f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7fb858730470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7fb858730600"/>
        <function-ref name="request" scoped="" ref="0x7fb858730790"/>
        <function-ref name="granted" scoped="" ref="0x7fb858730920"/>
        <function-ref name="isOwner" scoped="" ref="0x7fb858730ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7fb8586aa360" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7fb8586aa360"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7fb8586aa6e0"/>
        <function-ref name="stopDone" scoped="" ref="0x7fb8586aa870"/>
        <function-ref name="start" scoped="" ref="0x7fb8586aaa00"/>
        <function-ref name="stop" scoped="" ref="0x7fb8586aab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb8586a73f0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb8586a73f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8586a7770"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8586a7900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8586a7a90"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8586a7c20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8586a7db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7fb8586a51d0" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7fb8586a51d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8586a5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb8586a57e0" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb8586a57e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8586a5b60"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb8586a5cf0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8586a5e80"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8586a4030"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb8586a41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7fb8586a1a20" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7fb8586a1a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4fe30"/>
            <typename><typedef-ref name="T32khz" ref="0x7fb859b4e200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb85869f020"/>
        <function-ref name="clear" scoped="" ref="0x7fb85869f750"/>
        <function-ref name="isValid" scoped="" ref="0x7fb8586a0890"/>
        <function-ref name="set" scoped="" ref="0x7fb85869fe80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7fb85869a890" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7fb85869a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7fb85869ac10"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7fb85869ada0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7fb858698020"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7fb8586981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb8586a65c0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb8586a65c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8586a6940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7fb8586a3b20" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7fb8586a3b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb8586a1020"/>
        <function-ref name="noAck" scoped="" ref="0x7fb8586a11b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb8586a1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb8586a4470" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb8586a4470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb8586a47f0"/>
        <function-ref name="source" scoped="" ref="0x7fb8586a4980"/>
        <function-ref name="address" scoped="" ref="0x7fb8586a4b10"/>
        <function-ref name="destination" scoped="" ref="0x7fb8586a4ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb8586a4e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb8586a3020"/>
        <function-ref name="type" scoped="" ref="0x7fb8586a31b0"/>
        <function-ref name="setType" scoped="" ref="0x7fb8586a3340"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb8586a34d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb8586a3660"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb8586a37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7fb85869eaf0" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7fb85869eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7fb859b4f680"/>
            <typename><typedef-ref name="TMilli" ref="0x7fb859b4f9f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7fb85869b0d0"/>
        <function-ref name="clear" scoped="" ref="0x7fb85869b800"/>
        <function-ref name="isValid" scoped="" ref="0x7fb85869c970"/>
        <function-ref name="set" scoped="" ref="0x7fb85869a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb858605020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb858605020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb8586053a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb858605530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8586056c0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb858605850"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb8586059e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb858605c30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb858605c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb858604020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb8586041b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb858604340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8586044d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb858604660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb8586048b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb8586048b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb858604c30"/>
        <function-ref name="source" scoped="" ref="0x7fb858604dc0"/>
        <function-ref name="address" scoped="" ref="0x7fb858603020"/>
        <function-ref name="destination" scoped="" ref="0x7fb8586031b0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb858603340"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb8586034d0"/>
        <function-ref name="type" scoped="" ref="0x7fb858603660"/>
        <function-ref name="setType" scoped="" ref="0x7fb8586037f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb858603980"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb858603b10"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb858603ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb858602020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb858602020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb8586023a0"/>
        <function-ref name="noAck" scoped="" ref="0x7fb858602530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb8586026c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb857cb7e60" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb857cb7e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb857cb5210"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb857cb53a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb857cb5530"/>
        <function-ref name="cancel" scoped="" ref="0x7fb857cb56c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb857cb5850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb857cb5aa0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb857cb5aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb857cb5e20"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb857cb4020"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb857cb41b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb857cb4340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb857cb44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb857cb4720" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb857cb4720"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb857cb4aa0"/>
        <function-ref name="source" scoped="" ref="0x7fb857cb4c30"/>
        <function-ref name="address" scoped="" ref="0x7fb857cb4dc0"/>
        <function-ref name="destination" scoped="" ref="0x7fb857cb3020"/>
        <function-ref name="setSource" scoped="" ref="0x7fb857cb31b0"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb857cb3340"/>
        <function-ref name="type" scoped="" ref="0x7fb857cb34d0"/>
        <function-ref name="setType" scoped="" ref="0x7fb857cb3660"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb857cb37f0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb857cb3980"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb857cb3b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7fb857cb3da0" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7fb857cb3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7fb857cb2180"/>
        <function-ref name="noAck" scoped="" ref="0x7fb857cb2310"/>
        <function-ref name="wasAcked" scoped="" ref="0x7fb857cb24a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7fb857ca97f0" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb857ca97f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb857ca9b70"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb857ca9d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb857ca8020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb857ca81b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb857ca8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7fb857ca85f0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb857ca85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb857ca8970"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb857ca8b00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb857ca8c90"/>
        <function-ref name="cancel" scoped="" ref="0x7fb857ca8e20"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb857ca7020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fb857ca7270" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb857ca7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb857ca75f0"/>
        <function-ref name="source" scoped="" ref="0x7fb857ca7780"/>
        <function-ref name="address" scoped="" ref="0x7fb857ca7910"/>
        <function-ref name="destination" scoped="" ref="0x7fb857ca7aa0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb857ca7c30"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb857ca7dc0"/>
        <function-ref name="type" scoped="" ref="0x7fb857ca6020"/>
        <function-ref name="setType" scoped="" ref="0x7fb857ca61b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb857ca6340"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb857ca64d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb857ca6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb85866c930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb85866c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb85866ccb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85866ce40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb858669020"/>
        <function-ref name="cancel" scoped="" ref="0x7fb8586691b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb858669340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7fb85861a400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7fb85861a400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb85861a7a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85861a930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85861aac0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb85861ac50"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb85861ade0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7fb85861cdf0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7fb85861cdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7fb85861b1c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb85861b350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb85861b4e0"/>
        <function-ref name="cancel" scoped="" ref="0x7fb85861b670"/>
        <function-ref name="sendDone" scoped="" ref="0x7fb85861b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7fb858617720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb858617720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb858617aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb858617c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb858617dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb858616020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb8586161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7fb85861bb80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7fb85861bb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7fb85861a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7fb858616480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7fb858616480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb858616800"/>
        <function-ref name="runTask" scoped="" ref="0x7fb858616990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7fb858616c60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7fb858616c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fb858615020"/>
        <function-ref name="runTask" scoped="" ref="0x7fb8586151b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7fb858618060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb858618060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb8586183e0"/>
        <function-ref name="source" scoped="" ref="0x7fb858618570"/>
        <function-ref name="address" scoped="" ref="0x7fb858618700"/>
        <function-ref name="destination" scoped="" ref="0x7fb858618890"/>
        <function-ref name="setSource" scoped="" ref="0x7fb858618a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb858618bb0"/>
        <function-ref name="type" scoped="" ref="0x7fb858618d40"/>
        <function-ref name="setType" scoped="" ref="0x7fb858617020"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb8586171b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb858617340"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb8586174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7fb8585f8020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7fb8585f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7fb8585f83a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7fb8585f8530"/>
        <function-ref name="getPayload" scoped="" ref="0x7fb8585f86c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7fb8585f8850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7fb8585f89e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7fb8585fe910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7fb8585fe910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7fb8585fec90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7fb8585f8c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7fb8585f8c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7fb8585f7020"/>
        <function-ref name="source" scoped="" ref="0x7fb8585f71b0"/>
        <function-ref name="address" scoped="" ref="0x7fb8585f7340"/>
        <function-ref name="destination" scoped="" ref="0x7fb8585f74d0"/>
        <function-ref name="setSource" scoped="" ref="0x7fb8585f7660"/>
        <function-ref name="setDestination" scoped="" ref="0x7fb8585f77f0"/>
        <function-ref name="type" scoped="" ref="0x7fb8585f7980"/>
        <function-ref name="setType" scoped="" ref="0x7fb8585f7b10"/>
        <function-ref name="isForMe" scoped="" ref="0x7fb8585f7ca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7fb8585f7e30"/>
        <function-ref name="localGroup" scoped="" ref="0x7fb8585f6020"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fb859b44ce0" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fb859b458d0" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7fb859b3ad50" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7fb859b36c00" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7fb859b36940" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7fb859b3b030" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7fb859b3d870" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7fb859b39b40" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fb859b39550" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fb859b398b0" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7fb859b36020" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7fb859b38cd0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7fb859b385a0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7fb859b38320" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7fb859b3a5b0" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7fb859b3d0e0" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7fb859b3bdd0" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7fb859b3b7e0" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7fb859b3bb40" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7fb859af8b40" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7fb859afbde0" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7fb859af8420" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7fb859afb700" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7fb859afa5a0" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7fb859afe8f0" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7fb859afb020" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7fb859afacc0" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fb859c687e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fb859f30700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7fb859b8ea80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7fb859b8c1f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7fb859b8e2b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fb859d06020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fb85a6a6e80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fb859feee20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fb859fee610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fb859fe2770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fb859fe0020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fb859a94020" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fb859a947d0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fb859a93020" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fb859a92020" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fb859a907d0" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb859a8f020" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fb859a937b0" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb859a8fb90" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fb859a8f910" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fb859a96850" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fb859a92800" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fb859a90020" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fb859a858a0" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fb859a84020" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fb859a87a40" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fb859a84e80" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb859a85190" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fb859a84740" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb859a8ac40" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fb859a87350" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fb859a5a880" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fb859a59020" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7fb859a55b10" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb859a55890" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7fb859a535d0" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fb859a5c120" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fb859a58020" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7fb859a53d60" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7fb859a52860" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb859a525e0" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fb859a59760" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb859a5a0e0" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7fb859a50190" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7fb859a57770" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7fb859a54e30" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7fb859a5c8c0" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7fb859a543e0" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb859a5d270" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7fb859a587a0" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7fb859a55020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7fb859a57020" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fb859a5d9a0" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7fb8597227f0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb859722570" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7fb859721cd0" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb859721a50" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fb859729b60" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb859721070" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7fb85974c6c0" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85974c440" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7fb85974a750" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85974a4d0" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fb859749ab0" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb8597494b0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb8597497e0" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fb859747b60" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7fb859748bf0" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859748630" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb859748960" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb859731630" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb859745c80" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fb859731060" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb859731390" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fb85972a020" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85972b890" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb85972bbc0" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fb85972b020" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb85972e9c0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85972e740" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb85972c020" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85972d900" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fb85972dc50" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7fb85971e810" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb85971e230" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7fb85971e580" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7fb85971ae20" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb85971a820" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7fb85971ab90" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7fb85971c350" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7fb85a69a110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb85971c0d0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7fb85971bd30" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb85971bab0" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7fb85971f9c0" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb85971f740" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7fb85971ce80" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb85971cc00" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb8597b4350" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb8597b4350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fb8597ad1f0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb8597b2a60" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fb8597af820" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb8597af250" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fb8597af590" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fb8597b0a60" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fb8597ab270" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fb8597ad980" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fb8597b0270" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fb8597b3020" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb8597b4c40" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fb8597ae820" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb8597ae250" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fb8597ae590" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fb8597b3ae0" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb8597b3860" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb8597b2350" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fb8597260d0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
              <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859727700" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7fb859727a50" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb859727d80" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7fb859737560" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fb85975e590"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb8597372e0" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7fb859740110" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb859741e30" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7fb859743510" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7fb859741020" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb859743d50" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7fb85973db10" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb85973d530" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fb85973d880" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7fb85973f600" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb85973f020" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7fb85973f370" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7fb85973a040" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb85973cda0" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7fb8597383a0" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb85973adc0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7fb859738110" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7fb85975e1b0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7fb85973bda0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb85973bb20" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7fb859735a30" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb85975e590"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7fb859735450" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7fb8597357a0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb85975e590"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7fb859733890" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fb85975e590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb8596d1350" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb8596d1350"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fb8596d1c70" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb8596cdc70" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb8596cdc70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb8596ca020" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb8596ca020"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fb8596c7c50" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb8596ca020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb8596c9ba0" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fb8596c72b0" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb8596ca020"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb8596ca020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fb8596c8bd0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb8596ca020"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fb8596c7020" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb8596ca020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fb8596c83b0" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fb8596c5480" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb8596ca020"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fb8596cab80" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb8596ca020"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb8596ca900" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb8596ca020"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb8596c93e0" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fb8596a4270" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7fb8596a4bf0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb8596a4970" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7fb8596a3610" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fb8596a3390" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7fb8596a2020" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7fb8596a3d60" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb8596a2710" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fb8596b2810" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fb8596b02a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7fb8596b0020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fb8596b1020" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fb8596b8a80" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fb8596b1760" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb8596b59b0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fb8596b2120" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb8596b5270" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fb8596b40e0" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7fb8596b49f0" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb8596b4770" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7fb8596b0cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7fb8596b0a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7fb8596a98f0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fb8596a9320" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7fb8596a9660" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7fb8596ad7d0" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb859aef550"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb859aee020"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7fb8596a82b0" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7fb8596a61f0" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7fb8596aaa30" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7fb8596a89f0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7fb8596ab020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7fb8596ab7b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7fb8596aa2a0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb859aef550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb859aee020"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb8596aa020" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fb859aef550"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7fb859aee020"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7fb859693d60" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7fb85968d400" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7fb85968d180" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fb85968c020" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb85968dd10" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb85968f9a0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb85968f0e0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7fb859690740" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7fb8596904c0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb8596621f0" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb859513e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb859513e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb85950e070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb85950e070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fb85950e990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb85950e070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fb85950cad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fb85950c270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fb85950b270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7fb85944ae80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fb85a69a930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7fb85944ac00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7fb85a69a930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7fb85938b980" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85938b700" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7fb85938ec30" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85938e9b0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7fb85938f350" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fb85938f0d0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7fb859392800" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7fb859392580" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7fb85938fd80" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7fb85938fb00" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7fb85938cb10" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85938c890" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7fb8593792b0" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7fb85938ac50" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7fb859379020" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7fb859386680" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859386060" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7fb8593863f0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7fb859385850" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb8593855d0" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7fb859387810" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7fb859394e10" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7fb859394b90" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7fb859398120" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85939be70" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7fb859397350" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb8593970d0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7fb859395510" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859395290" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7fb85937db30" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85937d8b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7fb859382b90" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859382570" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7fb859382900" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7fb859381ad0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859381850" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7fb859381020" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859380960" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7fb859380cf0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7fb85937cb70" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85937c8f0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7fb859393780" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859393500" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb85936d2b0" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859374c40" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb85936d020" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7fb859369890" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859369290" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb8593695c0" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7fb8593689b0" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb85936b5f0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85936b370" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb85936aac0" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85936a4e0" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fb85936a830" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fb859370120" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7fb859372120" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7fb859373770" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fb859372910" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fb859370b70" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb8593463a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb85934adc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7fb859346110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb8593456a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7fb859342e70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fb859342060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fb8593428a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb859342bd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb859344840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7fb859344260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7fb8593445b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7fb859346e30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7fb859346bb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7fb85933e0e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7fb859347870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7fb859351a40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fb859349270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7fb8593382e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859338020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7fb85933a710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7fb859799950"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7fb859796390"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb85933a410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7fb859337620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7fb859796e50"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7fb8597947e0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb859337320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7fb85934e6e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7fb85934c840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7fb85934c070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7fb859354e20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7fb859350e80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7fb85934d020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7fb85934d840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7fb8593506c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7fb859332d00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7fb859333350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7fb859332530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7fb8593322b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7fb859333ac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7fb859334020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fb85933cc90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7fb859334ad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7fb859334850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7fb8592d7870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7fb8592d7290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7fb8592d75e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7fb8592d81f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7fb8592d9880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7fb8592d9210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7fb8592d95f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7fb8592dfc10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7fb8592df990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7fb8592d8a70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7fb8592db730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fb8592db4b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7fb8592ded30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7fb8592deab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7fb8592d5ae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7fb8592da9c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7fb8592da740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7fb8592d52b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7fb8592dd4d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fb8593ae480"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fb8593aebe0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7fb8592ddcc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7fb8592df1f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7fb8592de390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7fb8592da020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7fb8592d34a0" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb8592d34a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7fb8592d3d60" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb8592d0ac0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb8592d34a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7fb8592d0510" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7fb8592d0830" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7fb8592d34a0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fb8592ac520" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb85979da10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb8592ac2a0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb8592ab030" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb85979da10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb8592acd80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7fb8592c6c50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7fb8593ae480"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7fb8593aebe0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7fb8592b40e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7fb8592b3070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7fb8592b48c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7fb85975e590"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7fb8592b6860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb85975e590"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7fb8592b6280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7fb85975e590"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7fb8592b65d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7fb85975e970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7fb8592a4120" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb85979da10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fb8592b1840" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb85979da10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fb8592ba9b0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fb8592b1250" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb8592b15a0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb8592ae020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb85979da10"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7fb8592b0150" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7fb8592b09c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb8592b0d10" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb8592b87e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb8592b8020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7fb8592b9720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7fb8592bcdb0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7fb859192190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb859191350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7fb859192b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb8591928b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7fb8591958f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7fb859168800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fb859165270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7fb859168070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7fb8591669a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7fb859166720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7fb859166020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7fb85916c870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7fb859167810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7fb859167030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7fb859013810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7fb8590120e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7fb859012920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7fb858fea420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858fece10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb858fea190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7fb858fe5700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858fe6d90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb858fe5110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb858fe5460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb858fe6020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb85979da10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858fe8970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb858fe8cc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7fb858fec020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7fb85979da10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858fed9d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb858fedd20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7fb858fe9b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858fe9250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7fb858fe95a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb858fe98f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7fb858fcba40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fb858fcb0d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fb858fcb460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb858fcb7a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7fb858fc7020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7fb858fca2a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7fb858fca630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb858fca970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7fb858fcace0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
              <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7fb858fcd8f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7fb858fcd670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7fb858eedb70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fb858eea4e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7fb858ee9aa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb858f1e2b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb858f20e00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7fb858ee86f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858ee8470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7fb858ee6b30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858ee68b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7fb858ee6020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb858ee55f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858ee5370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7fb858eda020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7fb858edb750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7fb858ed3740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858ed34c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7fb858ed6cd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7fb858eae7c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7fb858eba2d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7fb858ec6020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb858f3b020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb858f3b860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb858ecacf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb858f3b020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb858f3b860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7fb858ebc3b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7fb858ec4530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb858f36020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb858f36860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb858ec42b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb858f36020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb858f36860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7fb858eb49e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7fb858eb0020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7fb858ec5a90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb858f39ec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb858f38680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7fb858ec4d20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb858f36020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7fb858f36860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7fb858ec0b90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7fb858ec0910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7fb858ec01f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7fb858eb42b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7fb858ec52a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb858f39ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb858f38680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fb858ec5020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb858f39ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7fb858f38680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7fb858ec1020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7fb858eb2190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7fb858ec1a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7fb858ec1780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7fb858ebe480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7fb858ebec00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7fb858eb5420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7fb858eb7190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7fb858ebb350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7fb858eb5b60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7fb858ebaab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7fb858eb28b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7fb858ebf390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7fb858f41d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7fb858f3d4d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7fb858eb1070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7fb858eae020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7fb858ec3700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7fb858ec3480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7fb858ead2a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858ead020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7fb858ec6800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7fb858f3b020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7fb858f3b860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7fb858ebcb20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7fb858eb9270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7fb858eb6ba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb858f0bb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb858f0b730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb858eb6920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7fb858f0bb50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb858f0b730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7fb858eb7ca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb858f1e2b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb858f20e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb858eb7a20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7fb858f1e2b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7fb858f20e00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7fb858eadac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7fb858eb1860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7fb858ebfba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7fb858eb0780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7fb858eb99e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7fb858ebbb30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7fb858e46020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7fb858e209d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7fb858e31020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7fb858e26620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb858e263a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7fb858e3a5b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7fb858e24c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7fb858e2b5e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7fb858e33070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7fb858e30020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7fb858e34020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7fb858e35d30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7fb858e374b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7fb858e2e020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7fb858e25550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7fb858e20270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7fb858e27c30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7fb858e1b350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7fb858e179d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7fb858e39420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7fb858e2f740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7fb858e2c1f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7fb858e348e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7fb858e3c350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7fb858e27460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7fb858e271e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7fb858e3fc00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7fb858e244d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7fb858e1f190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7fb858e19b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7fb858e17270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7fb858e22b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7fb858e1f8c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7fb858e26db0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7fb858e1c390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7fb858e39b40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7fb858e2a7e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7fb858e1d7b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7fb858e21ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7fb858e2cde0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7fb858e2cb60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7fb858e182d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7fb858e29a60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7fb858e22420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7fb858e3ce10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fb858ef74a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb858ef7080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7fb858e3cb90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7fb858ef74a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7fb858ef7080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7fb858e2f020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7fb858e38cb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb858e38a30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7fb858e2e980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7fb858e2e700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7fb858e1cb60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7fb858e35620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7fb858e38350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7fb858e292a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7fb858e29020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7fb85a699520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7fb858e3ace0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7fb858e1d020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7fb858e21350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7fb858e25cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7fb858e2a020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7fb858e2bd30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7fb858e30740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7fb858e337b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7fb858e18a40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7fb858e37e30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7fb858e37bb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7fb858e1bb10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7fb858e31750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7fb858e19350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7fb858d76020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7fb858d76880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7fb858d3ddc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7fb858d3b020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7fb858d3d530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7fb858d3c6d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7fb858d3b950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7fb858d39b20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7fb858d2e4c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb858d37490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fb858d2e240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb858d37490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7fb858d31420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7fb858d2f020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb858d37490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fb858d31ca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7fb858d37490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7fb858d2f930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7fb858d37490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fb858b245e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7fb858b24360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7fb858b11b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7fb858b111c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7fb858b11530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb858b11860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7fb858b10880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7fb858b102c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7fb858b105f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fb858af7530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb858af7530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb858af7770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb858af7770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7fb858af62e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb858af7770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fb858af6060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb858af7770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7fb858a93580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7fb858a7faf0" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fb858a7faf0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fb858a7fd30" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb858a7fd30"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7fb858a7abc0" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb858a7fd30"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb858a7a940" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7fb858a79d80" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb858a79b00" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7fb858a7c920" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb858a7c6a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb858a7b0c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb858a7fd30"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb858a77a80" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7fb858a77de0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fb858a7fd30"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7fb858a5b9e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7fb858a5b020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7fb858a5b750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7fb858a5c7f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7fb858a5c020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7fb858a5fd30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7fb85a699920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7fb858a705f0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fb85a699160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb858a70370" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7fb858a725f0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb858a72370" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7fb858a6e5f0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb858a6e370" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fb858a6f5f0" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7fb858a6f370" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7fb85974e5e0"/>
                <typename><typedef-ref name="message_t" ref="0x7fb85974dc50"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7fb85884b5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fb85884b5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7fb8588482a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7fb859fec020"/>
            <typename><typedef-ref name="error_t" ref="0x7fb859fe41b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fb85884b5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7fb858848020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7fb85884b5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7fb8586601f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fb859ff2090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
