<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="24:SlaveAppC.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f2925a8c860"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f29247ee310"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x7f29247ee310"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x7f2923a12a10"/></to>
    </wire>
    <wire loc="25:SlaveAppC.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f2925a8b1b0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f29247eb240"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x7f29247eb240"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x7f2923a10890"/></to>
    </wire>
    <wire loc="26:SlaveAppC.nc">
      <from><interface-ref name="Light" scoped="" ref="0x7f2925a8ac90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f29247e7db0"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f29247e7db0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f292391c460"/></to>
    </wire>
    <wire loc="29:SlaveAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2925b32480"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2925eb9560"/></to>
    </wire>
    <wire loc="72:../../../tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7f2925eb9560"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7f2925eb7aa0"/></to>
    </wire>
    <wire loc="30:SlaveAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2925b32ac0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2925e059a0"/></to>
    </wire>
    <wire loc="51:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2925e059a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2925e02620"/></to>
    </wire>
    <wire loc="31:SlaveAppC.nc">
      <from><interface-ref name="TimerMaster" scoped="" ref="0x7f2925b22e50"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2925a52980"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2925a52980"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:SlaveAppC.nc">
      <from><interface-ref name="TimerMiSlot" scoped="" ref="0x7f2925b1e370"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2925723260"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2925723260"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="33:SlaveAppC.nc">
      <from><interface-ref name="TimerLeds" scoped="" ref="0x7f2925b19850"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f292571db00"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f292571db00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="34:SlaveAppC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2925aba180"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f292496dc30"/></to>
    </wire>
    <wire loc="65:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f292496dc30"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2923a6e8b0"/></to>
    </wire>
    <wire loc="35:SlaveAppC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2925aaa1e0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f292496c8b0"/></to>
    </wire>
    <wire loc="66:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f292496c8b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2923a6d590"/></to>
    </wire>
    <wire loc="36:SlaveAppC.nc">
      <from><interface-ref name="AMControl" scoped="" ref="0x7f2925a977a0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f29257130c0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f29257130c0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f29256e5080"/></to>
    </wire>
    <wire loc="37:SlaveAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2925a9f5a0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f292496d020"/></to>
    </wire>
    <wire loc="64:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f292496d020"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2923a6fbc0"/></to>
    </wire>
    <wire loc="38:SlaveAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2925a9be80"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2924961910"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2924961910"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f29257113f0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:SlaveAppC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2925a8f730"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f29256df930"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f29256df930"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f29256b0020"/></to>
    </wire>
    <wire loc="37:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f292449d9b0"/></to>
    </wire>
    <wire loc="96:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f29238e6620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f292472a660"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2923975810"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2924ad1dd0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2924b5ab70"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2924b79750"/></to>
    </wire>
    <wire loc="52:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2924b96080"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2924cea620"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2924ddbc60"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2925571c70"/></to>
    </wire>
    <wire loc="73:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2923bf4020"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f29252ac020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f292561b4a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2925a42790"/></to>
    </wire>
    <wire loc="67:../../../tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f2925e1c140"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f29263631e0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7f29263631e0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7f2925f08140"/></to>
    </wire>
    <wire loc="68:../../../tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7f2925e1cb60"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2925ebb960"/></to>
    </wire>
    <wire loc="48:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2925ebb960"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2925eb4cb0"/></to>
    </wire>
    <wire loc="71:../../../tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925e1b3a0"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f2925eacb60"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f2925ea9390"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f2925ea89f0"/></from>
      <to><interface-ref name="MoteClockInit" scoped="" ref="0x7f2925eaa390"/></to>
    </wire>
    <wire loc="46:../../../tos/platforms/telosb/MoteClockC.nc">
      <from><interface-ref name="MoteClockInit" scoped="" ref="0x7f2925eaa390"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2925e75280"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7f2925ea7120"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2925e8f1a0"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x7f2925ea7800"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2925ddadd0"/></to>
    </wire>
    <wire loc="46:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2925e75280"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2925e5fae0"/></to>
    </wire>
    <wire loc="47:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2925e6e850"/></from>
      <to><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2925e5d180"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2925fdec80"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2925e5c320"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2925f07040"/></to>
    </wire>
    <wire loc="56:../../../tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7f2925f02490"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7f292613b9a0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2925ddadd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2925e02020"/></to>
    </wire>
    <wire loc="54:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f2925dfab50"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7f2925e03590"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7f2925e03590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2925b5d9e0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f2925e00e30"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7f2925ddc830"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7f2925ddc830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2925b47020"/></to>
    </wire>
    <wire loc="56:../../../tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f2925df9020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7f2925ddbb50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7f2925ddbb50"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2925b41630"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2925b4cc50"/></from>
      <to><interface-ref name="Port54" scoped="" ref="0x7f2925d6d020"/></to>
    </wire>
    <wire loc="737:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port54" scoped="" ref="0x7f2925d6d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c16540"/></to>
    </wire>
    <wire loc="62:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2925b452f0"/></from>
      <to><interface-ref name="Port55" scoped="" ref="0x7f2925d6b8a0"/></to>
    </wire>
    <wire loc="738:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port55" scoped="" ref="0x7f2925d6b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c11b90"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2925b407a0"/></from>
      <to><interface-ref name="Port56" scoped="" ref="0x7f2925d68020"/></to>
    </wire>
    <wire loc="739:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port56" scoped="" ref="0x7f2925d68020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c0b060"/></to>
    </wire>
    <wire loc="693:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f2925dbfd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925cc5b90"/></to>
    </wire>
    <wire loc="706:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f2925da6e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c8e060"/></to>
    </wire>
    <wire loc="844:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SDA" scoped="" ref="0x7f2925d1b3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c7e060"/></to>
    </wire>
    <wire loc="864:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC6" scoped="" ref="0x7f2925d203e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925be0b90"/></to>
    </wire>
    <wire loc="845:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI0" scoped="" ref="0x7f2925d493f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c79540"/></to>
    </wire>
    <wire loc="711:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port30" scoped="" ref="0x7f2925da1e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c84b90"/></to>
    </wire>
    <wire loc="724:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port42" scoped="" ref="0x7f2925d86020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c4d060"/></to>
    </wire>
    <wire loc="748:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port64" scoped="" ref="0x7f2925d58020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bea060"/></to>
    </wire>
    <wire loc="848:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD0" scoped="" ref="0x7f2925d443f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c6d060"/></to>
    </wire>
    <wire loc="858:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC0" scoped="" ref="0x7f2925d303e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c01b90"/></to>
    </wire>
    <wire loc="870:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSIN" scoped="" ref="0x7f2925d113f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bda060"/></to>
    </wire>
    <wire loc="696:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f2925db7580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925cb5b90"/></to>
    </wire>
    <wire loc="849:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD0" scoped="" ref="0x7f2925d42bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c68540"/></to>
    </wire>
    <wire loc="701:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f2925db2580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925caa540"/></to>
    </wire>
    <wire loc="714:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port33" scoped="" ref="0x7f2925d98710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c74b90"/></to>
    </wire>
    <wire loc="727:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port45" scoped="" ref="0x7f2925d7f8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c3c060"/></to>
    </wire>
    <wire loc="740:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port57" scoped="" ref="0x7f2925d668a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c06540"/></to>
    </wire>
    <wire loc="751:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port67" scoped="" ref="0x7f2925d518a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bda060"/></to>
    </wire>
    <wire loc="691:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f2925dc4d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925cd0060"/></to>
    </wire>
    <wire loc="704:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f2925dabd50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c996d0"/></to>
    </wire>
    <wire loc="717:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port36" scoped="" ref="0x7f2925d91e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c63b90"/></to>
    </wire>
    <wire loc="843:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO0" scoped="" ref="0x7f2925d4cbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c7e060"/></to>
    </wire>
    <wire loc="861:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC3" scoped="" ref="0x7f2925d28bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bf0b90"/></to>
    </wire>
    <wire loc="868:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC1" scoped="" ref="0x7f2925d14bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bda060"/></to>
    </wire>
    <wire loc="854:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK1" scoped="" ref="0x7f2925d38bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c1b060"/></to>
    </wire>
    <wire loc="722:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port40" scoped="" ref="0x7f2925d8ce50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c58740"/></to>
    </wire>
    <wire loc="735:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port52" scoped="" ref="0x7f2925d72020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c22b90"/></to>
    </wire>
    <wire loc="746:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port62" scoped="" ref="0x7f2925d5d020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bf6540"/></to>
    </wire>
    <wire loc="862:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC4" scoped="" ref="0x7f2925d253e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bea060"/></to>
    </wire>
    <wire loc="851:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE1" scoped="" ref="0x7f2925d3f3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c2c060"/></to>
    </wire>
    <wire loc="694:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f2925dbc580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925cbf060"/></to>
    </wire>
    <wire loc="707:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f2925da3710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c89540"/></to>
    </wire>
    <wire loc="744:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port60" scoped="" ref="0x7f2925d62020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c01b90"/></to>
    </wire>
    <wire loc="712:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port31" scoped="" ref="0x7f2925d9d710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c7e060"/></to>
    </wire>
    <wire loc="725:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port43" scoped="" ref="0x7f2925d848a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c47540"/></to>
    </wire>
    <wire loc="749:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port65" scoped="" ref="0x7f2925d568a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925be5540"/></to>
    </wire>
    <wire loc="853:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SOMI1" scoped="" ref="0x7f2925d3a3f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c22b90"/></to>
    </wire>
    <wire loc="689:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f2925dc7cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925cdb540"/></to>
    </wire>
    <wire loc="702:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f2925db0d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925ca5b90"/></to>
    </wire>
    <wire loc="715:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port34" scoped="" ref="0x7f2925d96e50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c6d060"/></to>
    </wire>
    <wire loc="728:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port46" scoped="" ref="0x7f2925d7c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c37540"/></to>
    </wire>
    <wire loc="855:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UTXD1" scoped="" ref="0x7f2925d353f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c63b90"/></to>
    </wire>
    <wire loc="859:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC1" scoped="" ref="0x7f2925d2ebb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bfb060"/></to>
    </wire>
    <wire loc="865:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC7" scoped="" ref="0x7f2925d1ebb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bda060"/></to>
    </wire>
    <wire loc="733:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port50" scoped="" ref="0x7f2925d77020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c2c060"/></to>
    </wire>
    <wire loc="856:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="URXD1" scoped="" ref="0x7f2925d33bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c5d060"/></to>
    </wire>
    <wire loc="692:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f2925dc1580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925ccb540"/></to>
    </wire>
    <wire loc="705:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f2925da8710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c94b90"/></to>
    </wire>
    <wire loc="718:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port37" scoped="" ref="0x7f2925d8e710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c5d060"/></to>
    </wire>
    <wire loc="852:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SIMO1" scoped="" ref="0x7f2925d3dbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c27540"/></to>
    </wire>
    <wire loc="863:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC5" scoped="" ref="0x7f2925d23bb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925be5540"/></to>
    </wire>
    <wire loc="723:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port41" scoped="" ref="0x7f2925d898a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c53b90"/></to>
    </wire>
    <wire loc="736:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port53" scoped="" ref="0x7f2925d708a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c1b060"/></to>
    </wire>
    <wire loc="747:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port63" scoped="" ref="0x7f2925d5b8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bf0b90"/></to>
    </wire>
    <wire loc="695:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f2925dbad50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925cba540"/></to>
    </wire>
    <wire loc="745:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port61" scoped="" ref="0x7f2925d608a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bfb060"/></to>
    </wire>
    <wire loc="700:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f2925db5d50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925caf060"/></to>
    </wire>
    <wire loc="713:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port32" scoped="" ref="0x7f2925d9be50"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c79540"/></to>
    </wire>
    <wire loc="726:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port44" scoped="" ref="0x7f2925d81020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c42b90"/></to>
    </wire>
    <wire loc="750:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port66" scoped="" ref="0x7f2925d53020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925be0b90"/></to>
    </wire>
    <wire loc="690:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f2925dc6580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925cd6b90"/></to>
    </wire>
    <wire loc="703:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f2925dad580"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c9f060"/></to>
    </wire>
    <wire loc="716:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port35" scoped="" ref="0x7f2925d93710"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c68540"/></to>
    </wire>
    <wire loc="729:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port47" scoped="" ref="0x7f2925d7a8a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c32b90"/></to>
    </wire>
    <wire loc="860:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="ADC2" scoped="" ref="0x7f2925d2b3e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925bf6540"/></to>
    </wire>
    <wire loc="847:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SCL" scoped="" ref="0x7f2925d19ba0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c74b90"/></to>
    </wire>
    <wire loc="846:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="UCLK0" scoped="" ref="0x7f2925d47bc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c74b90"/></to>
    </wire>
    <wire loc="734:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="Port51" scoped="" ref="0x7f2925d758a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c27540"/></to>
    </wire>
    <wire loc="867:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="DAC0" scoped="" ref="0x7f2925d163e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925be0b90"/></to>
    </wire>
    <wire loc="871:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="SVSOUT" scoped="" ref="0x7f2925d0fbc0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c06540"/></to>
    </wire>
    <wire loc="842:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <from><interface-ref name="STE0" scoped="" ref="0x7f2925d4e060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7f2925c84b90"/></to>
    </wire>
    <wire loc="54:../../../tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a3e560"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a3e560"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f292574a8e0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2925a42790"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f29257f8020"/></to>
    </wire>
    <wire loc="63:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f292574a8e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2923de5db0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7f2925a38020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f292573b020"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f29257f8020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2923fd8020"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f2925743020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f29257cb2f0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f29257c6850"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f29257f8870"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f29257f8870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2923fd2a90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2925731300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f29258718c0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f29258718c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2925854cf0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2923fd8020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2923fbc660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f2923fcb210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2923fd8870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2923fd8870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2923fbb020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2923fcee10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f29258718c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923fb7190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923fc1340"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923fc1340"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2925a04670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923fb6770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923fc0a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923fc0a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2925a023f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923fb5a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923fbfda0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923fbfda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2925a01d30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2925a04670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f29259ec6c0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerB" scoped="" ref="0x7f29259ec6c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2925996c80"/></to>
    </wire>
    <wire loc="59:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2925a023f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB0" scoped="" ref="0x7f29259e9020"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB0" scoped="" ref="0x7f29259e9020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2925933220"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2925a01d30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB0" scoped="" ref="0x7f29259e8570"/></to>
    </wire>
    <wire loc="140:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB0" scoped="" ref="0x7f29259e8570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2925932610"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2925a04670"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f29259ec6c0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2925a023f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB2" scoped="" ref="0x7f29259e38c0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB2" scoped="" ref="0x7f29259e38c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2925924b30"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2925a01d30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB2" scoped="" ref="0x7f29259e2d40"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB2" scoped="" ref="0x7f29259e2d40"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2925922020"/></to>
    </wire>
    <wire loc="70:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2925a04670"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f29259ec6c0"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2925a023f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB3" scoped="" ref="0x7f29259e0a50"/></to>
    </wire>
    <wire loc="161:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB3" scoped="" ref="0x7f29259e0a50"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f292591b220"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2925a01d30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB3" scoped="" ref="0x7f29259de020"/></to>
    </wire>
    <wire loc="162:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB3" scoped="" ref="0x7f29259de020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f292591a610"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2925a04670"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f29259ec6c0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2925a023f0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB4" scoped="" ref="0x7f29259ddd40"/></to>
    </wire>
    <wire loc="168:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB4" scoped="" ref="0x7f29259ddd40"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f29259146d0"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2925a01d30"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB4" scoped="" ref="0x7f29259db160"/></to>
    </wire>
    <wire loc="169:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB4" scoped="" ref="0x7f29259db160"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2925913ac0"/></to>
    </wire>
    <wire loc="78:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2925a04670"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f29259ec6c0"/></to>
    </wire>
    <wire loc="79:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2925a023f0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB5" scoped="" ref="0x7f29259d90c0"/></to>
    </wire>
    <wire loc="175:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB5" scoped="" ref="0x7f29259d90c0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f292590cb30"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2925a01d30"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB5" scoped="" ref="0x7f29259d8570"/></to>
    </wire>
    <wire loc="176:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB5" scoped="" ref="0x7f29259d8570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f292590a020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2925a04670"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f29259ec6c0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2925a023f0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ControlB6" scoped="" ref="0x7f29259d6410"/></to>
    </wire>
    <wire loc="182:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB6" scoped="" ref="0x7f29259d6410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2925904220"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2925a01d30"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB6" scoped="" ref="0x7f29259d5890"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB6" scoped="" ref="0x7f29259d5890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2925903610"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA2" scoped="" ref="0x7f29259ef410"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f292593bd20"/></to>
    </wire>
    <wire loc="121:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA1" scoped="" ref="0x7f29259f03e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2925941930"/></to>
    </wire>
    <wire loc="163:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB3" scoped="" ref="0x7f29259deda0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f29259192f0"/></to>
    </wire>
    <wire loc="120:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f29259f1570"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2925942c50"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB6" scoped="" ref="0x7f29259d4700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f29259022f0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f29259fbbe0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f292594a3f0"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB1" scoped="" ref="0x7f29259e4890"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f29259297a0"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareB1" scoped="" ref="0x7f29259e5a20"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f292592aac0"/></to>
    </wire>
    <wire loc="146:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlB1" scoped="" ref="0x7f29259e65a0"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f292592b6d0"/></to>
    </wire>
    <wire loc="128:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA2" scoped="" ref="0x7f29259ed700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2925939cf0"/></to>
    </wire>
    <wire loc="170:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB4" scoped="" ref="0x7f29259da120"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f29259127a0"/></to>
    </wire>
    <wire loc="127:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA2" scoped="" ref="0x7f29259ee890"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f2925939060"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f29259fc360"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f292599ec80"/></to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f29259f6020"/></from>
      <to><interface-ref name="Control" scoped="" ref="0x7f2925943940"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureA0" scoped="" ref="0x7f29259f7020"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2925948480"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB2" scoped="" ref="0x7f29259e1ae0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f2925922cb0"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f29259f90c0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7f29259497a0"/></to>
    </wire>
    <wire loc="177:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB5" scoped="" ref="0x7f29259d73e0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f292590acb0"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="CaptureB0" scoped="" ref="0x7f29259e7570"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f29259312f0"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f292599cc20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f292599c5b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f292599a2f0"/></from>
      <to><interface-ref name="VectorTimerA0" scoped="" ref="0x7f29258fa020"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f292599a940"/></from>
      <to><interface-ref name="VectorTimerA1" scoped="" ref="0x7f29258fa7b0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f29259472f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f292599ec80"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2925946930"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f292599c5b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f29259407a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f292599ec80"/></to>
    </wire>
    <wire loc="123:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f292593ede0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f292599c5b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2925938b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f292599ec80"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f29259362f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f292599c5b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f2925994c20"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f29259945b0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX0" scoped="" ref="0x7f29259932f0"/></from>
      <to><interface-ref name="VectorTimerB0" scoped="" ref="0x7f29258f9020"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2925993940"/></from>
      <to><interface-ref name="VectorTimerB1" scoped="" ref="0x7f29258f97b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2925930160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2925996c80"/></to>
    </wire>
    <wire loc="143:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f292592e7a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f29259945b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2925928610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2925996c80"/></to>
    </wire>
    <wire loc="150:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2925927c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f29259945b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2925921b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2925996c80"/></to>
    </wire>
    <wire loc="157:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f292591f2f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f29259945b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2925918160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2925996c80"/></to>
    </wire>
    <wire loc="165:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f29259177a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f29259945b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2925911610"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2925996c80"/></to>
    </wire>
    <wire loc="172:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f2925910c50"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f29259945b0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2925909b40"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2925996c80"/></to>
    </wire>
    <wire loc="179:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f29259072f0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f29259945b0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2925901160"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f2925996c80"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <from><interface-ref name="Event" scoped="" ref="0x7f29259007a0"/></from>
      <to><interface-ref name="Event" scoped="" ref="0x7f29259945b0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f29258370f0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f292586f8e0"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f292586f8e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2925869b80"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f292585ac50"/></from>
      <to><interface-ref name="TimerB" scoped="" ref="0x7f29259ec6c0"/></to>
    </wire>
    <wire loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7f29257c29c0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7f2923dde3d0"/></from>
      <to><interface-ref name="TimerFrom" scoped="" ref="0x7f2925743020"/></to>
    </wire>
    <wire loc="65:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="TimeSkew" scoped="" ref="0x7f2923dd8a40"/></from>
      <to><interface-ref name="TimeSkew" scoped="" ref="0x7f292573e450"/></to>
    </wire>
    <wire loc="68:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="Platform" scoped="" ref="0x7f2923dd95d0"/></from>
      <to><interface-ref name="Platform" scoped="" ref="0x7f2925eacb60"/></to>
    </wire>
    <wire loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7f2923dd6100"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f29256e5080"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f29256c8b70"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f29257121d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f29256e41d0"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f29256e41d0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2924a94020"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f2925710020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f29256e1020"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x7f29256e1020"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x7f2924a92df0"/></to>
    </wire>
    <wire loc="83:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2925710630"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f29256e0c20"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f29256e0c20"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2924a90a80"/></to>
    </wire>
    <wire loc="89:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f29256fe6b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2924c66550"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2924c66550"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2924c57a80"/></to>
    </wire>
    <wire loc="86:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f29256f15b0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f29256dbbb0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f29256dbbb0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f29256ae080"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f29257113f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f29256e23f0"/></to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f29256e23f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2924a92210"/></to>
    </wire>
    <wire loc="85:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f29257064c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f29256de800"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f29256de800"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f29256af020"/></to>
    </wire>
    <wire loc="84:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f292570f2d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f29256e1650"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f29256e1650"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f2924a91470"/></to>
    </wire>
    <wire loc="90:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f29256fd840"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2924c62660"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2924c62660"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2924c54af0"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f29256c8b70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2924ac5b80"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f29256d2d40"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f2924a8e8b0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x7f29256c6d20"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x7f2924a8fce0"/></to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f29256b0020"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924c6b670"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f29256ae080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f2924ac5080"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f29256af020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2924c686e0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f29256d1020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f29256aeb70"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f29256aeb70"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f2924ab0020"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f29256daa80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f29256af9d0"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f29256af9d0"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2924c67a70"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioResource" scoped="" ref="0x7f2924a850f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29256c1210"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2924a8d860"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f29256ba990"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f29256ba990"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f2924b2ec90"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2924a8c690"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f29256b2840"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f29256b2840"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f2924b2da50"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2924a874d0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2924e92b20"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924a8cce0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924c6b670"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924c6b670"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924c5dd20"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924a8ab70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c670c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c670c0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c59640"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f2924a89610"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f2925622dc0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f2925622dc0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f292561a970"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f2924a861f0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f29256a7330"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f29256a7330"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f29256a17e0"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2924a85d30"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2925e059a0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2924ac5b80"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x7f2924ac2d90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2924c67a70"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2924c57020"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x7f2924ab0020"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x7f2924aae410"/></to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveSend" scoped="" ref="0x7f2924b2ec90"/></from>
      <to><interface-ref name="ActiveSend" scoped="" ref="0x7f2924b23a20"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x7f2924ac5080"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x7f2924abe2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x7f29256bb500"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2924b2e5e0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2924b2e5e0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x7f2924b23370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2924c686e0"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2924c5ac50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29256c1210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924b30be0"/></to>
    </wire>
    <wire loc="96:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2924b30be0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924b257b0"/></to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x7f29256b16f0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2924b2f8e0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2924b2f8e0"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x7f2924b244d0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f29256bbbc0"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f2924b2c170"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x7f2924b2c170"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x7f2924b21020"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="ActiveReceive" scoped="" ref="0x7f2924b2da50"/></from>
      <to><interface-ref name="ActiveReceive" scoped="" ref="0x7f2924b22840"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f2924ac2d90"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f29256aa390"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f29256aa390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f29256a5e70"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2924b2b6b0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2924b7e220"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2924b7e220"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2924b7ca10"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2924b7d020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2924ab3350"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2924ab3350"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2924ab0d70"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2924ab0d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2924ac9ce0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2924ac9ce0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2924ac3860"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2924ac3860"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f29256aae80"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f29256aae80"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f29256a2990"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2924b2b020"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2924ac6980"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2924ac6980"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2924ac2690"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2924ac2690"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2924b61aa0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2924b61aa0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2924b5de30"/></to>
    </wire>
    <wire loc="109:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2924b5e950"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f29256a8b40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f29256a8b40"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2924cef7c0"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x7f2924cef7c0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x7f2924ce8020"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29256a0640"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2925632950"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2925632950"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f292561bb10"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f2925698b50"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f292562dbf0"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x7f292562dbf0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x7f2925618740"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f2925695760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2924de96c0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x7f2925695760"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2924cf25c0"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2924cf25c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2924ceaca0"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x7f2924de96c0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2924dd9320"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f292568d2a0"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x7f2924de6020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x7f2924de6020"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2924dd9bc0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x7f2925696060"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f2924de6cb0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x7f2924de6cb0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x7f2924dd8970"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f292568b330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924c6b670"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2925683920"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c670c0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f292568a420"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2924b9ba20"/></to>
    </wire>
    <wire loc="56:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2924b9ba20"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2924b95a20"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x7f2925687110"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2924b9daa0"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f2924b9daa0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f29252b01d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f292568abf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2925e059a0"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x7f2925679b70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x7f292567aba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x7f292567cc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x7f292561f020"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x7f2925617b40"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x7f2925613a10"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f292556e690"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f292556e690"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f29255672e0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f292560fc50"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f2925527370"/></to>
    </wire>
    <wire loc="72:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f2925527370"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2925519da0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f292560ee70"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x7f2925523ce0"/></to>
    </wire>
    <wire loc="75:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x7f2925523ce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2925507020"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f292560c0f0"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x7f2925520380"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x7f2925520380"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f29254fdb00"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f2925607c00"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x7f29254e3400"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x7f29254e3400"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f2925382680"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f29255f41d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924f1ee20"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2924f1ee20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29253304d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f29255f32b0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x7f2924f1b7b0"/></to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2924f1b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f29255f39c0"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x7f2924f19ae0"/></to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2924f19ae0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f29255f5a40"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x7f2924f1cad0"/></to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2924f1cad0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f29255f5120"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924f18160"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924f18160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f29255fabe0"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x7f2924f10870"/></to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2924f10870"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f29255fc550"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x7f2924f0e880"/></to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2924f0e880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f29255fce00"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x7f2924f0c0a0"/></to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2924f0c0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f29255f9710"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924f15e50"/></to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924f15e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f29255f8020"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924f13670"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924f13670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f29256055e0"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x7f2924f00500"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2924f00500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f29255fdc30"/></from>
      <to><interface-ref name="IEEEADR" scoped="" ref="0x7f2924f01ce0"/></to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2924f01ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f29255f88e0"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924f11e50"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924f11e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f29255f71c0"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x7f2924f13e50"/></to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2924f13e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f29255f7a70"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f2924f12e50"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2924f12e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x7f29255f2d90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924eeca80"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2924eeca80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29253304d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x7f29255f2020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924ebf9e0"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2924ebf9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29253304d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2925602390"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2924e92b20"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2925613020"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2924e91d20"/></to>
    </wire>
    <wire loc="23:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2924e91d20"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2924e76310"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x7f29255e6820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x7f29255e8940"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2925571c70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2925568a20"/></to>
    </wire>
    <wire loc="51:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2925568a20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2923d80c80"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x7f29255672e0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2923d7e570"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2923d80c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2923d78c90"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2923d7e570"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2923d71890"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2923d78c90"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2923d58a30"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f2923d6a0a0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2923d76570"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2923d76570"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2923d57340"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2923d6dc00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2925551650"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2925551650"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f292554b2e0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923d534c0"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923d60570"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923d60570"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2925a04670"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923d52a90"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923d5fc10"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923d5fc10"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2925a023f0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923d51da0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923d5a020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923d5a020"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2925a01d30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x7f29255496d0"/></from>
      <to><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f292586f8e0"/></to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f29255266a0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f29255134a0"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f29255259d0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f292550eb00"/></to>
    </wire>
    <wire loc="71:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f29255280e0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f292551e710"/></to>
    </wire>
    <wire loc="76:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f2925521020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2925502630"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f292551d930"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f2925dbfd50"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2925517020"/></from>
      <to><interface-ref name="Port42" scoped="" ref="0x7f2925d86020"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2925512610"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f2925dc1580"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f292550dc60"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f2925dc7cb0"/></to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f29255062f0"/></from>
      <to><interface-ref name="Port46" scoped="" ref="0x7f2925d7c020"/></to>
    </wire>
    <wire loc="68:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f29255017a0"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f2925d898a0"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f29254fcc60"/></from>
      <to><interface-ref name="Port45" scoped="" ref="0x7f2925d7f8a0"/></to>
    </wire>
    <wire loc="63:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f29254df700"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x7f29254d7c20"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f29254e2060"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f2925373b70"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f29254c5760"/></from>
      <to><interface-ref name="ControlB1" scoped="" ref="0x7f29259e65a0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Msp430Capture" scoped="" ref="0x7f29254c4a80"/></from>
      <to><interface-ref name="CaptureB1" scoped="" ref="0x7f29259e4890"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x7f29254c2930"/></from>
      <to><interface-ref name="Port41" scoped="" ref="0x7f2925d898a0"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f29253812f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f29254b03f0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port14" scoped="" ref="0x7f29254b03f0"/></from>
      <to><interface-ref name="Port14" scoped="" ref="0x7f29254993f0"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f29253727a0"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f29254b3620"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port10" scoped="" ref="0x7f29254b3620"/></from>
      <to><interface-ref name="Port10" scoped="" ref="0x7f29254a17a0"/></to>
    </wire>
    <wire loc="82:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port26" scoped="" ref="0x7f29254a43f0"/></from>
      <to><interface-ref name="Port26" scoped="" ref="0x7f292548d3f0"/></to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port17" scoped="" ref="0x7f29254add50"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f2925496d50"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port21" scoped="" ref="0x7f29254aa3f0"/></from>
      <to><interface-ref name="Port21" scoped="" ref="0x7f29254933f0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port12" scoped="" ref="0x7f29254b8bc0"/></from>
      <to><interface-ref name="Port12" scoped="" ref="0x7f292549cd50"/></to>
    </wire>
    <wire loc="80:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port24" scoped="" ref="0x7f29254a7d50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f2925490d50"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port15" scoped="" ref="0x7f29254af710"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f2925498710"/></to>
    </wire>
    <wire loc="83:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port27" scoped="" ref="0x7f29254a3710"/></from>
      <to><interface-ref name="Port27" scoped="" ref="0x7f292548c710"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port22" scoped="" ref="0x7f29254a9710"/></from>
      <to><interface-ref name="Port22" scoped="" ref="0x7f2925492710"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port13" scoped="" ref="0x7f29254b1020"/></from>
      <to><interface-ref name="Port13" scoped="" ref="0x7f292549a020"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port25" scoped="" ref="0x7f29254a5100"/></from>
      <to><interface-ref name="Port25" scoped="" ref="0x7f292548e100"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port16" scoped="" ref="0x7f29254aea30"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f2925497a30"/></to>
    </wire>
    <wire loc="76:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port20" scoped="" ref="0x7f29254ab020"/></from>
      <to><interface-ref name="Port20" scoped="" ref="0x7f2925494020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port11" scoped="" ref="0x7f29254b98a0"/></from>
      <to><interface-ref name="Port11" scoped="" ref="0x7f292549da30"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <from><interface-ref name="Port23" scoped="" ref="0x7f29254a8a30"/></from>
      <to><interface-ref name="Port23" scoped="" ref="0x7f2925491a30"/></to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f2924f1b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924f0f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f2924f070a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f2924f0e0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2924efb500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2924efd500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2924f19490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f2924f03880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924efe500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f2924f09880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f2924f0a0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924f1da90"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f292532e350"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f292532e350"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2925326660"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924f18e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2924f17490"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2924f02c80"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f2924f17be0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924efece0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f2924f030a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f2924f12670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f2924f040a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f2924f07880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f2924f04880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2924efcce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2924efdce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f2924f0a880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f2924f050a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f2924f00ce0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f2924f0c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2924efbce0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2924f1c480"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f2924f15670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f2924f11670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f2924f080a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f2924f08880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924f0f0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2924f162f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f2924f15020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924f187b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2924f01500"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f2924efc500"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f2924f090a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f2924f05880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2924f1be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f2924f0b0a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2924f16940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f2924f0b880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f2924f020a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2924efa9b0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f2925324890"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f2925323ba0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f2925322a30"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29253304d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2925325510"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253208b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x7f2925314b40"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f29252b5770"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f29252b5770"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f29252b01d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f292531f060"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2925293c40"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2925293c40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2923c7c940"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f292531cc70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f29252928f0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f29252928f0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f2923c7bd70"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f29253142e0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f2924f44020"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f2924f44020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f2923c79020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f292531ba70"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2925e059a0"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x7f2925310bd0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f29252b01d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f29252acb70"/></to>
    </wire>
    <wire loc="110:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f2923c79020"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f292522b850"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f2923c7bd70"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f292522c110"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2923c7c940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2925231d80"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2923c7b5d0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2923c71020"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2923c71020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f29250ad2c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x7f292522c110"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x7f29251b0a10"/></to>
    </wire>
    <wire loc="108:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f2923c7a410"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f292522c790"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x7f292522c790"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x7f29251af060"/></to>
    </wire>
    <wire loc="111:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2925226a40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2923c797c0"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2923c61760"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29252298e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f2925227690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2923c72340"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2923c72340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29250ae020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2925222b40"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2923c6bc10"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2923c6bc10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f29250b04d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29252298e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29251b0250"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x7f292522b850"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x7f29251afc50"/></to>
    </wire>
    <wire loc="88:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2925231d80"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29251b1470"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f29251ad3e0"/></from>
      <to><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2925226a40"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartResource" scoped="" ref="0x7f29251ae5b0"/></from>
      <to><interface-ref name="UsartResource" scoped="" ref="0x7f2925227690"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="UsartInterrupts" scoped="" ref="0x7f29251a7480"/></from>
      <to><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2925222b40"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Usart" scoped="" ref="0x7f29251ada50"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f292519d020"/></to>
    </wire>
    <wire loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f292519d020"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f2925194700"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f29251a7c20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2925e059a0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <from><interface-ref name="signalDone_task" scoped="" ref="0x7f29251a52f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f29251952c0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f292518fc20"/></to>
    </wire>
    <wire loc="86:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2925199d10"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f292518f2d0"/></to>
    </wire>
    <wire loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f2925160bb0"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f2925d4cbc0"/></to>
    </wire>
    <wire loc="91:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="SOMI" scoped="" ref="0x7f292515d3e0"/></from>
      <to><interface-ref name="SOMI0" scoped="" ref="0x7f2925d493f0"/></to>
    </wire>
    <wire loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f292515bbb0"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f2925d47bc0"/></to>
    </wire>
    <wire loc="93:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="URXD" scoped="" ref="0x7f29251583e0"/></from>
      <to><interface-ref name="URXD0" scoped="" ref="0x7f2925d42bc0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <from><interface-ref name="UTXD" scoped="" ref="0x7f2925156bb0"/></from>
      <to><interface-ref name="UTXD0" scoped="" ref="0x7f2925d443f0"/></to>
    </wire>
    <wire loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplI2C" scoped="" ref="0x7f2925166d10"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f2925003d40"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2923c6a440"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f29250af3f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2923c6aa50"/></from>
      <to><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f292500b020"/></to>
    </wire>
    <wire loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f292500b020"/></from>
      <to><interface-ref name="HplI2C" scoped="" ref="0x7f2925003d40"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2923c6f020"/></from>
      <to><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f292519d020"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2923c717c0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f29250adad0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f29250adad0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2925016e80"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29250ac8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2923c61760"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f29250ad2c0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2925017a60"/></to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2925017a60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2923bf06c0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Interrupts" scoped="" ref="0x7f29250b04d0"/></from>
      <to><interface-ref name="Interrupts" scoped="" ref="0x7f29250a9d60"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29250ae020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2925018ca0"/></to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2925018ca0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2923bf1850"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="I2CInterrupts" scoped="" ref="0x7f29250af3f0"/></from>
      <to><interface-ref name="I2CInterrupts" scoped="" ref="0x7f29250a8710"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2925016e80"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2923befa70"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2925015790"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29250ac8a0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2925097bf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2925016e80"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawInterrupts" scoped="" ref="0x7f29250a8d80"/></from>
      <to><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2925199d10"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <from><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f29250975e0"/></from>
      <to><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f29251952c0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2925016270"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2923bf0e40"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2923bee9d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2925015790"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f2923bee2d0"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f2925014020"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2923bed2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f2923bf4630"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f2923beb480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="HplUsart" scoped="" ref="0x7f2924ffabb0"/></from>
      <to><interface-ref name="Usart" scoped="" ref="0x7f2925194700"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="SIMO" scoped="" ref="0x7f2924ff5700"/></from>
      <to><interface-ref name="SIMO0" scoped="" ref="0x7f2925d4cbc0"/></to>
    </wire>
    <wire loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <from><interface-ref name="UCLK" scoped="" ref="0x7f2924ff3e40"/></from>
      <to><interface-ref name="UCLK0" scoped="" ref="0x7f2925d47bc0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924edfc60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f2924ee9da0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924ee2b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924edc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f2924ed5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f2924edce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2924ec82f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2924ecb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2924ee7120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f2924ed0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924ecc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2924ee1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2924ee0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f2924ed6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f2924ed9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2924edb670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924eea760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f292532e350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924ee6aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2924ee4120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2924ecfa70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f2924ee4870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924eccad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924ee7dc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f2924ed2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f2924ee0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924ee1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2924ee9750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f2924ed3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f2924ed4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f2924ed2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2924ec9ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2924ecbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f2924ed7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f2924ed4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f2924ecdad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f2924eda670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2924ec8ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2924ee9100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f2924ee2370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f2924edf480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f2924ed6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2924edbe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f2924ed5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2924edd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2924ee8450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924edde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2924ee3020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f2924ee3cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2924ecd2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2924ecead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924ee6450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2924ece2f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f2924ec92f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f2924ed7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f2924ed3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2924ee8aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2924ee7770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f2924edae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2924ee3670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f2924ed9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f2924ed0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2924ec77a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924eb2c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f2924ebdda0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924eb6b50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924eb0670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f2924ea9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f2924eb0e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2924e9c2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2924e9e2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2924eba120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f2924ea4670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924e9f2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2924eb4c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2924eb3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f2924eaa670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f2924eace50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2924eae670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924ebe760"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f292532e350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924eb9aa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2924eb8120"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2924ea3a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f2924eb8870"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924e9fad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924ebadc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f2924ea5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f2924eb3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924eb4480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2924ebd750"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f2924ea6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f2924ea7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f2924ea5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2924e9dad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2924e9ead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f2924eab670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f2924ea7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f2924ea0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f2924ead670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2924e9cad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2924ebd100"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f2924eb6370"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f2924eb2480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f2924eaae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2924eaee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f2924ea9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2924eb1670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2924ebc450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924eb1e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2924eb7020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f2924eb7cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2924ea02f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2924ea2ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924eb9450"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2924ea22f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f2924e9d2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f2924eabe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f2924ea6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2924ebcaa0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2924eba770"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f2924eade50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2924eb7670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f2924eac670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f2924ea4e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2924e9b7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="21:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f2924e73880"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f2924e68020"/></to>
    </wire>
    <wire loc="20:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="ReadId48" scoped="" ref="0x7f2924e68020"/></from>
      <to><interface-ref name="ReadId48" scoped="" ref="0x7f2924e63140"/></to>
    </wire>
    <wire loc="16:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f2924e5ebd0"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f2924e67c50"/></to>
    </wire>
    <wire loc="21:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="OneWire" scoped="" ref="0x7f2924e67c50"/></from>
      <to><interface-ref name="OneWire" scoped="" ref="0x7f2924e4a150"/></to>
    </wire>
    <wire loc="17:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="PowerControl" scoped="" ref="0x7f2924e62530"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x7f2924df51b0"/></to>
    </wire>
    <wire loc="18:../../../tos/chips/ds2411/Ds2411C.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f2924e4e540"/></from>
      <to><interface-ref name="Gpio" scoped="" ref="0x7f2924e4f590"/></to>
    </wire>
    <wire loc="11:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="Gpio" scoped="" ref="0x7f2924e4f590"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2924dfe9e0"/></to>
    </wire>
    <wire loc="18:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f2924e45950"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f2924e4cca0"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x7f2924e4cca0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x7f2924e22a90"/></to>
    </wire>
    <wire loc="19:../../../tos/lib/onewire/OneWireMasterC.nc">
      <from><interface-ref name="Pin" scoped="" ref="0x7f2924e4a9f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x7f2924e4e540"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2924e12020"/></from>
      <to><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f2924e0c530"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f2924e0c530"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2924e08e50"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2924e05020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f29259fc360"/></to>
    </wire>
    <wire loc="9:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2924dfdc50"/></from>
      <to><interface-ref name="Port24" scoped="" ref="0x7f2925dabd50"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x7f2924de2990"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x7f2924dd7900"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x7f2924de4150"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x7f2924dd60f0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x7f2924dd6ae0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x7f292556e690"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x7f2924dc8500"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x7f29255280e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f2924dc2820"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f2925527370"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x7f2924dc0b40"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x7f2925521020"/></to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x7f2924dc9880"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x7f29254df700"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f2924dbe020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924d23c30"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2924d23c30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29253304d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924dbed10"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924d228f0"/></to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924d228f0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f292532e350"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2924dbb6d0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f2924d212f0"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2924d212f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2924dbbde0"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x7f2924d20cc0"/></to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2924d20cc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2924dba530"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x7f2924d1e370"/></to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2924d1e370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924dbac60"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924d1dd00"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924d1dd00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2924dbce00"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x7f2924d17c60"/></to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2924d17c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2924dbd780"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x7f2924cff7a0"/></to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2924cff7a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924dbc550"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924d032f0"/></to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924d032f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924db93e0"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924d18480"/></to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924d18480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924db85e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924d15e50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924d15e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924db7020"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924d14670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924d14670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2924db9e80"/></from>
      <to><interface-ref name="STXENC" scoped="" ref="0x7f2924d1b7b0"/></to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2924d1b7b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="90:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2924db69c0"/></from>
      <to><interface-ref name="TXNONCE" scoped="" ref="0x7f2924d01ad0"/></to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2924d01ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="91:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2924db7890"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f2924d022f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2924d022f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2924db6130"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f2924d02ad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2924d02ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f2924db0d40"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f2924cf2df0"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x7f2924cf2df0"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x7f2924ce9550"/></to>
    </wire>
    <wire loc="98:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924dd0d00"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924c6b670"/></to>
    </wire>
    <wire loc="99:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924dcfbb0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c670c0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2924dce950"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2924c66550"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2924dc3be0"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2924c5e480"/></to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2924c5e480"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2924c508b0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2924db46c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2925e059a0"/></to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924d16c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f2924d20020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924d1ac70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f2924d0de50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f2924d14e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2924d002f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f2924d08670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2924d18c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f2924d0e670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f2924d10e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2924d12670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2924d1c370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2924d07a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f2924d1cac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924d03ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924d1d060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f2924d09e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f2924d17480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2924d21940"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f2924d0ae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f2924d0b670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f2924d09670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f2924d0f670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f2924d0be50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f2924d04ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f2924d11670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2924d00ad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f2924d1a490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f2924d16480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f2924d0ee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2924d12e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f2924d0d670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2924d15670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2924d20670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2924d1b160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f2924d1be00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2924d042f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2924d06ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924d1d6b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2924d062f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f2924d012f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f2924d0fe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f2924d0a670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2924d1e9c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f2924d11e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f2924d10670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f2924d08e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x7f2924cee020"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x7f2924ce87c0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f2924cd3150"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2925e059a0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x7f2924ce7020"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x7f2925527370"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x7f2924ce6380"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x7f29255266a0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x7f2924ce56b0"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x7f29255259d0"/></to>
    </wire>
    <wire loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f2924ce4a50"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f29254e2060"/></to>
    </wire>
    <wire loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x7f2924ce36e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924bedd00"/></to>
    </wire>
    <wire loc="126:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2924bedd00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29253304d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2924ce2530"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x7f2924bcaad0"/></to>
    </wire>
    <wire loc="195:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x7f2924bcaad0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924ce1ad0"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924be76b0"/></to>
    </wire>
    <wire loc="137:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924be76b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2924ce13a0"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x7f2924be6370"/></to>
    </wire>
    <wire loc="139:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x7f2924be6370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924ce0330"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924c6b670"/></to>
    </wire>
    <wire loc="77:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924cdf1e0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c670c0"/></to>
    </wire>
    <wire loc="78:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2924cddd70"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2924c66550"/></to>
    </wire>
    <wire loc="79:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x7f2924cdfb90"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x7f2925622dc0"/></to>
    </wire>
    <wire loc="81:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924cd83e0"/></from>
      <to><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924bdfe50"/></to>
    </wire>
    <wire loc="155:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924bdfe50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924cd8cb0"/></from>
      <to><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924bde670"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924bde670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2924cd9b10"/></from>
      <to><interface-ref name="SRXDEC" scoped="" ref="0x7f2924be5160"/></to>
    </wire>
    <wire loc="141:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXDEC" scoped="" ref="0x7f2924be5160"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2924cd56d0"/></from>
      <to><interface-ref name="RXNONCE" scoped="" ref="0x7f2924bca2f0"/></to>
    </wire>
    <wire loc="192:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXNONCE" scoped="" ref="0x7f2924bca2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:272">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2924cd6590"/></from>
      <to><interface-ref name="KEY0" scoped="" ref="0x7f2924bcc2f0"/></to>
    </wire>
    <wire loc="188:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY0" scoped="" ref="0x7f2924bcc2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:256">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2924cd6e00"/></from>
      <to><interface-ref name="KEY1" scoped="" ref="0x7f2924bccad0"/></to>
    </wire>
    <wire loc="189:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="KEY1" scoped="" ref="0x7f2924bccad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:304">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924cd4020"/></from>
      <to><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924bcead0"/></to>
    </wire>
    <wire loc="187:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924bcead0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:128">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2924cd48b0"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x7f2924beb300"/></to>
    </wire>
    <wire loc="129:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x7f2924beb300"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x7f2924cc79d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f2924bfa300"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f2925551650"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x7f2924c4d3b0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2924bfb020"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f2924c4c6e0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7f2925a38020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2924bf5450"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924be0c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXCAL" scoped="" ref="0x7f2924bea020"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="147:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924be4c70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="170:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST0" scoped="" ref="0x7f2924bd7e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="BATTMON" scoped="" ref="0x7f2924bdee50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x7f2924be9370"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="DACTST" scoped="" ref="0x7f2924bd2670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:46">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="186:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924bce2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="149:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x7f2924be3c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x7f2924be1c60"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST0" scoped="" ref="0x7f2924bd8670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANAND" scoped="" ref="0x7f2924bdae50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x7f2924bdd670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="125:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924bec970"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x7f292532e350"/></to>
    </wire>
    <wire loc="138:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924be7d00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="179:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2924bd1a70"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SACKPEND" scoped="" ref="0x7f2924be6ac0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924be7060"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="ADCTST" scoped="" ref="0x7f2924bd3e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:45">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x7f2924be1480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="148:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924be3480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x7f2924beb950"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXBPFTST" scoped="" ref="0x7f2924bd5e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="171:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST1" scoped="" ref="0x7f2924bd6670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMSTATE" scoped="" ref="0x7f2924bd3670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:44">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXNONCE" scoped="" ref="0x7f2924bcbad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:320">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANOR" scoped="" ref="0x7f2924bd9670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST2" scoped="" ref="0x7f2924bd6e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="185:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SHORTADR" scoped="" ref="0x7f2924bcfad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="160:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDL" scoped="" ref="0x7f2924bdc670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MAIN" scoped="" ref="0x7f2924be4490"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x7f2924be0480"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST1" scoped="" ref="0x7f2924bd8e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="159:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x7f2924bdde50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="169:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCTST2" scoped="" ref="0x7f2924bd7670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x7f2924bdf670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x7f2924bea670"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SAES" scoped="" ref="0x7f2924be5e00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x7f2924bcf2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="183:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="IEEEADR" scoped="" ref="0x7f2924bd0ad0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="180:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2924bd02f0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SABUF" scoped="" ref="0x7f2924bcb2f0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/>
      <arguments>
        <value cst="I:288">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x7f2924bd9e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSTST3" scoped="" ref="0x7f2924bd5670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x7f2924beacc0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x7f2924be99c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="MANFIDH" scoped="" ref="0x7f2924bdce50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="STXENC" scoped="" ref="0x7f2924be57b0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="FSMTC" scoped="" ref="0x7f2924bda670"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="178:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TOPTST" scoped="" ref="0x7f2924bd2e50"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/>
      <arguments>
        <value cst="I:47">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="196:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x7f2924bc97a0"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x7f2924b99920"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x7f2924b96940"/></to>
    </wire>
    <wire loc="54:../../../tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2924ba3990"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2924b96080"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2924b79e60"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2924b7d020"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f2924b78ae0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2924b7a690"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f2924b7a690"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f29252b01d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x7f2924b778f0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x7f2924b9ba20"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924b76170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c670c0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x7f2924b5e200"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x7f2924b5a570"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2924b593f0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2924b5e950"/></to>
    </wire>
    <wire loc="62:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924b59a70"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c670c0"/></to>
    </wire>
    <wire loc="94:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x7f2924b21d70"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x7f2924b2b6b0"/></to>
    </wire>
    <wire loc="95:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x7f2924b20b10"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x7f2924b2b020"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924b1f2f0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924c6b670"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924b1e170"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c670c0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f2924b1eb70"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f2924ad0410"/></to>
    </wire>
    <wire loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <from><interface-ref name="grantTask" scoped="" ref="0x7f2924af2db0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x7f2924ac4800"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f2924ac0580"/></to>
    </wire>
    <wire loc="74:../../../tos/system/StateC.nc">
      <from><interface-ref name="State" scoped="" ref="0x7f2924ac0580"/></from>
      <to><interface-ref name="State" scoped="" ref="0x7f29252b01d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2924aab1c0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f29256af020"/></to>
    </wire>
    <wire loc="63:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2923a6fbc0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f2923a62640"/></to>
    </wire>
    <wire loc="64:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2923a6e8b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2925710630"/></to>
    </wire>
    <wire loc="65:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2923a6d590"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f292570f2d0"/></to>
    </wire>
    <wire loc="67:../../../tos/system/AMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f292496a020"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x7f2923a6cc10"/></to>
    </wire>
    <wire loc="66:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x7f2923a6cc10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f29257064c0"/></to>
    </wire>
    <wire loc="60:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f2923a602e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f29249d4930"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/system/DirectAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2923a5f020"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f292570f2d0"/></to>
    </wire>
    <wire loc="53:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x7f29249d4930"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x7f2924984df0"/></to>
    </wire>
    <wire loc="54:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x7f2924982400"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x7f29257121d0"/></to>
    </wire>
    <wire loc="55:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2924981060"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f292570f2d0"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2924980720"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2925710630"/></to>
    </wire>
    <wire loc="184:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x7f292497f480"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:../../../tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x7f292497fc60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x7f2924960020"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x7f2925710630"/></to>
    </wire>
    <wire loc="56:../../../tos/system/AMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x7f2924960c30"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x7f292570f2d0"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumidityMetadata" scoped="" ref="0x7f29247ea900"/></from>
      <to><interface-ref name="HumidityMetadata" scoped="" ref="0x7f2923a10120"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f29247edaa0"/></from>
      <to><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f2923a122a0"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="TempResource" scoped="" ref="0x7f2923a0e020"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29249099d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Temp" scoped="" ref="0x7f2923a0d9b0"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f2924908d50"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="HumResource" scoped="" ref="0x7f2923a0ecb0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29249099d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <from><interface-ref name="Sht11Hum" scoped="" ref="0x7f2923a0b020"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f2924908d50"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="SensirionSht11" scoped="" ref="0x7f2924908d50"/></from>
      <to><interface-ref name="SensirionSht11" scoped="" ref="0x7f292488e020"/></to>
    </wire>
    <wire loc="52:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29249099d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f292487c9e0"/></to>
    </wire>
    <wire loc="77:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f292487c9e0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29248411b0"/></to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f292488d610"/></from>
      <to><interface-ref name="DATA" scoped="" ref="0x7f292487b830"/></to>
    </wire>
    <wire loc="60:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f292487b830"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2924877b70"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="CLOCK" scoped="" ref="0x7f292488c7a0"/></from>
      <to><interface-ref name="SCK" scoped="" ref="0x7f292487ab40"/></to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f292487ab40"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2924870140"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f292488a930"/></from>
      <to><interface-ref name="InterruptDATA" scoped="" ref="0x7f2924878020"/></to>
    </wire>
    <wire loc="74:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="InterruptDATA" scoped="" ref="0x7f2924878020"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x7f2924847b60"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f2924889560"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f29247fe240"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f29247fe240"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7f29248858d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7f2925e059a0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="readSensor" scoped="" ref="0x7f2924882800"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <from><interface-ref name="signalStatusDone" scoped="" ref="0x7f2924882020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29248411b0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2923972020"/></to>
    </wire>
    <wire loc="56:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2924875de0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f2925dbc580"/></to>
    </wire>
    <wire loc="57:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f292486f2f0"/></from>
      <to><interface-ref name="Port16" scoped="" ref="0x7f2925dbad50"/></to>
    </wire>
    <wire loc="58:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplGeneralIO" scoped="" ref="0x7f292486a7a0"/></from>
      <to><interface-ref name="Port17" scoped="" ref="0x7f2925db7580"/></to>
    </wire>
    <wire loc="64:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="PWR" scoped="" ref="0x7f292485d990"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f292486b630"/></to>
    </wire>
    <wire loc="65:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="DATA" scoped="" ref="0x7f292485cce0"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2924877b70"/></to>
    </wire>
    <wire loc="66:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x7f292485a020"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x7f2924870140"/></to>
    </wire>
    <wire loc="69:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f29248625e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f292484ec10"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f292484ec10"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="HplInterrupt" scoped="" ref="0x7f29248467a0"/></from>
      <to><interface-ref name="Port15" scoped="" ref="0x7f29254af710"/></to>
    </wire>
    <wire loc="80:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f292480e020"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f2924865830"/></to>
    </wire>
    <wire loc="81:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f292480dcf0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f292483f400"/></to>
    </wire>
    <wire loc="83:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f292483f400"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2923970270"/></to>
    </wire>
    <wire loc="82:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f292480d0e0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f29248407a0"/></to>
    </wire>
    <wire loc="82:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f29248407a0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2923971560"/></to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f2924859ba0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f2924840020"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f2923972d80"/></to>
    </wire>
    <wire loc="84:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f292396e190"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f292483fcf0"/></to>
    </wire>
    <wire loc="85:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f2923970a30"/></from>
      <to><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f292483e4c0"/></to>
    </wire>
    <wire loc="87:../../../tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f292396e950"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x7f2923975e20"/></to>
    </wire>
    <wire loc="155:../../../tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f292396cac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x7f2923936780"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x7f292480e020"/></to>
    </wire>
    <wire loc="81:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f2923935270"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f292480eaa0"/></to>
    </wire>
    <wire loc="83:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2923935840"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f292480d0e0"/></to>
    </wire>
    <wire loc="84:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2923934590"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f292480dcf0"/></to>
    </wire>
    <wire loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="stopTask" scoped="" ref="0x7f2923934d70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <from><interface-ref name="startTask" scoped="" ref="0x7f29239335e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f292391c460"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f29247b2020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f29243d6560"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f29239170b0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f29239170b0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f29244a9830"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7f29247e7680"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7f29243de3f0"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f292391bc70"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f29243ded40"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923915df0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f29243ded40"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f29247a7d40"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f292391bc70"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f29247a3450"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f292390e270"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f292390e270"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f29247331d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f29247a9390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f292390f550"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f292390f550"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f292458e6b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f292390b5e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f292391bc70"/></to>
    </wire>
    <wire loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <from><interface-ref name="readDone" scoped="" ref="0x7f292476fe40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f292390d270"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f2924732960"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f292390db60"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f2924731920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f292458dad0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924737cc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f29238fb020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f292390b5e0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f29245861d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f29238fec60"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="MultiChannel" scoped="" ref="0x7f2924732960"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f2924728af0"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="DMAExtension" scoped="" ref="0x7f292472e1d0"/></from>
      <to><interface-ref name="DMAExtension" scoped="" ref="0x7f2924725910"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Overflow" scoped="" ref="0x7f2924731920"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f2924726ab0"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f29247331d0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f2924729370"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f2924737cc0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29245ad520"/></to>
    </wire>
    <wire loc="98:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29245ad520"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29238e4b90"/></to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f2924724280"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f29245abb20"/></to>
    </wire>
    <wire loc="100:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x7f29245abb20"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x7f29238e1270"/></to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f29247160d0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f292463d2b0"/></to>
    </wire>
    <wire loc="100:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="A0" scoped="" ref="0x7f2924710bc0"/></from>
      <to><interface-ref name="Port60" scoped="" ref="0x7f2925d62020"/></to>
    </wire>
    <wire loc="101:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="A1" scoped="" ref="0x7f292470d520"/></from>
      <to><interface-ref name="Port61" scoped="" ref="0x7f2925d608a0"/></to>
    </wire>
    <wire loc="102:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="A2" scoped="" ref="0x7f292470bcf0"/></from>
      <to><interface-ref name="Port62" scoped="" ref="0x7f2925d5d020"/></to>
    </wire>
    <wire loc="103:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="A3" scoped="" ref="0x7f2924708520"/></from>
      <to><interface-ref name="Port63" scoped="" ref="0x7f2925d5b8a0"/></to>
    </wire>
    <wire loc="104:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="A4" scoped="" ref="0x7f2924706cf0"/></from>
      <to><interface-ref name="Port64" scoped="" ref="0x7f2925d58020"/></to>
    </wire>
    <wire loc="105:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="A5" scoped="" ref="0x7f2924703520"/></from>
      <to><interface-ref name="Port65" scoped="" ref="0x7f2925d568a0"/></to>
    </wire>
    <wire loc="106:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="A6" scoped="" ref="0x7f2924701cf0"/></from>
      <to><interface-ref name="Port66" scoped="" ref="0x7f2925d53020"/></to>
    </wire>
    <wire loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="A7" scoped="" ref="0x7f29246fe520"/></from>
      <to><interface-ref name="Port67" scoped="" ref="0x7f2925d518a0"/></to>
    </wire>
    <wire loc="112:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="TimerA" scoped="" ref="0x7f2924722020"/></from>
      <to><interface-ref name="TimerA" scoped="" ref="0x7f29259fc360"/></to>
    </wire>
    <wire loc="113:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA0" scoped="" ref="0x7f2924715880"/></from>
      <to><interface-ref name="ControlA0" scoped="" ref="0x7f29259fbbe0"/></to>
    </wire>
    <wire loc="114:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="ControlA1" scoped="" ref="0x7f2924713d30"/></from>
      <to><interface-ref name="ControlA1" scoped="" ref="0x7f29259f6020"/></to>
    </wire>
    <wire loc="115:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA0" scoped="" ref="0x7f2924711120"/></from>
      <to><interface-ref name="CompareA0" scoped="" ref="0x7f29259f90c0"/></to>
    </wire>
    <wire loc="116:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <from><interface-ref name="CompareA1" scoped="" ref="0x7f2924711e60"/></from>
      <to><interface-ref name="CompareA1" scoped="" ref="0x7f29259f1570"/></to>
    </wire>
    <wire loc="99:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x7f29245ab3a0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x7f29238e29e0"/></to>
    </wire>
    <wire loc="101:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29238e1b60"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29245aa570"/></to>
    </wire>
    <wire loc="103:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x7f29238e0440"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f29238e6c30"/></to>
    </wire>
    <wire loc="68:../../../tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x7f29238df020"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="ClientResource" scoped="" ref="0x7f292458e6b0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f29245248d0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f2924523c60"/></from>
      <to><interface-ref name="AdcResource" scoped="" ref="0x7f292458dad0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f2924520b90"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x7f29245861d0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f29245229f0"/></from>
      <to><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f2924584cc0"/></to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f29245216d0"/></from>
      <to><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f29245818e0"/></to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f292457e670"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f29244ed020"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f29244ed020"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f2924579bf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f29244e7b40"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f29244e7b40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f2924573130"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7f29244e0560"/></to>
    </wire>
    <wire loc="52:../../../tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7f29244e0560"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <from><interface-ref name="HplAdc12" scoped="" ref="0x7f29245804e0"/></from>
      <to><interface-ref name="HplAdc12" scoped="" ref="0x7f292463d2b0"/></to>
    </wire>
    <wire loc="48:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <from><interface-ref name="switchOff" scoped="" ref="0x7f292451c3a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f29238a5bb0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923915df0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f29244a5ce0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923915df0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29244a29c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29238a9b90"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29238a9b90"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f292458e6b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f29244a3410"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f29238a78b0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f29238a78b0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f29247331d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f29244a9830"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f29244275a0"/></to>
    </wire>
    <wire loc="32:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f2924495300"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f29244a5ce0"/></to>
    </wire>
    <wire loc="33:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29243f6210"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29244a29c0"/></to>
    </wire>
    <wire loc="35:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x7f29243fb480"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f292449c700"/></to>
    </wire>
    <wire loc="38:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f2924498a70"/></from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f29244a3410"/></to>
    </wire>
    <wire loc="39:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2924494730"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f292442fd80"/></to>
    </wire>
    <wire loc="53:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f292442fd80"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2923892a90"/></to>
    </wire>
    <wire loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="bufferDone" scoped="" ref="0x7f292446b900"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamDone" scoped="" ref="0x7f2924478200"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <from><interface-ref name="readStreamFail" scoped="" ref="0x7f2924473820"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f292442f530"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f2923898020"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7f2923898020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7f292387c660"/></to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x7f292388b210"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f2923898870"/></to>
    </wire>
    <wire loc="52:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7f2923898870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7f292387b020"/></to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7f292388ee10"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7f29258718c0"/></to>
    </wire>
    <wire loc="54:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923877190"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923881450"/></to>
    </wire>
    <wire loc="49:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923881450"/></from>
      <to><interface-ref name="Msp430Timer" scoped="" ref="0x7f2925a04670"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923876770"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923880a80"/></to>
    </wire>
    <wire loc="50:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923880a80"/></from>
      <to><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2925a023f0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923875a80"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f292387fda0"/></to>
    </wire>
    <wire loc="51:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <from><interface-ref name="Msp430Compare" scoped="" ref="0x7f292387fda0"/></from>
      <to><interface-ref name="Msp430Compare" scoped="" ref="0x7f2925a01d30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f29238a68b0"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f2924732960"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f29238a5270"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f2924731920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f292458dad0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924737cc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f2923833cc0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f29238a5bb0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f29245861d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f2923834a60"/></to>
    </wire>
    <wire loc="47:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f29243d0cc0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f29238271e0"/></to>
    </wire>
    <wire loc="65:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x7f29238271e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x7f29247b2020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f29243b24e0"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f2923824d90"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="ReadStream" scoped="" ref="0x7f2923824d90"/></from>
      <to><interface-ref name="ReadStream" scoped="" ref="0x7f29244a9830"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="DeviceMetadata" scoped="" ref="0x7f29243d0590"/></from>
      <to><interface-ref name="DeviceMetadata" scoped="" ref="0x7f29243bb150"/></to>
    </wire>
    <wire loc="54:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923826a00"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f29243bbaa0"/></to>
    </wire>
    <wire loc="55:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923820ac0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f29243bbaa0"/></to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f29247a7d40"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923826a00"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="SingleChannel" scoped="" ref="0x7f29247a3450"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f292381ade0"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f292381ade0"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f29247331d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="ResourceRead" scoped="" ref="0x7f29247a9390"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f292381a1d0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f292381a1d0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f292458e6b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923817020"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923826a00"/></to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f2923819d30"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f2924732960"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f2923818650"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f2924731920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f292458dad0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924737cc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f2923809630"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923817020"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f29245861d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f292380a390"/></to>
    </wire>
    <wire loc="57:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f29237fb7e0"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923820ac0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="AdcConfigure" scoped="" ref="0x7f29244a5ce0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923820ac0"/></to>
    </wire>
    <wire loc="68:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29244a29c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f29237ff8a0"/></to>
    </wire>
    <wire loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x7f29237ff8a0"/></from>
      <to><interface-ref name="ClientResource" scoped="" ref="0x7f292458e6b0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f29244a3410"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f29237fd590"/></to>
    </wire>
    <wire loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f29237fd590"/></from>
      <to><interface-ref name="SingleChannel" scoped="" ref="0x7f29247331d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f29237fc590"/></from>
      <to><interface-ref name="MultiChannel" scoped="" ref="0x7f2924732960"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f29237fce80"/></from>
      <to><interface-ref name="Overflow" scoped="" ref="0x7f2924731920"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="AdcResource" scoped="" ref="0x7f292458dad0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x7f2924737cc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="ConfUp" scoped="" ref="0x7f29237ec630"/></from>
      <to><interface-ref name="AdcConfigure" scoped="" ref="0x7f29237fb7e0"/></to>
    </wire>
    <wire loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x7f29245861d0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfSub" scoped="" ref="0x7f29237ed390"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:../../../tos/system/MainC.nc">
      <documentation loc="45:../../../tos/system/MainC.nc">
        <short>&#10; MainC is the system interface the TinyOS boot sequence.</short>
        <long>&#10; MainC is the system interface the TinyOS boot sequence. It wires the&#10; boot sequence implementation to the scheduler and hardware resources.&#10;&#10; @author Philip Levis&#10; @date   August 6 2005&#10; @see    TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:../../../tos/platforms/telosa/PlatformC.nc">
      <documentation loc="35:../../../tos/platforms/telosa/PlatformC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre and Cory Sharp&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="3:../../../tos/platforms/telosa/PlatformP.nc" safe="">
      <module/>
    </component>
    <component qname="MotePlatformC" loc="1:../../../tos/platforms/telosb/MotePlatformC.nc" safe="">
      <module/>
    </component>
    <component qname="MoteClockC" loc="37:../../../tos/platforms/telosb/MoteClockC.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockC" loc="37:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <documentation loc="33:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430ClockP" loc="200:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="49:../../../tos/chips/msp430/x1xxx/McuSleepC.nc" safe="">
      <documentation loc="36:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the MSP430. Code for low power calculation copied from older&#10; msp430hardware.h by Vlado Handziski, Joe Polastre, and Cory Sharp.&#10;&#10;&#10; @author Philip Levis&#10; @author Vlado Handziski&#10; @author Joe Polastre&#10; @author Cory Sharp&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MoteClockP" loc="38:../../../tos/platforms/telosb/MoteClockP.nc">
      <documentation loc="33:../../../tos/platforms/telosb/MoteClockP.nc">
        <short>&#10; </short>
        <long>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlind.de>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="65:../../../tos/system/RealMainP.nc" safe="">
      <documentation loc="49:../../../tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="45:../../../tos/system/TinySchedulerC.nc">
      <documentation loc="33:../../../tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="53:../../../tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedsC" loc="45:../../../tos/system/LedsC.nc">
      <documentation loc="34:../../../tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:../../../tos/system/LedsP.nc" safe="">
      <documentation loc="35:../../../tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="40:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/PlatformLedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC" loc="47:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <documentation loc="37:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
        <short>&#10; Digital pin i/o abstraction, TI MSP430 processors.</short>
        <long>&#10; Digital pin i/o abstraction, TI MSP430 processors.&#10;&#10; @author Joe Polastre&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @author Joao Goncalves &#60;joao.m.goncalves@ist.utl.pt>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430GeneralIOC.P10" loc="79(HplMsp430GeneralIOC.P10):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P11" loc="79(HplMsp430GeneralIOC.P11):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P12" loc="79(HplMsp430GeneralIOC.P12):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P13" loc="79(HplMsp430GeneralIOC.P13):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P14" loc="79(HplMsp430GeneralIOC.P14):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P15" loc="79(HplMsp430GeneralIOC.P15):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P16" loc="79(HplMsp430GeneralIOC.P16):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P17" loc="79(HplMsp430GeneralIOC.P17):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:32">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P20" loc="79(HplMsp430GeneralIOC.P20):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P21" loc="79(HplMsp430GeneralIOC.P21):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P22" loc="79(HplMsp430GeneralIOC.P22):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P23" loc="79(HplMsp430GeneralIOC.P23):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P24" loc="79(HplMsp430GeneralIOC.P24):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P25" loc="79(HplMsp430GeneralIOC.P25):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P26" loc="79(HplMsp430GeneralIOC.P26):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P27" loc="79(HplMsp430GeneralIOC.P27):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:46">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P30" loc="79(HplMsp430GeneralIOC.P30):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P31" loc="79(HplMsp430GeneralIOC.P31):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P32" loc="79(HplMsp430GeneralIOC.P32):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P33" loc="79(HplMsp430GeneralIOC.P33):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P34" loc="79(HplMsp430GeneralIOC.P34):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P35" loc="79(HplMsp430GeneralIOC.P35):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P36" loc="79(HplMsp430GeneralIOC.P36):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P37" loc="79(HplMsp430GeneralIOC.P37):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:24">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:25">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:26">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:27">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P40" loc="79(HplMsp430GeneralIOC.P40):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P41" loc="79(HplMsp430GeneralIOC.P41):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P42" loc="79(HplMsp430GeneralIOC.P42):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P43" loc="79(HplMsp430GeneralIOC.P43):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P44" loc="79(HplMsp430GeneralIOC.P44):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P45" loc="79(HplMsp430GeneralIOC.P45):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P46" loc="79(HplMsp430GeneralIOC.P46):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P47" loc="79(HplMsp430GeneralIOC.P47):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:28">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:29">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:30">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:31">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P50" loc="79(HplMsp430GeneralIOC.P50):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P51" loc="79(HplMsp430GeneralIOC.P51):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P52" loc="79(HplMsp430GeneralIOC.P52):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P53" loc="79(HplMsp430GeneralIOC.P53):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P54" loc="79(HplMsp430GeneralIOC.P54):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P55" loc="79(HplMsp430GeneralIOC.P55):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P56" loc="79(HplMsp430GeneralIOC.P56):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P57" loc="79(HplMsp430GeneralIOC.P57):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:48">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P60" loc="79(HplMsp430GeneralIOC.P60):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P61" loc="79(HplMsp430GeneralIOC.P61):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P62" loc="79(HplMsp430GeneralIOC.P62):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P63" loc="79(HplMsp430GeneralIOC.P63):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P64" loc="79(HplMsp430GeneralIOC.P64):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P65" loc="79(HplMsp430GeneralIOC.P65):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P66" loc="79(HplMsp430GeneralIOC.P66):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOC.P67" loc="79(HplMsp430GeneralIOC.P67):../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplMsp430GeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:53">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led0Impl" loc="42(PlatformLedsC.Led0Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led1Impl" loc="42(PlatformLedsC.Led1Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="PlatformLedsC.Led2Impl" loc="42(PlatformLedsC.Led2Impl):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveC" loc="7:SlaveC.nc">
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMaster" loc="44(SlaveAppC.TimerMaster):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:../../../tos/system/TimerMilliP.nc">
      <documentation loc="34:../../../tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="43:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
        <short>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.</short>
        <long>&#10; HilTimerMilliC provides a parameterized interface to a virtualized&#10; millisecond timer.  TimerMilliC in tos/system/ uses this component to&#10; allocate new timers.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C" loc="41(HilTimerMilliC.AlarmMilli32C):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom" loc="41(HilTimerMilliC.AlarmMilli32C.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer" loc="37(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzMapC" loc="48:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <documentation loc="34:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
        <short>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.</short>
        <long>&#10; MSP430Timer32khzMapC presents as paramaterized interfaces all of&#10; the 32khz hardware timers on the MSP430 that are available for&#10; compile time allocation by &#34;new Alarm32khz16C()&#34;, &#34;new&#10; AlarmMilli32C()&#34;, and so on.  &#10;&#10; Platforms based on the MSP430 are * encouraged to copy in and&#10; override this file, presenting only the * hardware timers that are&#10; available for allocation on that platform.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @version $Revision: 1.5 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC" loc="48:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <documentation loc="36:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA" loc="41(Msp430TimerC.Msp430TimerA):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:302">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:368">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:352">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB" loc="41(Msp430TimerC.Msp430TimerB):../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerP"/>
        <arguments>
          <value cst="I:286">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:400">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:384">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:256">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:512">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA0" loc="41(Msp430TimerC.Msp430TimerA0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:354">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:370">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA1" loc="41(Msp430TimerC.Msp430TimerA1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:356">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:372">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerA2" loc="41(Msp430TimerC.Msp430TimerA2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:358">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:374">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB0" loc="41(Msp430TimerC.Msp430TimerB0):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:386">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:402">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB1" loc="41(Msp430TimerC.Msp430TimerB1):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:388">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:404">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB2" loc="41(Msp430TimerC.Msp430TimerB2):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:390">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:406">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB3" loc="41(Msp430TimerC.Msp430TimerB3):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:392">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:408">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB4" loc="41(Msp430TimerC.Msp430TimerB4):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:394">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:410">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB5" loc="41(Msp430TimerC.Msp430TimerB5):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:396">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:412">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerC.Msp430TimerB6" loc="41(Msp430TimerC.Msp430TimerB6):../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430TimerCapComP"/>
        <arguments>
          <value cst="I:398">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <value cst="I:414">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430TimerCommonP" loc="2:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc" safe="">
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm" loc="43(HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="41:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
        <short>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.</short>
        <long>&#10; CounterMilli32C provides at 32-bit counter at 1024 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC" loc="41:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
        <short>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.</short>
        <long>&#10; Msp430Counter32khC provides the standard 32khz counter for the MSP430.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430Counter32khzC.Counter" loc="42(Msp430Counter32khzC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C.Transform" loc="54(CounterMilli32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmMilli32C.Transform" loc="51(HilTimerMilliC.AlarmMilli32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):../../../tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="55(HilTimerMilliC.VirtualizeTimerC):../../../tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <value cst="I:9">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC.VT" loc="61(HilTimerMilliC.VirtualizeTimerC.VT):../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerImplP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f29257bd530"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.TimerMiSlot" loc="44(SlaveAppC.TimerMiSlot):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.TimerLeds" loc="44(SlaveAppC.TimerLeds):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageC" loc="59:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <documentation loc="49:../../../tos/platforms/telosa/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the Telos platform.</short>
        <long>&#10;&#10; The Active Message layer on the Telos platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.9 $ $Date: 2010-06-29 22:07:55 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <configuration/>
    </component>
    <component qname="CC2420RadioC" loc="41:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <documentation loc="24:../../../tos/chips/cc2420/CC2420RadioC.nc">
        <short>&#10; Radio wiring for the CC2420.</short>
        <long>&#10; Radio wiring for the CC2420.  This layer seperates the common&#10; wiring of the lower-layer components of the CC2420 stack and makes&#10; them available to clients like the AM stack and the IEEE802.15.4&#10; stack.&#10;&#10; This component provides the highest-level internal interface to&#10; other components of the CC2420 stack.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @author Stephen Dawson-Haggerty&#10; @version $Revision: 1.2 $ $Date: 2009/08/20 01:37:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaC" loc="42:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-05-14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.12 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="42:../../../tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="40(AlarmMultiplexC.Alarm):../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C):../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC" loc="41(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer" loc="37(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm" loc="43(AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="41:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
        <short>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.</short>
        <long>&#10; Counter32khz32C provides at 32-bit counter at 32768 ticks per second.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Counter32khz32C.Transform" loc="54(Counter32khz32C.Transform):../../../tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform" loc="51(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of general-purpose I/O for the ChipCon CC2420&#10; radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420PinsC.CCAM" loc="42(HplCC2420PinsC.CCAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.CSNM" loc="42(HplCC2420PinsC.CSNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOM" loc="42(HplCC2420PinsC.FIFOM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.FIFOPM" loc="42(HplCC2420PinsC.FIFOPM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.RSTNM" loc="42(HplCC2420PinsC.RSTNM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.SFDM" loc="42(HplCC2420PinsC.SFDM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420PinsC.VRENM" loc="42(HplCC2420PinsC.VRENM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of interrupts and captures for the ChipCon&#10; CC2420 radio connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="47(HplCC2420InterruptsC.CaptureSFDC):../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430InterruptC" loc="39:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
        <short>&#10; HPL for the TI MSP430 family of microprocessors.</short>
        <long>&#10; HPL for the TI MSP430 family of microprocessors. This provides an&#10; abstraction for GPIO interrupts.&#10;&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430InterruptP" loc="51:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc" safe="">
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptCCAC" loc="50(HplCC2420InterruptsC.InterruptCCAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="50(HplCC2420InterruptsC.InterruptFIFOPC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008-06-23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:../../../tos/system/StateImplC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:../../../tos/system/StateImplP.nc" safe="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="40(CC2420SpiWireC.HplCC2420SpiC):../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC" loc="79(CC2420SpiWireC.HplCC2420SpiC.SpiC):../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <instance number="0">
        <component-ref qname="Msp430Spi0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P" loc="71:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.6 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDma0P.SpiP" loc="73(Msp430SpiNoDma0P.SpiP):../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430SpiNoDmaP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430Usart0C" loc="74:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <documentation loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
        <short>&#10; An HPL abstraction of USART0 on the MSP430.</short>
        <long>&#10; An HPL abstraction of USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Joe Polastre&#10; @version $Revision: 1.7 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplMsp430Usart0P" loc="54:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC" loc="39(CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC):../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Usart0C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.UsartShareP" loc="37(Msp430UsartShare0P.UsartShareP):../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430UsartShareP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC" loc="56(Msp430UsartShare0P.ArbiterC):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Msp430Usart0.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Queue" loc="42(Msp430UsartShare0P.ArbiterC.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430UsartShare0P.ArbiterC.Arbiter" loc="96(Msp430UsartShare0P.ArbiterC.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplMsp430I2C0C" loc="2:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <configuration/>
    </component>
    <component qname="HplMsp430I2C0P" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:../../../tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:../../../tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="11:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <configuration/>
    </component>
    <component qname="LocalIeeeEui64P" loc="3:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <module/>
    </component>
    <component qname="Ds2411C" loc="7:../../../tos/chips/ds2411/Ds2411C.nc">
      <configuration/>
    </component>
    <component qname="Ds2411P" loc="9:../../../tos/chips/ds2411/Ds2411P.nc">
      <module/>
    </component>
    <component qname="OneWireMasterC" loc="6:../../../tos/lib/onewire/OneWireMasterC.nc">
      <documentation loc="1:../../../tos/lib/onewire/OneWireMasterC.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="OneWireMasterP" loc="9:../../../tos/lib/onewire/OneWireMasterP.nc">
      <documentation loc="2:../../../tos/lib/onewire/OneWireMasterP.nc">
        <short>&#10; Dallas/Maxim 1wire bus master&#10;&#10; Only supports one device on the 1-wire bus.</short>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="39:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="52(BusyWaitMicroC.BusyWaitCounterC):../../../tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec4640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2925ec49b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430CounterMicroC" loc="44:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
        <short>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.</short>
        <long>&#10; Msp430CounterMicroC provides the standard 1 uis (or 1 us) counter for the&#10; MSP430.   If your base clock is in units of binary hertz then 1 uis, decimal&#10; hertz it will be 1us.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430CounterMicroC.Counter" loc="42(Msp430CounterMicroC.Counter):../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec4640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2925ec49b0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplDs2411C" loc="1:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <configuration/>
    </component>
    <component qname="HplDs2411C.MspGpio" loc="42(HplDs2411C.MspGpio):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="Ds2411PowerControlC" loc="12:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="45:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @author JeongGil Ko&#10; @author Razvan Musaloiu-E&#10; @version $Revision: 1.21 $ $Date: 2009/09/17 23:36:36 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="46(CC2420PacketC.CounterToLocalTimeC):../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="44(CC2420PacketC.DummyTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="43:../../../tos/system/RandomC.nc">
      <documentation loc="33:../../../tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:../../../tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:../../../tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:../../../tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="44:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC.FcfsResourceQueueC" loc="42(CC2420TinyosNetworkC.FcfsResourceQueueC):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Wakeup interval is always 0 (always on)&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):../../../tos/system/StateC.nc">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="46:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="33:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.22 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SlaveAppC.AMSenderC" loc="47(SlaveAppC.AMSenderC):../../../tos/system/AMSenderC.nc">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC" loc="47(SlaveAppC.AMSenderC.SenderC):../../../tos/system/DirectAMSenderC.nc">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP" loc="43(SlaveAppC.AMSenderC.SenderC.AMQueueEntryP):../../../tos/system/AMQueueEntryP.nc">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:../../../tos/system/AMQueueP.nc">
      <documentation loc="33:../../../tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):../../../tos/system/AMQueueImplP.nc">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.AMReceiverC" loc="43(SlaveAppC.AMReceiverC):../../../tos/system/AMReceiverC.nc">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:17">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.Sht11" loc="45(SlaveAppC.Sht11):../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.Sht11.SensirionSht11ReaderP" loc="45(SlaveAppC.Sht11.SensirionSht11ReaderP):../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <instance number="0">
        <component-ref qname="SensirionSht11ReaderP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
        <short>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform.</short>
        <long>&#10; HalSensirionSht11C is an advanced access component for the&#10; Sensirion SHT11 model humidity and temperature sensor, available on&#10; the telosb platform. This component provides the SensirionSht11&#10; interface, which offers full control over the device. Please&#10; acquire the Resource before using it.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HalSensirionSht11C.SensirionSht11LogicP" loc="53(HalSensirionSht11C.SensirionSht11LogicP):../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SensirionSht11LogicP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
        <short>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them.</short>
        <long>&#10; HplSensirionSht11C is a low-level component, intended to provide&#10; the physical resources used by the Sensirion SHT11 sensor on the&#10; telosb platform so that the chip driver can make use of them. You&#10; really shouldn't be wiring to this, unless you're writing a new&#10; Sensirion SHT11 driver.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.6 $ $Date: 2007-02-04 19:56:29 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.DATAM" loc="42(HplSensirionSht11C.DATAM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SCKM" loc="42(HplSensirionSht11C.SCKM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.PWRM" loc="42(HplSensirionSht11C.PWRM):../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="Msp430GpioC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11P" loc="42:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
        <short>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.</short>
        <long>&#10; HplSensirionSht11P is a low-level component that controls power for&#10; the Sensirion SHT11 sensor on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:45 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.TimerMilliC" loc="44(HplSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.InterruptDATAC" loc="50(HplSensirionSht11C.InterruptDATAC):../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430InterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter" loc="56(HplSensirionSht11C.Arbiter):../../../tos/system/FcfsArbiterC.nc">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht11.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Queue" loc="42(HplSensirionSht11C.Arbiter.Queue):../../../tos/system/FcfsResourceQueueC.nc">
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.Arbiter.Arbiter" loc="96(HplSensirionSht11C.Arbiter.Arbiter):../../../tos/system/ArbiterP.nc">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC" loc="67(HplSensirionSht11C.SplitControlPowerManagerC):../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager" loc="58(HplSensirionSht11C.SplitControlPowerManagerC.PowerManager):../../../tos/lib/power/PowerManagerP.nc">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="HalSensirionSht11C.TimerMilliC" loc="44(HalSensirionSht11C.TimerMilliC):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.S10871" loc="40(SlaveAppC.S10871):../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS10871TsrC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.S10871.AdcReadClientC" loc="47(SlaveAppC.S10871.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AdcP" loc="36:../../../tos/chips/msp430/adc12/AdcP.nc" safe="">
      <module/>
    </component>
    <component qname="SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient" loc="43(SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <configuration/>
    </component>
    <component qname="Msp430Adc12ImplP" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc" safe="">
      <module/>
    </component>
    <component qname="HplAdc12P" loc="58:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <documentation loc="41:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; Older msp430 include files defined ADC_VECTOR (defined to be ADC12_VECTOR)&#10; new includes (TI_HEADERS etc) don't define ADC_VECTOR.  Use the blessed&#10; vector: ADC12_VECTOR.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter" loc="83(Msp430Adc12P.Arbiter):../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleRoundRobinArbiterC"/>
        <arguments>
          <value cst="S:Msp430Adc12C.Resource">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Queue" loc="42(Msp430Adc12P.Arbiter.Queue):../../../tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Msp430Adc12P.Arbiter.Arbiter" loc="49(Msp430Adc12P.Arbiter.Arbiter):../../../tos/system/SimpleArbiterP.nc">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP" loc="50:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
        <short> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter.</short>
        <long> &#10; This component is meant to intercept requests to the &#60;code>Resource&#60;/code>&#10; interface on their way to the adc arbiter. It checks whether the client's&#10; adc configuration requires the internal reference voltage generator of the&#10; MSP430 to be enabled during the conversion by inspecting the client's&#10; configuration data (using the &#60;code>AdcConfigure&#60;/code> interface). If so it&#10; makes sure that Resource.granted() is held back until the reference voltage&#10; is stable. Clients SHOULD NOT wire to &#60;code>Msp430RefVoltArbiterP&#60;/code> but&#10; to the Resource interface provided by&#10; &#60;code>Msp430Adc12ClientAutoRVGC&#60;/code>.&#10; &#10; @author Jan Hauer&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltGeneratorP" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterImplP" loc="32:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <module/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOnDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffDelayTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer" loc="44(Msp430RefVoltArbiterP.SwitchOffSettleTimer):../../../tos/system/TimerMilliC.nc">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.S10871.AdcReadStreamClientC" loc="47(SlaveAppC.S10871.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP" loc="19:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <documentation loc="10:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
        <short>&#10; Support component for AdcReadStreamClientC.</short>
        <long>&#10; Support component for AdcReadStreamClientC.&#10;&#10; @author David Gay&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AdcStreamP" loc="46:../../../tos/chips/msp430/adc12/AdcStreamP.nc" safe="">
      <documentation loc="39:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
        <short>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).</short>
        <long>&#10; Convert MSP430 HAL A/D interface to the HIL interfaces (adapted atmega code).&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm" loc="41(WireAdcStreamP.Alarm):../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom" loc="41(WireAdcStreamP.Alarm.AlarmFrom):../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Alarm32khz16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer" loc="37(WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer):../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Timer32khzC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm" loc="43(WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm):../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.Alarm.Transform" loc="51(WireAdcStreamP.Alarm.Transform):../../../tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="WireAdcStreamP.ArbitrateReadStream" loc="23(WireAdcStreamP.ArbitrateReadStream):../../../tos/system/ArbitratedReadStreamC.nc">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadStreamC"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
          </value>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient" loc="43(SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrP" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
        <short>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SlaveAppC.S1087" loc="40(SlaveAppC.S1087):../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HamamatsuS1087ParC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.S1087.AdcReadClientC" loc="47(SlaveAppC.S1087.AdcReadClientC):../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient" loc="43(SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="SlaveAppC.S1087.AdcReadStreamClientC" loc="47(SlaveAppC.S1087.AdcReadStreamClientC):../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadStreamClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient" loc="43(SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient):../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ClientAutoRVGC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC" loc="42(SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC):../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="Msp430Adc12ConfAlertC"/>
      </instance>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParP" loc="42:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <documentation loc="34:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
        <short>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParP is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplMsp430GeneralIOP" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc" abstract="" safe="">
      <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
        <short>&#10; Low level digital port access for Msp430 chips.</short>
        <long>&#10; Low level digital port access for Msp430 chips.&#10; should work on all three major families, x1, x2, and x5.&#10;&#10; Simple GeneralIO.&#10;&#10; Depending on the optimization level of the toolchain and which toolchain,&#10; access may or may not be single instructions (ie. atomic).  When not sure&#10; of exactly what instructions are being used one should use the default&#10; which is to surround accesses with &#34;atomic&#34;.&#10;&#10; The define MSP430_PINS_ATOMIC_LOWLEVEL is used to control whether accesses&#10; are protected from interrupts (via &#34;atomic&#34;).  If not defined, it will&#10; default to &#34;atomic&#34;.   To generated optimized accesses, define it to be&#10; empty.  From your Makefile, you can do&#10;&#10;    &#34;CFLAGS += -DMSP430_PINS_ATOMIC_LOWLEVEL=&#34;.&#10;&#10; Any override will typically be done either in the platform's hardware.h&#10; or in the applications &#34;Makefile&#34;.&#10;&#10; WARNING: When MSP430_PINS_ATOMIC_LOWLEVEL is blank, this code makes&#10; the assumption that access to the various registers occurs with single&#10; instructions and thus is atomic.  It has been verified that with -Os&#10; optimization, that indeed register access is via single instructions.&#10; Other optimizations may not result in single instructions.  In those&#10; cases, you should use the default value which causes &#34;atomic&#34; to protect&#10; access from interrupts.&#10;&#10; If you turn off the atomic protection it is assumed that you know&#10; what you are doing and will make sure the machine state is reasonable&#10; for what you are doing.&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_in_addr" ref="0x7f2925d09810" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_out_addr" ref="0x7f2925d09bc0" loc="81:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_dir_addr" ref="0x7f2925d08020" loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="port_sel_addr" ref="0x7f2925d083d0" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
        </constant>
        <constant name="pin" ref="0x7f2925d08740" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
          <component-ref qname="HplMsp430GeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430GpioC" loc="42:../../../tos/chips/msp430/pins/Msp430GpioC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
        <short>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the general-purpose I/O abstraction&#10; for the TI MSP430 microcontroller.&#10;&#10; @author Joe Polastre&#10; @see  Please refer to TEP 117 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:../../../tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:../../../tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="41:../../../tos/chips/msp430/timer/AlarmMilli32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
        <short>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; </short>
        <long>&#10; AlarmMilliC is the alarm for async millisecond alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz16C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz16C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Timer32khzC" loc="37:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430TimerP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerP.nc" abstract="" safe="">
      <documentation loc="1:../../../tos/chips/msp430/msp430regtypes.h">
        <short>&#10; Copyright (c) 2011, 2014, 2016 Eric B.</short>
        <long>&#10; Copyright (c) 2011, 2014, 2016 Eric B. Decker&#10; Copyright (c) 2009 DEXMA SENSORS SL&#10; Copyright (c) 2000-2003 The Regents of the University of California.  &#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10;&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10;&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Xavier Orduna &#60;xorduna@dexmatech.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxIV_addr" ref="0x7f29259ce020" loc="42:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxR_addr" ref="0x7f29259ce3c0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCTL_addr" ref="0x7f29259ce770" loc="44:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIFG" ref="0x7f29259ceaf0" loc="45:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCLR" ref="0x7f29259cee70" loc="46:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxIE" ref="0x7f29259cd210" loc="47:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL0" ref="0x7f29259cd5a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxSSEL1" ref="0x7f29259cd930" loc="49:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </constant>
        <constant name="isClockSourceAsync" ref="0x7f29259cdd00" loc="50:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
          <component-ref qname="Msp430TimerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430TimerCapComP" loc="41:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author: Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="TxCCTLx_addr" ref="0x7f2925991950" loc="42:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </constant>
        <constant name="TxCCRx_addr" ref="0x7f2925991d20" loc="43:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
          <component-ref qname="Msp430TimerCapComP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430AlarmC" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
        <short>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.</short>
        <long>&#10; Msp430Alarm is a generic component that wraps the MSP430 HPL timers and&#10; compares into a TinyOS Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f29258accb0" loc="43:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
          <component-ref qname="Msp430AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f29258accb0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430CounterC" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
        <short>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.</short>
        <long>&#10; Msp430Counter is a generic component that wraps the MSP430 HPL timers into a&#10; TinyOS Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x7f292586aa40" loc="42:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
          <component-ref qname="Msp430CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x7f292586aa40"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:../../../tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f2925853570" loc="55:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f2925853570"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f2925853d40" loc="56:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f2925853d40"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f2925852160" loc="57:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f2925852160"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f2925852940" loc="58:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f2925852940"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f2925852d10" loc="59:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x7f2925851540" loc="60:../../../tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x7f2925851540"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:../../../tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x7f29258766d0" loc="52:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x7f29258766d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x7f292582f020" loc="53:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x7f292582f020"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x7f292582f410" loc="54:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x7f292582f410"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x7f292582fbf0" loc="55:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x7f292582fbf0"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x7f292582e020" loc="56:../../../tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f29257f4cc0" loc="46:../../../tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f29257f4cc0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10; See VirtualizeTimerImplC.nc for the details of the implementation.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; TimeSkew is optional.  A Platform will export TimeSkew if it supports&#10; updating underlying time h/w.  Advanced topic.&#10;&#10; If a platform doesn't export TimeSkew, there is no impact on the operation&#10; inside VirtualizeTimerImpl.  The Platform is responsible for wiring to&#10; TimeSkew.  For example, the exp_msp432 Platform exports TimeSkew which&#10; is wired by tos/chips/msp432/timer/HilTimerMilliC.nc.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f29257bd530" loc="55:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f29257bd530"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f29257bd880" loc="56:../../../tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeTimerImplP" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being&#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10;&#10; DEFINES:&#10;&#10;   TRACE_VTIMERS:     Define TRACE_VTIMERS in your platform.h to enable&#10;                      tracing of virtual timers.&#10;&#10;   TRACE_VTIMERS_ENTRIES: number of entries in the trace buffer.  Its&#10;                      circular.  Defaults to (max_timers) * 8.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f29257af980" loc="61:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f29257af980"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7f29257afcd0" loc="62:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
          <component-ref qname="VirtualizeTimerImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:../../../tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f292573a550" loc="46:../../../tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f292573a550"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of 32khz alarms for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="41:../../../tos/chips/msp430/timer/Alarm32khz32C.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
        <short>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; </short>
        <long>&#10; Alarm32khzC is the alarm for async 32khz alarms&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @see  Please refer to TEP 102 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="GpioCaptureC" loc="47:../../../tos/chips/msp430/timer/GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; The default for GpioCapture is CCIxA.  Other channels are available&#10; (like B) but they need to be hardcoded in another module.  See&#10; tos/platforms/exp5438_2520/hardware/cc2520/P81SfdCaptureC.nc&#10;&#10; Lower levels have been modified to support being able to change&#10; CCIS in the control registers.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430InterruptC" loc="50:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc" abstract="" safe="">
      <documentation loc="34:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
        <short>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.</short>
        <long>&#10; Implementation of the GPIO interrupt abstraction for&#10; the TI MSP430 microcontroller.   X1/X2 processors.&#10;&#10; The X5 processors clear the highest IFG automatically when the IV&#10; has been read.   While the X1/X2 processors don't do this.   This&#10; means the interrupt handler on the X1/X2 puppies have to do it&#10; themselves.  Hence different files.&#10;&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @see  Please refer to TEP 117 for more information about this component&#10;          and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2009-08-14 20:33:43 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:../../../tos/system/StateC.nc" abstract="">
      <documentation loc="32:../../../tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="40:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.</short>
        <long>&#10; HPL implementation of the SPI bus for the ChipCon CC2420 radio&#10; connected to a TI MSP430 processor.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:44 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Spi0C" loc="79:../../../tos/chips/msp430/usart/Msp430Spi0C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430SpiNoDmaP" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc" abstract="">
      <documentation loc="66:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de> (bugfix in continueOp())&#10; @version $Revision: 1.8 $ $Date: 2010-06-29 22:07:45 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Usart0C" loc="39:../../../tos/chips/msp430/usart/Msp430Usart0C.nc" abstract="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
        <short>&#10; Provides an interface for USART0 on the MSP430.</short>
        <long>&#10; Provides an interface for USART0 on the MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-05-21 22:11:57 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430UsartShareP" loc="37:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc" abstract="" safe="">
      <documentation loc="32:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-26 04:39:08 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="56:../../../tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="35:../../../tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default&#10; user.  If a new request is made, the default user will release the resource,&#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f29250915e0" loc="56:../../../tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:../../../tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x7f29250869b0" loc="42:../../../tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="96:../../../tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="31:../../../tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo,&#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10;&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this&#10;        resource&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;&#10; WARNING: This Arbiter differs from the main TinyOS trunk Arbiter!.....   It&#10; has the following features/bug fixes:&#10;&#10; ResourceRequested can be used to allow a holder of a resource to release&#10; and request upon an incoming request from another client.&#10;&#10; The previous arbiter (if no other resources queued up) would always immediately&#10; grant to the original holder (ie. the new requester would be starved).   And other&#10; strange, out of order behaviour.&#10;&#10; The following is the sequence we are talking about:&#10;&#10;  Client 1:                Client 2:&#10;  Holding resource&#10;                           new request comes up&#10;  Sees ResourceRequested&#10;      releases (this should let the new resource (or any other queued client) get the resource)&#10;      requests&#10;                           client 2 gains control.&#10;&#10; There does need to be a mechanism to let a holder of the resource to check to see&#10; if (and possibly how many) other clients are waiting for the resource.  There are&#10; cases where using the event (ResourceRequested) doesn't work because the clients&#10; have already posted their requests prior to the eventual resource holder gaining&#10; control.   IT IS VERY EASY TO HANG THE ARBITER BECAUSE OF MISSED EVENTS.  Use&#10; Request/Release at your own risk.&#10;&#10;&#10; Protection has been put in to insure that a given client can not end up with&#10; multiple requests queued up.   This would give the client an unfair advantage&#10; and also would occur non-uniformly (depends on the sequence of execution).   This&#10; problem could occur because while the Queueing mechanism does protect against multiple&#10; instances of the id in the queue, there is also the reqResId cell which is effectively&#10; the head of the queue.   This must also be properly handled to prevent a client from&#10; getting into the queue multiple times.&#10;&#10;&#10; Provisions have been made to support DefaultOwners actually doing something with the&#10; hardware vs. just handling power.  PREGRANT helps with this.  Also the resId being&#10; default_owner_id indicates that h/w events should be steered to the DefaultOwner.&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x7f292506bcc0" loc="96:../../../tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:../../../tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2924e20020" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2924e20020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2924e207b0" loc="52:../../../tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2924e207b0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:../../../tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f29249fb660" loc="47:../../../tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="DirectAMSenderC" loc="47:../../../tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:../../../tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x7f29249f2360" loc="47:../../../tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:../../../tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f29249ea0d0" loc="43:../../../tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:../../../tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @author Eric B. Decker (cire831@gmail.com)&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x7f29249d0c80" loc="45:../../../tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:../../../tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:../../../tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x7f2924966330" loc="43:../../../tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11C" loc="45:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
        <short>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform.</short>
        <long>&#10; SensirionSht11C is a top-level access component for the Sensirion&#10; SHT11 model humidity and temperature sensor, available on the&#10; telosb platform. Because this component represents one physical&#10; device, simultaneous calls to read temperature and humidity will be&#10; arbitrated and executed in sequential order. Feel free to read both&#10; at the same time, just be aware that they'll come back&#10; sequentially.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SensirionSht11ReaderP" loc="45:../../../tos/chips/sht11/SensirionSht11ReaderP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SensirionSht11LogicP" loc="53:../../../tos/chips/sht11/SensirionSht11LogicP.nc" abstract="">
      <documentation loc="35:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
        <short>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11LogicP contains the actual driver logic needed to&#10; read from the Sensirion SHT11 temperature/humidity sensor. It&#10; depends on 2 underlying GeneralIO interfaces, one for the data pin&#10; and one for the clock pin, and one underlying GpioInterrupt.  It&#10; provides the HAL-level SensirionSht11 interface. It's generic, so&#10; you can instantiate it multiple times if you have more than one&#10; Sensirion SHT11 attached to a node. &#10; &#10; &#60;p>&#10; This code assumes that the MCU clock is less than 10 MHz.  If you&#10; ever run this on a faster MCU, you'll need to insert a lot of&#10; waits to keep the Sensirion happy.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="67:../../../tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="58:../../../tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="41:../../../tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS10871TsrC" loc="40:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
        <short>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.</short>
        <long>&#10; HamamatsuS10871TsrC is a driver for a total solar radiation sensor&#10; available on the telosb platform.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadClientC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Msp430Adc12ClientAutoRVGC" loc="43:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
        <short> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.</short>
        <long> &#10; This component virtualizes access to the HAL of the MSP430 ADC12.&#10; Reference voltage is enabled automatically as required by the configuration.&#10; &#10; @author Jan Hauer &#10;&#10; @see  Please refer to the README.txt and TEP 101 for more information about&#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleRoundRobinArbiterC" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc" abstract="">
      <documentation loc="62:../../../tos/system/SimpleRoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x7f292463eb30" loc="83:../../../tos/system/SimpleRoundRobinArbiterC.nc">
          <component-ref qname="SimpleRoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:../../../tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x7f29245fe730" loc="42:../../../tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:../../../tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:../../../tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Msp430Adc12ConfAlertC" loc="42:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc" abstract="">
      <documentation loc="33:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
        <short> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.</short>
        <long> &#10; The only purpose of this component is to generate a nesC warning&#10; if someone has wired to Msp430Adc12ClientAutoRVGC or &#10; Msp430Adc12ClientAutoDMA_RVGC and forgotten to wire to AdcConfigure.&#10; (nesC optimizes all of its code away).&#10;&#10; @author: Jan Hauer&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadStreamClientC" loc="47:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc" abstract="">
      <documentation loc="36:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
        <short> &#10; This component virtualizes the HIL of ADC12 on MSP430.</short>
        <long> &#10; This component virtualizes the HIL of ADC12 on MSP430. A client must wire&#10; &#60;code>AdcConfigure&#60;/code> to a component that returns the client's adc&#10; configuration data.&#10;&#10; @author Jan Hauer &#10; @see  Please refer to the README.txt and TEP 101 for more information about &#10; this component and its intended use.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbitratedReadStreamC" loc="23:../../../tos/system/ArbitratedReadStreamC.nc" abstract="">
      <documentation loc="10:../../../tos/system/ArbitratedReadStreamC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using&#10; ArbitratedReadStreamC in a safe way.&#10;&#10; @param width_t Width of the underlying ReadStream interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <constant name="nClients" ref="0x7f2924429c40" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
        </constant>
        <typedef name="val_t" ref="0x7f2924426020" loc="23:../../../tos/system/ArbitratedReadStreamC.nc">
          <component-ref qname="ArbitratedReadStreamC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2924426020"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="HamamatsuS1087ParC" loc="40:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc" abstract="">
      <documentation loc="32:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
        <short>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform.</short>
        <long>&#10; HamamatsuS1087ParC is a driver for a photosynthetically-active&#10; radiation sensor available on the telosb platform. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007-04-13 21:46:18 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7f2925eb8a10" loc="58:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925eb8a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925eb8d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f2925eb9560" loc="57:../../../tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2925eb9560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2925eb98e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2925ebb960" loc="42:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2925ebb960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925ebbce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f2925eacb60" loc="43:../../../tos/platforms/telosa/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f2925eacb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f2925eb5ca0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f2925eb5e30"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f2925eb5340"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f2925eb54d0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f2925eb5660"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f2925eb57f0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f2925eb5980"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f2925eb5b10"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f2925eb5020"/>
        <function-ref name="node_id" scoped="" ref="0x7f2925eb51b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7f2925ea7120" loc="7:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteInit" scoped="" ref="0x7f2925ea7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925ea74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2925eb4cb0" loc="4:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2925eb4cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925ea90a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteClockInit" ref="0x7f2925ea89f0" loc="6:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f2925ea89f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925ea8d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x7f2925ea7800" loc="8:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LedsInit" scoped="" ref="0x7f2925ea7800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925ea7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Platform" ref="0x7f2925ea9390" loc="5:../../../tos/platforms/telosa/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f2925ea9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f2925ea84d0"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f2925ea8660"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f2925ea9a30"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f2925ea9bc0"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f2925ea9d50"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f2925ea8020"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f2925ea81b0"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f2925ea8340"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f2925ea9710"/>
        <function-ref name="node_id" scoped="" ref="0x7f2925ea98a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2925e8f1a0" loc="2:../../../tos/platforms/telosb/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2925e8f1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925e8f520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MoteClockInit" ref="0x7f2925eaa390" loc="39:../../../tos/platforms/telosb/MoteClockC.nc">
      <component-ref qname="MoteClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MoteClockInit" scoped="" ref="0x7f2925eaa390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925eaa710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f2925e6e850" loc="40:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2925e6e850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2925e747f0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2925e6ed60"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2925e74020"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2925e741b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2925e6ebd0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2925e74340"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2925e744d0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2925e74660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2925e75280" loc="39:../../../tos/chips/msp430/clock_bcs/Msp430ClockC.nc">
      <component-ref qname="Msp430ClockC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2925e75280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925e75600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430ClockInit" ref="0x7f2925e5d180" loc="203:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2925e5d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2925e5c020"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2925e5d690"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2925e5d820"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2925e5d9b0"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2925e5d500"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2925e5db40"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2925e5dcd0"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2925e5de60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7f2925e5c320" loc="204:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2925e5c320"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f2925e5c6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2925e5fae0" loc="202:../../../tos/chips/msp430/clock_bcs/Msp430ClockP.nc">
      <component-ref qname="Msp430ClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2925e5fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925e5fe60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7f2925fdec80" loc="55:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerOverride" scoped="" ref="0x7f2925fdec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7f29261b90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7f292613b9a0" loc="51:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f292613b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f292613bd20"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f2926256020"/>
        <function-ref name="sleep" scoped="" ref="0x7f29262561b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7f292607c3d0" loc="52:../../../tos/chips/msp430/x1xxx/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuPowerState" scoped="" ref="0x7f292607c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7f292607c750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430ClockInit" ref="0x7f2925e29240" loc="39:../../../tos/platforms/telosb/MoteClockP.nc">
      <component-ref qname="MoteClockP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430ClockInit" scoped="" ref="0x7f2925e29240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430ClockInit"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultInitClocks" scoped="" ref="0x7f2925e281b0"/>
        <function-ref name="initTimerB" scoped="" ref="0x7f2925e29750"/>
        <function-ref name="defaultInitTimerA" scoped="" ref="0x7f2925e298e0"/>
        <function-ref name="initTimerA" scoped="" ref="0x7f2925e29a70"/>
        <function-ref name="defaultInitTimerB" scoped="" ref="0x7f2925e295c0"/>
        <function-ref name="defaultSetupDcoCalibrate" scoped="" ref="0x7f2925e29c00"/>
        <function-ref name="setupDcoCalibrate" scoped="" ref="0x7f2925e29d90"/>
        <function-ref name="initClocks" scoped="" ref="0x7f2925e28020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7f2925e1b3a0" loc="69:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SoftwareInit" scoped="" ref="0x7f2925e1b3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925e1b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7f2925eb7aa0" loc="66:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2925eb7aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2925eb7e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7f2925e1cb60" loc="68:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PlatformInit" scoped="" ref="0x7f2925e1cb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925e1b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7f2925e1c140" loc="67:../../../tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2925e1c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925e1c4c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2925e1c650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2925e1c7e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2926356940" loc="47:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f2926356940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2926356cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2926356e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f29263631e0" loc="46:../../../tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f29263631e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2926363560"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f29263636f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2926363880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7f2925f07040" loc="55:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TaskBasic" scoped="" ref="0x7f2925f07040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2925f073c0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2925f07550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7f2925f02490" loc="56:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="McuSleep" scoped="" ref="0x7f2925f02490"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="irq_preamble" scoped="" ref="0x7f2925f02810"/>
        <function-ref name="irq_postamble" scoped="" ref="0x7f2925f029a0"/>
        <function-ref name="sleep" scoped="" ref="0x7f2925f02b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7f2925f08140" loc="54:../../../tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Scheduler" scoped="" ref="0x7f2925f08140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925f084c0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7f2925f08650"/>
        <function-ref name="runNextTask" scoped="" ref="0x7f2925f087e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2925e059a0" loc="46:../../../tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2925e059a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2925e05d20"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2925e10020"/>
        <function-ref name="led1On" scoped="" ref="0x7f2925e101b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2925e10340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2925e104d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925e10660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2925e107f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2925e10e30"/>
        <function-ref name="set" scoped="" ref="0x7f2925e10980"/>
        <function-ref name="led0On" scoped="" ref="0x7f2925e10b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f2925e10ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7f2925dfab50" loc="50:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f2925dfab50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925e00020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925e001b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925e00340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925e004d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925e00660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925e007f0"/>
        <function-ref name="set" scoped="" ref="0x7f2925e00980"/>
        <function-ref name="clr" scoped="" ref="0x7f2925e00b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2925e02020" loc="46:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2925e02020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925e023a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7f2925e00e30" loc="51:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f2925e00e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925dff1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925dff370"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925dff500"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925dff690"/>
        <function-ref name="get" scoped="" ref="0x7f2925dff820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925dff9b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925dffb40"/>
        <function-ref name="clr" scoped="" ref="0x7f2925dffcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7f2925e02620" loc="47:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2925e02620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2925e029a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2925e02b30"/>
        <function-ref name="led1On" scoped="" ref="0x7f2925e02cc0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2925e02e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2925e01020"/>
        <function-ref name="get" scoped="" ref="0x7f2925e011b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2925e01340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2925e01980"/>
        <function-ref name="set" scoped="" ref="0x7f2925e014d0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2925e01660"/>
        <function-ref name="led2On" scoped="" ref="0x7f2925e017f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7f2925df9020" loc="52:../../../tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f2925df9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925df93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925df9530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925df96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925df9850"/>
        <function-ref name="get" scoped="" ref="0x7f2925df99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925df9b70"/>
        <function-ref name="set" scoped="" ref="0x7f2925df9d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2925df8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7f2925e03590" loc="41:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led0" scoped="" ref="0x7f2925e03590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925e03910"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925e03aa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925e03c30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925e03dc0"/>
        <function-ref name="get" scoped="" ref="0x7f2925ddc020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925ddc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925ddc340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925ddc4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7f2925ddc830" loc="42:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led1" scoped="" ref="0x7f2925ddc830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925ddcbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925ddcd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925ddb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925ddb1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925ddb340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925ddb4d0"/>
        <function-ref name="set" scoped="" ref="0x7f2925ddb660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925ddb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7f2925ddadd0" loc="44:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2925ddadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925dd9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7f2925ddbb50" loc="43:../../../tos/platforms/telosa/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Led2" scoped="" ref="0x7f2925ddbb50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925dda020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925dda1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925dda340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925dda4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925dda660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925dda7f0"/>
        <function-ref name="set" scoped="" ref="0x7f2925dda980"/>
        <function-ref name="clr" scoped="" ref="0x7f2925ddab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f2925dbfd50" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f2925dbfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925dbe100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925dbe290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925dbe420"/>
        <function-ref name="clr" scoped="" ref="0x7f2925dbc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925dbe740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925dbe8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925dbea60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925dbebf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925dbed80"/>
        <function-ref name="get" scoped="" ref="0x7f2925dbd020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925dbd1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925dbd340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925dbd4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925dbd760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925dbd8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2925dbda80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925dbdc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925dbe5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925dbdda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925dbc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f2925da6e50" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f2925da6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925da5210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925da53a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925da5530"/>
        <function-ref name="clr" scoped="" ref="0x7f2925da3340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925da5850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925da59e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925da5b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925da5d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925da4020"/>
        <function-ref name="get" scoped="" ref="0x7f2925da41b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925da4340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925da44d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925da4660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925da48f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925da4a80"/>
        <function-ref name="set" scoped="" ref="0x7f2925da4c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925da4da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925da56c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925da3020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925da31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SDA" ref="0x7f2925d1b3d0" loc="205:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SDA" scoped="" ref="0x7f2925d1b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d1b750"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d1b8e0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d1ba70"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d197f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d1bd90"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d1a020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d1a1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d1a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d1a4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d1a660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d1a7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d1a980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d1ab10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d1ada0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d19020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d191b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d19340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d1bc00"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d194d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d19660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC6" ref="0x7f2925d203e0" loc="201:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC6" scoped="" ref="0x7f2925d203e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d20760"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d208f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d20a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d1e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d20da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d1f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d1f1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d1f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d1f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d1f660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d1f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d1f980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d1fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d1fda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d1e020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d1e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d1e340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d20c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d1e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d1e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI0" ref="0x7f2925d493f0" loc="183:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI0" scoped="" ref="0x7f2925d493f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d49770"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d49900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d49a90"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d477f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d49db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d48020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d481b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d48340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d484d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d48660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d487f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d48980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d48b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d48da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d47020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d471b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d47340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d49c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d474d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d47660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port30" ref="0x7f2925da1e50" loc="72:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port30" scoped="" ref="0x7f2925da1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d9f210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d9f3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d9f530"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d9d340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d9f850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d9f9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d9fb70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d9fd00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d9e020"/>
        <function-ref name="get" scoped="" ref="0x7f2925d9e1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d9e340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d9e4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d9e660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d9e8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d9ea80"/>
        <function-ref name="set" scoped="" ref="0x7f2925d9ec10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d9eda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d9f6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d9d020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d9d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port42" ref="0x7f2925d86020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port42" scoped="" ref="0x7f2925d86020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d863a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d86530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d866c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d844d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d869e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d86b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d86d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d85020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d851b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d85340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d854d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d85660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d857f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d85a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d85c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d85da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d84020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d86850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d841b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d84340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port54" ref="0x7f2925d6d020" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port54" scoped="" ref="0x7f2925d6d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d6d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d6d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d6d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d6b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d6d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d6db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d6dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d6c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d6c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d6c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d6c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d6c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d6c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d6ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d6cc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d6cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d6b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d6d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d6b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port64" ref="0x7f2925d58020" loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port64" scoped="" ref="0x7f2925d58020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d583a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d58530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d586c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d564d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d589e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d58b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d58d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d57020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d571b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d57340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d574d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d57660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d577f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d57a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d57c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d57da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d56020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d58850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d561b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d56340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD0" ref="0x7f2925d443f0" loc="185:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD0" scoped="" ref="0x7f2925d443f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d44770"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d44900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d44a90"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d427f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d44db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d43020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d431b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d43340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d434d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d43660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d437f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d43980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d43b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d43da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d42020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d421b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d42340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d44c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d424d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d42660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC0" ref="0x7f2925d303e0" loc="195:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC0" scoped="" ref="0x7f2925d303e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d30760"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d308f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d30a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d2e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d30da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d2f020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d2f1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d2f340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d2f4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d2f660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d2f7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d2f980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d2fb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d2fda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d2e020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d2e1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d2e340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d30c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d2e4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d2e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSIN" ref="0x7f2925d113f0" loc="211:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSIN" scoped="" ref="0x7f2925d113f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d11770"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d11900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d11a90"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d0f7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d11db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d10020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d101b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d10340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d104d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d10660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d107f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d10980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d10b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d10da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d0f020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d0f1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d0f340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d11c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d0f4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d0f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f2925db7580" loc="57:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f2925db7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925db7900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925db7a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925db7c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2925db5980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925db6020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925db61b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925db6340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925db64d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925db6660"/>
        <function-ref name="get" scoped="" ref="0x7f2925db67f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925db6980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925db6b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925db6ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925db5020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925db51b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925db5340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925db54d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925db7db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925db5660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925db57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD0" ref="0x7f2925d42bc0" loc="186:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD0" scoped="" ref="0x7f2925d42bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d41020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d411b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d41340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d3f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d41660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d417f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d41980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d41b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d41ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d41e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d40020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d401b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d40340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d405d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d40760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d408f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d40a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d414d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d40c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d40da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f2925db2580" loc="62:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f2925db2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925db2900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925db2a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925db2c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2925db0980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925db1020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925db11b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925db1340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925db14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925db1660"/>
        <function-ref name="get" scoped="" ref="0x7f2925db17f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925db1980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925db1b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925db1ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925db0020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925db01b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925db0340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925db04d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925db2db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925db0660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925db07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port33" ref="0x7f2925d98710" loc="75:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port33" scoped="" ref="0x7f2925d98710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d98a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d98c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d98db0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d96a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d971b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d97340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d974d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d97660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d977f0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d97980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d97b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d97ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d97e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d96120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d962b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925d96440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d965d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d97020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d96760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d968f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port45" ref="0x7f2925d7f8a0" loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port45" scoped="" ref="0x7f2925d7f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d7fc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d7fdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d7e020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d7dc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d7e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d7e4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d7e660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d7e7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d7e980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d7eb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d7eca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d7ee30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d7d020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d7d2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d7d440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d7d5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d7d760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d7e1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d7d8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d7da80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port57" ref="0x7f2925d668a0" loc="101:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port57" scoped="" ref="0x7f2925d668a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d66c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d66db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d64020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d63c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d64340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d644d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d64660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d647f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d64980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d64b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d64ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d64e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d63020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d632b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d63440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d635d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d63760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d641b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d638f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d63a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port67" ref="0x7f2925d518a0" loc="112:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port67" scoped="" ref="0x7f2925d518a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d51c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d51db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d50020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d4fc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d50340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d504d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d50660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d507f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d50980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d50b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d50ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d50e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d4f020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d4f2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d4f440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d4f5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d4f760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d501b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d4f8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d4fa80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f2925dc4d50" loc="52:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f2925dc4d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925dc3100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925dc3290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925dc3420"/>
        <function-ref name="clr" scoped="" ref="0x7f2925dc11b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925dc3740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925dc38d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925dc3a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925dc3bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925dc3d80"/>
        <function-ref name="get" scoped="" ref="0x7f2925dc2020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925dc21b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925dc2340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925dc24d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925dc2760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925dc28f0"/>
        <function-ref name="set" scoped="" ref="0x7f2925dc2a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925dc2c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925dc35b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925dc2da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925dc1020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f2925dabd50" loc="65:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f2925dabd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925daa210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925daa3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925daa530"/>
        <function-ref name="clr" scoped="" ref="0x7f2925da8340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925daa850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925daa9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925daab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925daad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925da9020"/>
        <function-ref name="get" scoped="" ref="0x7f2925da91b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925da9340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925da94d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925da9660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925da98f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925da9a80"/>
        <function-ref name="set" scoped="" ref="0x7f2925da9c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925da9da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925daa6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925da8020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925da81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port36" ref="0x7f2925d91e50" loc="78:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port36" scoped="" ref="0x7f2925d91e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d90210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d903a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d90530"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d8e340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d90850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d909e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d90b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d90d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d8f020"/>
        <function-ref name="get" scoped="" ref="0x7f2925d8f1b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d8f340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d8f4d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d8f660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d8f8f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d8fa80"/>
        <function-ref name="set" scoped="" ref="0x7f2925d8fc10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d8fda0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d906c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d8e020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d8e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO0" ref="0x7f2925d4cbc0" loc="182:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO0" scoped="" ref="0x7f2925d4cbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d4b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d4b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d4b340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d49020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d4b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d4b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d4b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d4bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d4bca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d4be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d4a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d4a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d4a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d4a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d4a760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d4a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d4aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d4b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d4ac10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d4ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC3" ref="0x7f2925d28bb0" loc="198:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC3" scoped="" ref="0x7f2925d28bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d27020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d271b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d27340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d25020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d27660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d277f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d27980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d27b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d27ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d27e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d26020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d261b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d26340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d265d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d26760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d268f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d26a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d274d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d26c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d26da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC1" ref="0x7f2925d14bb0" loc="209:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC1" scoped="" ref="0x7f2925d14bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d13020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d131b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d13340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d11020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d13660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d137f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d13980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d13b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d13ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d13e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d12020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d121b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d12340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d125d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d12760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d128f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d12a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d134d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d12c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d12da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK1" ref="0x7f2925d38bc0" loc="191:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK1" scoped="" ref="0x7f2925d38bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d37020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d371b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d37340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d35020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d37660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d377f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d37980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d37b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d37ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d37e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d36020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d361b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d36340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d365d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d36760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d368f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d36a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d374d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d36c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d36da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port40" ref="0x7f2925d8ce50" loc="83:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port40" scoped="" ref="0x7f2925d8ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d8b410"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d8b5a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d8b730"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d894d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d8ba50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d8bbe0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d8bd70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d8a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d8a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d8a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d8a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d8a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d8a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d8aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d8ac10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d8ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d89020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d8b8c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d891b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port52" ref="0x7f2925d72020" loc="96:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port52" scoped="" ref="0x7f2925d72020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d723a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d72530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d726c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d704d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d729e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d72b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d72d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d71020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d711b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d71340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d714d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d71660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d717f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d71a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d71c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d71da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d70020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d72850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d701b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d70340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port62" ref="0x7f2925d5d020" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port62" scoped="" ref="0x7f2925d5d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d5d3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d5d530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d5d6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d5b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d5d9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d5db70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d5dd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d5c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d5c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d5c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d5c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d5c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d5c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d5ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d5cc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d5cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d5b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d5d850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d5b1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC4" ref="0x7f2925d253e0" loc="199:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC4" scoped="" ref="0x7f2925d253e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d25760"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d258f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d25a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d237f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d25da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d24020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d241b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d24340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d244d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d24660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d247f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d24980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d24b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d24da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d23020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d231b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d23340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d25c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d234d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d23660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE1" ref="0x7f2925d3f3e0" loc="188:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE1" scoped="" ref="0x7f2925d3f3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d3f760"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d3f8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d3fa80"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d3d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d3fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d3e020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d3e1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d3e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d3e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d3e660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d3e7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d3e980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d3eb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d3eda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d3d020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d3d1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d3d340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d3fc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d3d4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d3d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f2925dbc580" loc="55:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f2925dbc580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925dbc900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925dbca90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925dbcc20"/>
        <function-ref name="clr" scoped="" ref="0x7f2925dba980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925dbb020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925dbb1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925dbb340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925dbb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925dbb660"/>
        <function-ref name="get" scoped="" ref="0x7f2925dbb7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925dbb980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925dbbb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925dbbca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925dba020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925dba1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925dba340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925dba4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925dbcdb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925dba660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925dba7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f2925da3710" loc="68:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f2925da3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925da3a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925da3c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925da3db0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925da1a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925da21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925da2340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925da24d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925da2660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925da27f0"/>
        <function-ref name="get" scoped="" ref="0x7f2925da2980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925da2b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925da2ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925da2e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925da1120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925da12b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925da1440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925da15d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925da2020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925da1760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925da18f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port60" ref="0x7f2925d62020" loc="105:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port60" scoped="" ref="0x7f2925d62020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d623a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d62530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d626c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d604d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d629e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d62b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d62d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d61020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d611b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d61340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d614d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d61660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d617f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d61a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d61c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d61da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d60020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d62850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d601b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d60340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port31" ref="0x7f2925d9d710" loc="73:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port31" scoped="" ref="0x7f2925d9d710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d9da90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d9dc20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d9ddb0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d9ba80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d9c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d9c340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d9c4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d9c660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d9c7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d9c980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d9cb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d9cca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d9ce30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d9b120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d9b2b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925d9b440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d9b5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d9c020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d9b760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d9b8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port43" ref="0x7f2925d848a0" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port43" scoped="" ref="0x7f2925d848a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d84c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d84db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d83020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d82c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d83340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d834d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d83660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d837f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d83980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d83b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d83ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d83e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d82020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d822b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d82440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d825d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d82760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d831b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d828f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d82a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port55" ref="0x7f2925d6b8a0" loc="99:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port55" scoped="" ref="0x7f2925d6b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d6bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d6bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d6a020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d69c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d6a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d6a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d6a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d6a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d6a980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d6ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d6aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d6ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d69020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d692b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d69440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d695d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d69760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d6a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d698f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d69a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port65" ref="0x7f2925d568a0" loc="110:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port65" scoped="" ref="0x7f2925d568a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d56c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d56db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d55020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d54c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d55340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d554d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d55660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d557f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d55980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d55b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d55ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d55e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d54020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d542b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d54440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d545d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d54760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d551b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d548f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d54a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SOMI1" ref="0x7f2925d3a3f0" loc="190:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI1" scoped="" ref="0x7f2925d3a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d3a770"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d3a900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d3aa90"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d387f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d3adb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d39020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d391b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d39340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d394d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d39660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d397f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d39980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d39b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d39da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d38020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d381b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d38340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d3ac20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d384d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d38660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f2925dc7cb0" loc="50:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f2925dc7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925dd50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925dd5230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925dd53c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925dc61b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925dd56e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925dd5870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925dd5a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925dd5b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925dd5d20"/>
        <function-ref name="get" scoped="" ref="0x7f2925dd4020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925dd41b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925dd4340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925dd44d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925dd4760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925dd48f0"/>
        <function-ref name="set" scoped="" ref="0x7f2925dd4a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925dd4c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925dd5550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925dd4da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925dc6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f2925db0d50" loc="63:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f2925db0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925daf100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925daf290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925daf420"/>
        <function-ref name="clr" scoped="" ref="0x7f2925dad1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925daf740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925daf8d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925dafa60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925dafbf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925dafd80"/>
        <function-ref name="get" scoped="" ref="0x7f2925dae020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925dae1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925dae340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925dae4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925dae760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925dae8f0"/>
        <function-ref name="set" scoped="" ref="0x7f2925daea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925daec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925daf5b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925daeda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925dad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port34" ref="0x7f2925d96e50" loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port34" scoped="" ref="0x7f2925d96e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d95210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d953a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d95530"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d93340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d95850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d959e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d95b70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d95d00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d94020"/>
        <function-ref name="get" scoped="" ref="0x7f2925d941b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d94340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d944d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d94660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d948f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d94a80"/>
        <function-ref name="set" scoped="" ref="0x7f2925d94c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d94da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d956c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d93020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d931b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port46" ref="0x7f2925d7c020" loc="89:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port46" scoped="" ref="0x7f2925d7c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d7c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d7c530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d7c6c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d7a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d7c9e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d7cb70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d7cd00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d7b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d7b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d7b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d7b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d7b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d7b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d7ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d7bc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d7bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d7a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d7c850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d7a1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d7a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UTXD1" ref="0x7f2925d353f0" loc="192:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD1" scoped="" ref="0x7f2925d353f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d35770"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d35900"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d35a90"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d337f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d35db0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d34020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d341b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d34340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d344d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d34660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d347f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d34980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d34b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d34da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d33020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d331b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d33340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d35c20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d334d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d33660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC1" ref="0x7f2925d2ebb0" loc="196:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC1" scoped="" ref="0x7f2925d2ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d2d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d2d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d2d340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d2b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d2d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d2d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d2d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d2db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d2dca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d2de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d2c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d2c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d2c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d2c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d2c760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d2c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d2ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d2d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d2cc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d2cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC7" ref="0x7f2925d1ebb0" loc="202:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC7" scoped="" ref="0x7f2925d1ebb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d1d020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d1d1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d1d340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d1b020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d1d660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d1d7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d1d980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d1db10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d1dca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d1de30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d1c020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d1c1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d1c340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d1c5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d1c760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d1c8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d1ca80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d1d4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d1cc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d1cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port50" ref="0x7f2925d77020" loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port50" scoped="" ref="0x7f2925d77020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d773a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d77530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d776c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d754d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d779e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d77b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d77d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d76020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d761b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d76340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d764d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d76660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d767f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d76a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d76c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d76da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d75020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d77850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d751b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d75340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="URXD1" ref="0x7f2925d33bc0" loc="193:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD1" scoped="" ref="0x7f2925d33bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d32020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d321b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d32340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d30020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d32660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d327f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d32980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d32b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d32ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d32e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d31020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d311b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d31340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d315d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d31760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d318f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d31a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d324d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d31c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d31da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f2925dc1580" loc="53:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f2925dc1580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925dc1900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925dc1a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925dc1c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2925dbf980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925dc0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925dc01b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925dc0340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925dc04d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925dc0660"/>
        <function-ref name="get" scoped="" ref="0x7f2925dc07f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925dc0980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925dc0b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925dc0ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925dbf020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925dbf1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925dbf340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925dbf4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925dc1db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925dbf660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925dbf7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f2925da8710" loc="66:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f2925da8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925da8a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925da8c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925da8db0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925da6a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925da71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925da7340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925da74d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925da7660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925da77f0"/>
        <function-ref name="get" scoped="" ref="0x7f2925da7980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925da7b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925da7ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925da7e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925da6120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925da62b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925da6440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925da65d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925da7020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925da6760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925da68f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port37" ref="0x7f2925d8e710" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port37" scoped="" ref="0x7f2925d8e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d8ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d8ec20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d8edb0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d8ca80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d8d1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d8d340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d8d4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d8d660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d8d7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d8d980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d8db10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d8dca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d8de30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d8c120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d8c2b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925d8c440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d8c5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d8d020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d8c760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d8c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SIMO1" ref="0x7f2925d3dbc0" loc="189:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO1" scoped="" ref="0x7f2925d3dbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d3c020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d3c1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d3c340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d3a020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d3c660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d3c7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d3c980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d3cb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d3cca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d3ce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d3b020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d3b1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d3b340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d3b5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d3b760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d3b8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d3ba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d3c4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d3bc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d3bda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC5" ref="0x7f2925d23bb0" loc="200:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC5" scoped="" ref="0x7f2925d23bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d22020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d221b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d22340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d20020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d22660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d227f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d22980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d22b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d22ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d22e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d21020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d211b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d21340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d215d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d21760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d218f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d21a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d224d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d21c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d21da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port41" ref="0x7f2925d898a0" loc="84:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port41" scoped="" ref="0x7f2925d898a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d89c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d89db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d88020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d87c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d88340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d884d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d88660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d887f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d88980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d88b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d88ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d88e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d87020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d872b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d87440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d875d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d87760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d881b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d878f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d87a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port53" ref="0x7f2925d708a0" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port53" scoped="" ref="0x7f2925d708a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d70c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d70db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d6f020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d6ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d6f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d6f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d6f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d6f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d6f980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d6fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d6fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d6fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d6e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d6e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d6e440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d6e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d6e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d6f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d6e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d6ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port63" ref="0x7f2925d5b8a0" loc="108:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port63" scoped="" ref="0x7f2925d5b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d5bc20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d5bdb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d5a020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d59c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d5a340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d5a4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d5a660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d5a7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d5a980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d5ab10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d5aca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d5ae30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d59020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d592b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d59440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d595d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d59760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d5a1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d598f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d59a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f2925dbad50" loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f2925dbad50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925db9100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925db9290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925db9420"/>
        <function-ref name="clr" scoped="" ref="0x7f2925db71b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925db9740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925db98d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925db9a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925db9bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925db9d80"/>
        <function-ref name="get" scoped="" ref="0x7f2925db8020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925db81b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925db8340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925db84d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925db8760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925db88f0"/>
        <function-ref name="set" scoped="" ref="0x7f2925db8a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925db8c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925db95b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925db8da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925db7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port61" ref="0x7f2925d608a0" loc="106:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port61" scoped="" ref="0x7f2925d608a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d60c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d60db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d5f020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d5ec10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d5f340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d5f4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d5f660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d5f7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d5f980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d5fb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d5fca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d5fe30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d5e020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d5e2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d5e440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d5e5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d5e760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d5f1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d5e8f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d5ea80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f2925db5d50" loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f2925db5d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925db4100"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925db4290"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925db4420"/>
        <function-ref name="clr" scoped="" ref="0x7f2925db21b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925db4740"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925db48d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925db4a60"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925db4bf0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925db4d80"/>
        <function-ref name="get" scoped="" ref="0x7f2925db3020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925db31b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925db3340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925db34d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925db3760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925db38f0"/>
        <function-ref name="set" scoped="" ref="0x7f2925db3a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925db3c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925db45b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925db3da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925db2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port32" ref="0x7f2925d9be50" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port32" scoped="" ref="0x7f2925d9be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d9a210"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d9a3a0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d9a530"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d98340"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d9a850"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d9a9e0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d9ab70"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d9ad00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d99020"/>
        <function-ref name="get" scoped="" ref="0x7f2925d991b0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d99340"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d994d0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d99660"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d998f0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d99a80"/>
        <function-ref name="set" scoped="" ref="0x7f2925d99c10"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d99da0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d9a6c0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d98020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d981b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port44" ref="0x7f2925d81020" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port44" scoped="" ref="0x7f2925d81020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d813a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d81530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d816c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d7f4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d819e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d81b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d81d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d80020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d801b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d80340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d804d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d80660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d807f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d80a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d80c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d80da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d7f020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d81850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d7f1b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d7f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port56" ref="0x7f2925d68020" loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port56" scoped="" ref="0x7f2925d68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d683a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d68530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d686c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d664d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d689e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d68b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d68d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d67020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d671b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d67340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d674d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d67660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d677f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d67a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d67c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d67da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d66020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d68850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d661b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d66340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port66" ref="0x7f2925d53020" loc="111:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port66" scoped="" ref="0x7f2925d53020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d533a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d53530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d536c0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d514d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d539e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d53b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d53d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d52020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d521b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d52340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d524d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d52660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d527f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d52a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d52c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925d52da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d51020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d53850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d511b0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d51340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f2925dc6580" loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f2925dc6580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925dc6900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925dc6a90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925dc6c20"/>
        <function-ref name="clr" scoped="" ref="0x7f2925dc4980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925dc5020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925dc51b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925dc5340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925dc54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925dc5660"/>
        <function-ref name="get" scoped="" ref="0x7f2925dc57f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925dc5980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925dc5b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925dc5ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925dc4020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925dc41b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925dc4340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925dc44d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925dc6db0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925dc4660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925dc47f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f2925dad580" loc="64:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f2925dad580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925dad900"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925dada90"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925dadc20"/>
        <function-ref name="clr" scoped="" ref="0x7f2925dab980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925dac020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925dac1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925dac340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925dac4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925dac660"/>
        <function-ref name="get" scoped="" ref="0x7f2925dac7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925dac980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925dacb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925dacca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925dab020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925dab1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925dab340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925dab4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925daddb0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925dab660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925dab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port35" ref="0x7f2925d93710" loc="77:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port35" scoped="" ref="0x7f2925d93710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d93a90"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d93c20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d93db0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d91a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d921b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d92340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d924d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d92660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d927f0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d92980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d92b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d92ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d92e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d91120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d912b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925d91440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d915d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d92020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d91760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d918f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port47" ref="0x7f2925d7a8a0" loc="90:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port47" scoped="" ref="0x7f2925d7a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d7ac20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d7adb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d79020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d78c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d79340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d794d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d79660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d797f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d79980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d79b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d79ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d79e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d78020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d782b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d78440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d785d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d78760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d791b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d788f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d78a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADC2" ref="0x7f2925d2b3e0" loc="197:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADC2" scoped="" ref="0x7f2925d2b3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d2b760"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d2b8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d2ba80"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d287f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d2bda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d29020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d291b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d29340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d294d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d29660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d297f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d29980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d29b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d29da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d28020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d281b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d28340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d2bc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d284d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d28660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCL" ref="0x7f2925d19ba0" loc="206:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCL" scoped="" ref="0x7f2925d19ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d18020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d181b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d18340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d16020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d18660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d187f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d18980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d18b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d18ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d18e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d17020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d171b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d17340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d175d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d17760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d178f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d17a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d184d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d17c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d17da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UCLK0" ref="0x7f2925d47bc0" loc="184:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK0" scoped="" ref="0x7f2925d47bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d46020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d461b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d46340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d44020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d46660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d467f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d46980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d46b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d46ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d46e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d45020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d451b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d45340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d455d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d45760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d458f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d45a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d464d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d45c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d45da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port51" ref="0x7f2925d758a0" loc="95:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port51" scoped="" ref="0x7f2925d758a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d75c20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d75db0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d74020"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d73c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d74340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d744d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d74660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d747f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d74980"/>
        <function-ref name="get" scoped="" ref="0x7f2925d74b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d74ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d74e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d73020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d732b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d73440"/>
        <function-ref name="set" scoped="" ref="0x7f2925d735d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d73760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d741b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d738f0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d73a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DAC0" ref="0x7f2925d163e0" loc="208:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DAC0" scoped="" ref="0x7f2925d163e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d16760"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d168f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d16a80"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d147f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d16da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d15020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d151b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d15340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d154d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d15660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d157f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d15980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d15b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d15da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d14020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d141b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d14340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d16c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d144d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d14660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SVSOUT" ref="0x7f2925d0fbc0" loc="212:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SVSOUT" scoped="" ref="0x7f2925d0fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d0e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d0e1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d0e340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d0c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d0e660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d0e7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d0e980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d0eb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d0eca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d0ee30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d0d020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d0d1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d0d340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d0d5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d0d760"/>
        <function-ref name="set" scoped="" ref="0x7f2925d0d8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d0da80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d0e4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d0dc10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d0dda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STE0" ref="0x7f2925d4e060" loc="181:../../../tos/chips/msp430/pins/HplMsp430GeneralIOC.nc">
      <component-ref qname="HplMsp430GeneralIOC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STE0" scoped="" ref="0x7f2925d4e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925d4e7e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925d4e970"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925d4eb00"/>
        <function-ref name="clr" scoped="" ref="0x7f2925d4c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925d4ee20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925d4d020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925d4d1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925d4d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925d4d4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925d4d660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925d4d7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925d4d980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925d4db10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925d4dda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925d4c020"/>
        <function-ref name="set" scoped="" ref="0x7f2925d4c1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925d4c340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925d4ec90"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925d4c4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925d4c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925cdb540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P10"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925cdb540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925cdb8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925cdba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925cdbbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925cd9980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925cda020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925cda1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925cda340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925cda4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925cda660"/>
        <function-ref name="get" scoped="" ref="0x7f2925cda7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925cda980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925cdab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925cdaca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925cd9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925cd91b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925cd9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925cd94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925cd9660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925cdbd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925cd97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925cd6b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925cd6b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925cd5020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925cd51b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925cd5340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925cd3020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925cd5660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925cd57f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925cd5980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925cd5b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925cd5ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925cd5e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925cd4020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925cd41b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925cd4340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925cd45d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925cd4760"/>
        <function-ref name="set" scoped="" ref="0x7f2925cd48f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925cd4a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925cd4c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925cd54d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925cd4da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925cd0060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P12"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925cd0060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925cd03e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925cd0570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925cd0700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925cce4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925cd0a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925cd0bb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925cd0d40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925ccf020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925ccf1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925ccf340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925ccf4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925ccf660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925ccf7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925ccfa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925ccfc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925ccfda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925cce020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925cce1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925cd0890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925cce340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925ccb540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P13"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925ccb540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925ccb8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925ccba50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925ccbbe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925cc9980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925cca020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925cca1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925cca340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925cca4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925cca660"/>
        <function-ref name="get" scoped="" ref="0x7f2925cca7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925cca980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925ccab10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925ccaca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925cc9020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925cc91b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925cc9340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925cc94d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925cc9660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925ccbd70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925cc97f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925cc5b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P14"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925cc5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925cc4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925cc41b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925cc4340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925cc2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925cc4660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925cc47f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925cc4980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925cc4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925cc4ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925cc4e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925cc3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925cc31b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925cc3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925cc35d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925cc3760"/>
        <function-ref name="set" scoped="" ref="0x7f2925cc38f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925cc3a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925cc3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925cc44d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925cc3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925cbf060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P15"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925cbf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925cbf3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925cbf570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925cbf700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925cbd4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925cbfa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925cbfbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925cbfd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925cbe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925cbe1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925cbe340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925cbe4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925cbe660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925cbe7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925cbea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925cbec10"/>
        <function-ref name="set" scoped="" ref="0x7f2925cbeda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925cbd020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925cbd1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925cbf890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925cbd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925cba540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P16"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925cba540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925cba8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925cbaa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925cbabe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925cb8980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925cb9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925cb91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925cb9340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925cb94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925cb9660"/>
        <function-ref name="get" scoped="" ref="0x7f2925cb97f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925cb9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925cb9b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925cb9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925cb8020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925cb81b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925cb8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925cb84d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925cb8660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925cbad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925cb87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925cb5b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P17"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925cb5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925cb4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925cb41b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925cb4340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925cb2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925cb4660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925cb47f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925cb4980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925cb4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925cb4ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925cb4e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925cb3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925cb31b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925cb3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925cb35d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925cb3760"/>
        <function-ref name="set" scoped="" ref="0x7f2925cb38f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925cb3a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925cb3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925cb44d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925cb3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925caf060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P20"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925caf060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925caf3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925caf570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925caf700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925cad4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925cafa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925cafbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925cafd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925cae020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925cae1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925cae340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925cae4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925cae660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925cae7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925caea80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925caec10"/>
        <function-ref name="set" scoped="" ref="0x7f2925caeda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925cad020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925cad1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925caf890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925cad340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925caa540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P21"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925caa540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925caa8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925caaa50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925caabe0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925ca8980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925ca9020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925ca91b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925ca9340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925ca94d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925ca9660"/>
        <function-ref name="get" scoped="" ref="0x7f2925ca97f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925ca9980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925ca9b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925ca9ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925ca8020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925ca81b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925ca8340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925ca84d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925ca8660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925caad70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925ca87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925ca5b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P22"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925ca5b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925ca4020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925ca41b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925ca4340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925ca2020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925ca4660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925ca47f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925ca4980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925ca4b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925ca4ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925ca4e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925ca3020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925ca31b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925ca3340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925ca35d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925ca3760"/>
        <function-ref name="set" scoped="" ref="0x7f2925ca38f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925ca3a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925ca3c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925ca44d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925ca3da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c9f060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P23"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c9f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c9f3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c9f570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c9f700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c9c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c9fa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c9fbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c9fd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c9d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c9d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c9d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c9d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c9d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c9d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c9da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c9dc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925c9dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c9c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c9c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c9f890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c9c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c996d0" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P24"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c996d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c99a50"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c99be0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c99d70"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c97a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c981b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c98340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c984d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c98660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c987f0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c98980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c98b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c98ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c98e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c97120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c972b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925c97440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c975d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c97760"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c98020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c978f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c94b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P25"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c94b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c93020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c931b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c93340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c91020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c93660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c937f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c93980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c93b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c93ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c93e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c92020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c921b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c92340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c925d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c92760"/>
        <function-ref name="set" scoped="" ref="0x7f2925c928f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c92a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c92c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c934d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c92da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c8e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P26"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c8e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c8e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c8e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c8e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c8c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c8ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c8ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c8ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c8d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c8d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c8d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c8d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c8d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c8d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c8da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c8dc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925c8dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c8c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c8c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c8e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c8c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c89540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P27"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c89540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c898c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c89a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c89be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c87980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c88020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c881b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c88340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c884d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c88660"/>
        <function-ref name="get" scoped="" ref="0x7f2925c887f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c88980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c88b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c88ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c87020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c871b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925c87340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c874d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c87660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c89d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c877f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c84b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P30"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c84b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c83020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c831b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c83340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c81020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c83660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c837f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c83980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c83b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c83ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c83e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c82020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c821b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c82340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c825d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c82760"/>
        <function-ref name="set" scoped="" ref="0x7f2925c828f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c82a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c82c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c834d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c82da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c7e060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P31"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c7e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c7e3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c7e570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c7e700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c7c4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c7ea20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c7ebb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c7ed40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c7d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c7d1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c7d340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c7d4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c7d660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c7d7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c7da80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c7dc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925c7dda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c7c020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c7c1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c7e890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c7c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c79540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P32"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c79540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c798c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c79a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c79be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c77980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c78020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c781b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c78340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c784d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c78660"/>
        <function-ref name="get" scoped="" ref="0x7f2925c787f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c78980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c78b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c78ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c77020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c771b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925c77340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c774d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c77660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c79d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c777f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c74b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P33"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c74b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c72020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c721b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c72340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c70020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c72660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c727f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c72980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c72b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c72ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c72e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c71020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c711b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c71340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c715d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c71760"/>
        <function-ref name="set" scoped="" ref="0x7f2925c718f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c71a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c71c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c724d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c71da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c6d060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P34"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c6d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c6d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c6d570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c6d700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c6b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c6da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c6dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c6dd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c6c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c6c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c6c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c6c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c6c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c6c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c6ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c6cc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925c6cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c6b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c6b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c6d890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c68540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P35"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c68540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c688c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c68a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c68be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c66980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c67020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c671b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c67340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c674d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c67660"/>
        <function-ref name="get" scoped="" ref="0x7f2925c677f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c67980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c67b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c67ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c66020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c661b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925c66340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c664d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c66660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c68d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c667f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c63b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P36"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c63b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c62020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c621b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c62340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c60020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c62660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c627f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c62980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c62b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c62ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c62e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c61020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c611b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c61340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c615d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c61760"/>
        <function-ref name="set" scoped="" ref="0x7f2925c618f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c61a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c61c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c624d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c61da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c5d060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P37"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c5d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c5d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c5d570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c5d700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c5b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c5da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c5dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c5dd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c5c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c5c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c5c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c5c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c5c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c5c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c5ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c5cc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925c5cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c5b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c5b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c5d890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c5b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c58740" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P40"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c58740"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c58ac0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c58c50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c58de0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c56a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c571b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c57340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c574d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c57660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c577f0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c57980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c57b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c57ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c57e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c56120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c562b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925c56440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c565d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c56760"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c57020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c568f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c53b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P41"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c53b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c52020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c521b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c52340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c50020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c52660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c527f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c52980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c52b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c52ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c52e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c51020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c511b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c51340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c515d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c51760"/>
        <function-ref name="set" scoped="" ref="0x7f2925c518f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c51a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c51c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c524d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c51da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c4d060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P42"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c4d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c4d3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c4d570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c4d700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c4b4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c4da20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c4dbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c4dd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c4c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c4c1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c4c340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c4c4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c4c660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c4c7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c4ca80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c4cc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925c4cda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c4b020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c4b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c4d890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c4b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c47540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P43"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c47540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c478c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c47a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c47be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c45980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c46020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c461b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c46340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c464d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c46660"/>
        <function-ref name="get" scoped="" ref="0x7f2925c467f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c46980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c46b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c46ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c45020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c451b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925c45340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c454d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c45660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c47d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c42b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P44"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c42b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c41020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c411b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c41340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c3f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c41660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c417f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c41980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c41b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c41ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c41e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c40020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c401b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c40340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c405d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c40760"/>
        <function-ref name="set" scoped="" ref="0x7f2925c408f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c40a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c40c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c414d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c40da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c3c060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P45"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c3c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c3c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c3c570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c3c700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c3a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c3ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c3cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c3cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c3b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c3b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c3b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c3b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c3b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c3b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c3ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c3bc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925c3bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c3a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c3a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c3c890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c3a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c37540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P46"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c37540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c378c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c37a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c37be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c35980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c36020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c361b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c36340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c364d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c36660"/>
        <function-ref name="get" scoped="" ref="0x7f2925c367f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c36980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c36b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c36ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c35020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c351b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925c35340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c354d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c35660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c37d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c357f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c32b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P47"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c32b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c31020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c311b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c31340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c2f020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c31660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c317f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c31980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c31b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c31ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c31e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c30020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c301b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c30340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c305d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c30760"/>
        <function-ref name="set" scoped="" ref="0x7f2925c308f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c30a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c30c10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c314d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c30da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c2c060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P50"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c2c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c2c3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c2c570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c2c700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c2a4d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c2ca20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c2cbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c2cd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c2b020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c2b1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c2b340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c2b4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c2b660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c2b7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c2ba80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c2bc10"/>
        <function-ref name="set" scoped="" ref="0x7f2925c2bda0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c2a020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c2a1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c2c890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c2a340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c27540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P51"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c27540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c278c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c27a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c27be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c25980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c26020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c261b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c26340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c264d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c26660"/>
        <function-ref name="get" scoped="" ref="0x7f2925c267f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c26980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c26b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c26ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c25020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c251b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925c25340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c254d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c25660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c27d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c257f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c22b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P52"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c22b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c20020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c201b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c20340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c1e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c20660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c207f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c20980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c20b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c20ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c20e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c1f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c1f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c1f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c1f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c1f760"/>
        <function-ref name="set" scoped="" ref="0x7f2925c1f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c1fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c1fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c204d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c1fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c1b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P53"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c1b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c1b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c1b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c1b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c194d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c1ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c1bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c1bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c1a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c1a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c1a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c1a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c1a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c1a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c1aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c1ac10"/>
        <function-ref name="set" scoped="" ref="0x7f2925c1ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c19020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c191b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c1b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c19340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c16540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P54"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c16540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c168c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c16a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c16be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c14980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c15020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c151b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c15340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c154d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c15660"/>
        <function-ref name="get" scoped="" ref="0x7f2925c157f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c15980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c15b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c15ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c14020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c141b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925c14340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c144d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c14660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c16d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c11b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P55"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c11b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c10020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c101b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c10340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c0e020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c10660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c107f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c10980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c10b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c10ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c10e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c0f020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c0f1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c0f340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c0f5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c0f760"/>
        <function-ref name="set" scoped="" ref="0x7f2925c0f8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c0fa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c0fc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c104d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c0fda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c0b060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P56"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c0b060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c0b3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c0b570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c0b700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c094d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c0ba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c0bbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c0bd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c0a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c0a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c0a340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c0a4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c0a660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c0a7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c0aa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c0ac10"/>
        <function-ref name="set" scoped="" ref="0x7f2925c0ada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c09020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c091b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c0b890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c09340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c06540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P57"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c06540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c068c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c06a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c06be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925c04980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c05020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c051b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c05340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c054d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c05660"/>
        <function-ref name="get" scoped="" ref="0x7f2925c057f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925c05980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925c05b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925c05ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925c04020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925c041b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925c04340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925c044d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925c04660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c06d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925c047f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925c01b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P60"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925c01b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925c00020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925c001b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925c00340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925bfe020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925c00660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925c007f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925c00980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925c00b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925c00ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925c00e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925bff020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925bff1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925bff340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925bff5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925bff760"/>
        <function-ref name="set" scoped="" ref="0x7f2925bff8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925bffa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925bffc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925c004d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925bffda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925bfb060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P61"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925bfb060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925bfb3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925bfb570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925bfb700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925bf94d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925bfba20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925bfbbb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925bfbd40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925bfa020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925bfa1b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925bfa340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925bfa4d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925bfa660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925bfa7f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925bfaa80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925bfac10"/>
        <function-ref name="set" scoped="" ref="0x7f2925bfada0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925bf9020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925bf91b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925bfb890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925bf9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925bf6540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P62"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925bf6540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925bf68c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925bf6a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925bf6be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925bf3980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925bf4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925bf41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925bf4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925bf44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925bf4660"/>
        <function-ref name="get" scoped="" ref="0x7f2925bf47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925bf4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925bf4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925bf4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925bf3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925bf31b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925bf3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925bf34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925bf3660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925bf6d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925bf37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925bf0b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P63"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925bf0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925bef020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925bef1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925bef340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925bed020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925bef660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925bef7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925bef980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925befb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925befca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925befe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925bee020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925bee1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925bee340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925bee5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925bee760"/>
        <function-ref name="set" scoped="" ref="0x7f2925bee8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925beea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925beec10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925bef4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925beeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925bea060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P64"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925bea060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925bea3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925bea570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925bea700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925be84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925beaa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925beabb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925bead40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925be9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925be91b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925be9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925be94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925be9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925be97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925be9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925be9c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925be9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925be8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925be81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925bea890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925be8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925be5540" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P65"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925be5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925be58c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925be5a50"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925be5be0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925be3980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925be4020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925be41b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925be4340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925be44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925be4660"/>
        <function-ref name="get" scoped="" ref="0x7f2925be47f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925be4980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925be4b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925be4ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925be3020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925be31b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925be3340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925be34d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925be3660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925be5d70"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925be37f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925be0b90" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P66"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925be0b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925bdf020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925bdf1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925bdf340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925bdd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925bdf660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925bdf7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925bdf980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925bdfb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925bdfca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925bdfe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925bde020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925bde1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925bde340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925bde5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925bde760"/>
        <function-ref name="set" scoped="" ref="0x7f2925bde8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925bdea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925bdec10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925bdf4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925bdeda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7f2925bda060" loc="87:../../../tos/chips/msp430/pins/HplMsp430GeneralIOP.nc">
      <component-ref qname="HplMsp430GeneralIOC.P67"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IO" scoped="" ref="0x7f2925bda060"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925bda3e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925bda570"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925bda700"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925bd84d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925bdaa20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925bdabb0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925bdad40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925bd9020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925bd91b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925bd9340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925bd94d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925bd9660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925bd97f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925bd9a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925bd9c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925bd9da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925bd8020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925bd81b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925bda890"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925bd8340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2925b4cc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2925b4cc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925b4b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925b4b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925b4b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925b49020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925b4b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925b4b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925b4b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925b4bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925b4bca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925b4be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925b4a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925b4a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925b4a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925b4a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925b4a760"/>
        <function-ref name="set" scoped="" ref="0x7f2925b4a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925b4aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925b4ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f2925b4b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925b4ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2925b5d9e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led0Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2925b5d9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925b5dd60"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925b4c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925b4c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925b4c340"/>
        <function-ref name="get" scoped="" ref="0x7f2925b4c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925b4c660"/>
        <function-ref name="set" scoped="" ref="0x7f2925b4c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925b4c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2925b452f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2925b452f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925b45670"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925b45800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925b45990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925b43660"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925b45cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925b45e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925b44020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925b441b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925b44340"/>
        <function-ref name="get" scoped="" ref="0x7f2925b444d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925b44660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925b447f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925b44980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925b44c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925b44da0"/>
        <function-ref name="set" scoped="" ref="0x7f2925b43020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925b431b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925b43340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925b45b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925b434d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2925b47020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led1Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2925b47020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925b473a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925b47530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925b476c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925b47850"/>
        <function-ref name="get" scoped="" ref="0x7f2925b479e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925b47b70"/>
        <function-ref name="set" scoped="" ref="0x7f2925b47d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2925b45020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2925b407a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2925b407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925b40b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925b40cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925b40e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925b3ea80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925b3f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925b3f340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925b3f4d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925b3f660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925b3f7f0"/>
        <function-ref name="get" scoped="" ref="0x7f2925b3f980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925b3fb10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925b3fca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925b3fe30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925b3e120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925b3e2b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925b3e440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925b3e5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925b3e760"/>
        <function-ref name="clr" scoped="" ref="0x7f2925b3f020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925b3e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2925b41630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="PlatformLedsC.Led2Impl"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2925b41630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925b419b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925b41b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925b41cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925b41e60"/>
        <function-ref name="get" scoped="" ref="0x7f2925b40020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925b401b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925b40340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925b404d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMControl" ref="0x7f2925a977a0" loc="17:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMControl" scoped="" ref="0x7f2925a977a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2925a97b20"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2925a97cb0"/>
        <function-ref name="start" scoped="" ref="0x7f2925a97e40"/>
        <function-ref name="stop" scoped="" ref="0x7f2925aa0020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7f2925b32480" loc="8:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Boot" scoped="" ref="0x7f2925b32480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7f2925b32800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMaster" ref="0x7f2925b22e50" loc="10:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMaster" scoped="" ref="0x7f2925b22e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2925b1f390"/>
        <function-ref name="fired" scoped="" ref="0x7f2925b2b970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2925b21720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2925b212a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2925b1fc90"/>
        <function-ref name="gett0" scoped="" ref="0x7f2925b1f810"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2925b2bdf0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2925b2ca80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2925b21d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2925b2b020"/>
        <function-ref name="stop" scoped="" ref="0x7f2925b2b4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2925aba180" loc="13:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2925aba180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925aba500"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2925aba690"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2925aba820"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2925aba9b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2925abab40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2925a9f5a0" loc="15:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2925a9f5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2925a9f920"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2925a9fab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2925a9fc40"/>
        <function-ref name="cancel" scoped="" ref="0x7f2925a9fdd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2925aa9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2925a8f730" loc="18:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2925a8f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2925a8fab0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2925a8fc40"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2925a8fdd0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2925a9c020"/>
        <function-ref name="getPower" scoped="" ref="0x7f2925a9c1b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2925a9c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Light" ref="0x7f2925a8ac90" loc="21:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Light" scoped="" ref="0x7f2925a8ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2925a898a0"/>
        <function-ref name="readDone" scoped="" ref="0x7f2925a89d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Humidity" ref="0x7f2925a8b1b0" loc="20:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f2925a8b1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2925a8a020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2925a8a4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x7f2925a9be80" loc="16:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2925a9be80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2925aa8220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2925b32ac0" loc="9:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2925b32ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2925b32e40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2925b2e020"/>
        <function-ref name="led1On" scoped="" ref="0x7f2925b2e1b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2925b2e340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2925b2e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925b2e660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2925b2e7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2925b2ee30"/>
        <function-ref name="set" scoped="" ref="0x7f2925b2e980"/>
        <function-ref name="led0On" scoped="" ref="0x7f2925b2eb10"/>
        <function-ref name="led2On" scoped="" ref="0x7f2925b2eca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerMiSlot" ref="0x7f2925b1e370" loc="11:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMiSlot" scoped="" ref="0x7f2925b1e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2925b1a870"/>
        <function-ref name="fired" scoped="" ref="0x7f2925b1de40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2925b1cc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2925b1c780"/>
        <function-ref name="getdt" scoped="" ref="0x7f2925b191e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2925b1acf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2925b1c300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2925b1d020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2925b1a260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2925b1d4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f2925b1d9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temperature" ref="0x7f2925a8c860" loc="19:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f2925a8c860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2925a96480"/>
        <function-ref name="readDone" scoped="" ref="0x7f2925a96900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerLeds" ref="0x7f2925b19850" loc="12:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerLeds" scoped="" ref="0x7f2925b19850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2925b15cf0"/>
        <function-ref name="fired" scoped="" ref="0x7f2925b17300"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2925b150d0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2925b17c00"/>
        <function-ref name="getdt" scoped="" ref="0x7f2925b14660"/>
        <function-ref name="gett0" scoped="" ref="0x7f2925b141e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2925b17780"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2925b18480"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2925b156e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2925b18950"/>
        <function-ref name="stop" scoped="" ref="0x7f2925b18e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2925aaa1e0" loc="14:SlaveC.nc">
      <component-ref qname="SlaveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2925aaa1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2925aaa560"/>
        <function-ref name="source" scoped="" ref="0x7f2925aaa6f0"/>
        <function-ref name="address" scoped="" ref="0x7f2925aaa880"/>
        <function-ref name="destination" scoped="" ref="0x7f2925aaaa10"/>
        <function-ref name="setSource" scoped="" ref="0x7f2925aaaba0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2925aaad30"/>
        <function-ref name="type" scoped="" ref="0x7f2925abb020"/>
        <function-ref name="setType" scoped="" ref="0x7f2925abb1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2925abb340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2925abb4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2925abb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2925a52980" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMaster"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925a52980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2925726e80"/>
        <function-ref name="fired" scoped="" ref="0x7f29257274a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2925726260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2925727da0"/>
        <function-ref name="getdt" scoped="" ref="0x7f29257257a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2925725320"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2925727920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f29257295a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2925726870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2925729a70"/>
        <function-ref name="stop" scoped="" ref="0x7f2925727020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f2925a49aa0" loc="49:../../../tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a49aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2925a44020"/>
        <function-ref name="fired" scoped="" ref="0x7f2925a47510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2925a45300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2925a47e10"/>
        <function-ref name="getdt" scoped="" ref="0x7f2925a44920"/>
        <function-ref name="gett0" scoped="" ref="0x7f2925a444a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2925a47990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2925a486b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2925a45910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2925a48b80"/>
        <function-ref name="stop" scoped="" ref="0x7f2925a47090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7f2925a3e560" loc="46:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerMilli" scoped="" ref="0x7f2925a3e560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2925a3ba20"/>
        <function-ref name="fired" scoped="" ref="0x7f2925a3c020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2925a3cda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2925a3c920"/>
        <function-ref name="getdt" scoped="" ref="0x7f2925a394a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2925a39020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2925a3c4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2925a3d1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2925a3b410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2925a3d680"/>
        <function-ref name="stop" scoped="" ref="0x7f2925a3db50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2925a38020" loc="47:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2925a38020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2925a38c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2925a42790" loc="45:../../../tos/chips/msp430/timer/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2925a42790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925a42b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f29257f8870" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f29257f8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f29257f5090"/>
        <function-ref name="fired" scoped="" ref="0x7f29257f6090"/>
        <function-ref name="startAt" scoped="" ref="0x7f29257f6a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f29257f6550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f29257f5550"/>
        <function-ref name="start" scoped="" ref="0x7f29257f76a0"/>
        <function-ref name="stop" scoped="" ref="0x7f29257f7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f29257f8020" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f29257f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f29257f83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2923fd8870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2923fd8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923fd4090"/>
        <function-ref name="fired" scoped="" ref="0x7f2923fd5090"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923fd5a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923fd5550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923fd4550"/>
        <function-ref name="start" scoped="" ref="0x7f2923fd76a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2923fd7bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2923fd8020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2923fd8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2923fd83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2923fbfda0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923fbfda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2923fbe180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2923fbe310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2923fbe4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2923fbe630"/>
        <function-ref name="fired" scoped="" ref="0x7f2923fbe7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2923fc1340" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923fc1340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2923fc16c0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2923fc1850"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923fc19e0"/>
        <function-ref name="get" scoped="" ref="0x7f2923fc1b70"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923fc1d00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2923fc0020"/>
        <function-ref name="getMode" scoped="" ref="0x7f2923fc01b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2923fc0340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2923fc04d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2923fc0660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2923fc07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2923fc0a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923fc0a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2923fc0e00"/>
        <function-ref name="getControl" scoped="" ref="0x7f2923fbf020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923fbf1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2923fbf340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2923fbf4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923fbf660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2923fbf7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2923fbf980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2923fbfb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2925a01d30" loc="52:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2925a01d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259ff0e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259ff270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259ff400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259ff590"/>
        <function-ref name="fired" scoped="" ref="0x7f29259ff720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2925a04670" loc="50:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2925a04670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925a049f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2925a04b80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925a04d10"/>
        <function-ref name="get" scoped="" ref="0x7f2925a03020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925a031b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925a03340"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925a034d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925a03660"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925a037f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2925a03980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2925a03b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2925a023f0" loc="51:../../../tos/platforms/telosa/Msp430Timer32khzMapC.nc">
      <component-ref qname="Msp430Timer32khzMapC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2925a023f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2925a02770"/>
        <function-ref name="getControl" scoped="" ref="0x7f2925a02900"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925a02a90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2925a02c20"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2925a02db0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925a01020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2925a011b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2925a01340"/>
        <function-ref name="setControl" scoped="" ref="0x7f2925a014d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA2" ref="0x7f29259ef410" loc="56:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA2" scoped="" ref="0x7f29259ef410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259ef790"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259ef920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259efab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259efc40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259efdd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259ee020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259ee1b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259ee340"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259ee4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB0" ref="0x7f29259e9020" loc="61:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB0" scoped="" ref="0x7f29259e9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259e93a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259e9530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259e96c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259e9850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259e99e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259e9b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259e9d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259e8020"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259e81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA1" ref="0x7f29259f03e0" loc="55:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA1" scoped="" ref="0x7f29259f03e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259f0760"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29259f08f0"/>
        <function-ref name="captured" scoped="" ref="0x7f29259f0a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259f0c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259f0da0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259ef020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB3" ref="0x7f29259deda0" loc="73:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB3" scoped="" ref="0x7f29259deda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259dd180"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29259dd310"/>
        <function-ref name="captured" scoped="" ref="0x7f29259dd4a0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259dd630"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259dd7c0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259dd950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA1" ref="0x7f29259f1570" loc="54:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f29259f1570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259f18f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259f1a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259f1c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259f1da0"/>
        <function-ref name="fired" scoped="" ref="0x7f29259f0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB3" ref="0x7f29259de020" loc="72:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB3" scoped="" ref="0x7f29259de020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259de3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259de530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259de6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259de850"/>
        <function-ref name="fired" scoped="" ref="0x7f29259de9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB6" ref="0x7f29259d4700" loc="82:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB6" scoped="" ref="0x7f29259d4700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259d4a80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29259d4c10"/>
        <function-ref name="captured" scoped="" ref="0x7f29259d4da0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259d3020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259d31b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259d3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB4" ref="0x7f29259ddd40" loc="74:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB4" scoped="" ref="0x7f29259ddd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259dc0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259dc270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259dc400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259dc590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259dc720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259dc8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259dca40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259dcbd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259dcd60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA0" ref="0x7f29259fbbe0" loc="50:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f29259fbbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259fa020"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259fa1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259fa340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259fa4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259fa660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259fa7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259fa980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259fab10"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259faca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB1" ref="0x7f29259e4890" loc="66:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB1" scoped="" ref="0x7f29259e4890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259e4c10"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29259e4da0"/>
        <function-ref name="captured" scoped="" ref="0x7f29259e3020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259e31b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259e3340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259e34d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB1" ref="0x7f29259e5a20" loc="65:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB1" scoped="" ref="0x7f29259e5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259e5da0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259e4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259e41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259e4340"/>
        <function-ref name="fired" scoped="" ref="0x7f29259e44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB1" ref="0x7f29259e65a0" loc="64:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB1" scoped="" ref="0x7f29259e65a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259e6920"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259e6ab0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259e6c40"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259e6dd0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259e5020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259e51b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259e5340"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259e54d0"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259e5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA2" ref="0x7f29259ed700" loc="58:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA2" scoped="" ref="0x7f29259ed700"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259eda80"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29259edc10"/>
        <function-ref name="captured" scoped="" ref="0x7f29259edda0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259ec020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259ec1b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259ec340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB4" ref="0x7f29259da120" loc="76:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB4" scoped="" ref="0x7f29259da120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259da4a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29259da630"/>
        <function-ref name="captured" scoped="" ref="0x7f29259da7c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259da950"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259daae0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259dac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB2" ref="0x7f29259e38c0" loc="67:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB2" scoped="" ref="0x7f29259e38c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259e3c40"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259e3dd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259e2020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259e21b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259e2340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259e24d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259e2660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259e27f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259e2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA2" ref="0x7f29259ee890" loc="57:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA2" scoped="" ref="0x7f29259ee890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259eec10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259eeda0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259ed020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259ed1b0"/>
        <function-ref name="fired" scoped="" ref="0x7f29259ed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerA" ref="0x7f29259fc360" loc="49:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f29259fc360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29259fc6e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f29259fc870"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259fca00"/>
        <function-ref name="get" scoped="" ref="0x7f29259fcb90"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259fcd20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259fb020"/>
        <function-ref name="getMode" scoped="" ref="0x7f29259fb1b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259fb340"/>
        <function-ref name="overflow" scoped="" ref="0x7f29259fb4d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f29259fb660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f29259fb7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB4" ref="0x7f29259db160" loc="75:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB4" scoped="" ref="0x7f29259db160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259db6e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259db870"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259dba00"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259dbb90"/>
        <function-ref name="fired" scoped="" ref="0x7f29259dbd20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlA1" ref="0x7f29259f6020" loc="53:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f29259f6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259f63a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259f6530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259f66c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259f6850"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259f69e0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259f6b70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259f6d00"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259f1020"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259f11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB5" ref="0x7f29259d90c0" loc="77:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB5" scoped="" ref="0x7f29259d90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259d9440"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259d95d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259d9760"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259d98f0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259d9a80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259d9c10"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259d9da0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259d8020"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259d81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureA0" ref="0x7f29259f7020" loc="52:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureA0" scoped="" ref="0x7f29259f7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259f73a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29259f7530"/>
        <function-ref name="captured" scoped="" ref="0x7f29259f76c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259f7850"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259f79e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259f7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB2" ref="0x7f29259e1ae0" loc="69:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB2" scoped="" ref="0x7f29259e1ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259e1e60"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29259e0020"/>
        <function-ref name="captured" scoped="" ref="0x7f29259e01b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259e0340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259e04d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259e0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA0" ref="0x7f29259f90c0" loc="51:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f29259f90c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259f9440"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259f95d0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259f9760"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259f98f0"/>
        <function-ref name="fired" scoped="" ref="0x7f29259f9a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB2" ref="0x7f29259e2d40" loc="68:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB2" scoped="" ref="0x7f29259e2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259e10e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259e1270"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259e1400"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259e1590"/>
        <function-ref name="fired" scoped="" ref="0x7f29259e1720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB5" ref="0x7f29259d73e0" loc="79:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB5" scoped="" ref="0x7f29259d73e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259d7760"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29259d78f0"/>
        <function-ref name="captured" scoped="" ref="0x7f29259d7a80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259d7c10"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259d7da0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259d6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB3" ref="0x7f29259e0a50" loc="71:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB3" scoped="" ref="0x7f29259e0a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259e0dd0"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259df020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259df1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259df340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259df4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259df660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259df7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259df980"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259dfb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerB" ref="0x7f29259ec6c0" loc="60:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerB" scoped="" ref="0x7f29259ec6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29259eca40"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f29259ecbd0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259ecd60"/>
        <function-ref name="get" scoped="" ref="0x7f29259ea020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259ea1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259ea340"/>
        <function-ref name="getMode" scoped="" ref="0x7f29259ea4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259ea660"/>
        <function-ref name="overflow" scoped="" ref="0x7f29259ea7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f29259ea980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f29259eab10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureB0" ref="0x7f29259e7570" loc="63:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureB0" scoped="" ref="0x7f29259e7570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259e78f0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29259e7a80"/>
        <function-ref name="captured" scoped="" ref="0x7f29259e7c10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259e7da0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259e6020"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259e61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB5" ref="0x7f29259d8570" loc="78:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB5" scoped="" ref="0x7f29259d8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259d88f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259d8a80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259d8c10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259d8da0"/>
        <function-ref name="fired" scoped="" ref="0x7f29259d7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB6" ref="0x7f29259d5890" loc="81:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB6" scoped="" ref="0x7f29259d5890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259d5c10"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259d5da0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259d4020"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259d41b0"/>
        <function-ref name="fired" scoped="" ref="0x7f29259d4340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB0" ref="0x7f29259e8570" loc="62:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareB0" scoped="" ref="0x7f29259e8570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259e89f0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259e8b80"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259e8d10"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259e7020"/>
        <function-ref name="fired" scoped="" ref="0x7f29259e71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ControlB6" ref="0x7f29259d6410" loc="80:../../../tos/chips/msp430/x1x2/timer/Msp430TimerC.nc">
      <component-ref qname="Msp430TimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlB6" scoped="" ref="0x7f29259d6410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259d6790"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259d6920"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259d6ab0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259d6c40"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259d6dd0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259d5020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259d51b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259d5340"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259d54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f292599a2f0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f292599a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292599a670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f292599cc20" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f292599cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292599a020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f292599a940" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f292599a940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292599acc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f292599c5b0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f292599c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292599c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f292599ec80" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f292599ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f292599d0a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f292599d230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f292599d3c0"/>
        <function-ref name="get" scoped="" ref="0x7f292599d550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f292599d6e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f292599d870"/>
        <function-ref name="getMode" scoped="" ref="0x7f292599da00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f292599db90"/>
        <function-ref name="overflow" scoped="" ref="0x7f292599dd20"/>
        <function-ref name="setMode" scoped="" ref="0x7f292599c020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f292599c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX0" ref="0x7f29259932f0" loc="55:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX0" scoped="" ref="0x7f29259932f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925993670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Overflow" ref="0x7f2925994c20" loc="54:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f2925994c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925993020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VectorTimerX1" ref="0x7f2925993940" loc="56:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerX1" scoped="" ref="0x7f2925993940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925993cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Event" ref="0x7f29259945b0" loc="53:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f29259945b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925994950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2925996c80" loc="52:../../../tos/chips/msp430/timer/Msp430TimerP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925996c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29259950a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2925995230"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259953c0"/>
        <function-ref name="get" scoped="" ref="0x7f2925995550"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259956e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925995870"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925995a00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925995b90"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925995d20"/>
        <function-ref name="setMode" scoped="" ref="0x7f2925994020"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f29259941b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2925948480" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2925948480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925948800"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2925948990"/>
        <function-ref name="captured" scoped="" ref="0x7f2925948b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925948cb0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925948e40"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2925947020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f292594a3f0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f292594a3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f292594a770"/>
        <function-ref name="getControl" scoped="" ref="0x7f292594a900"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f292594aa90"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f292594ac20"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f292594adb0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925949020"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259491b0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2925949340"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259494d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2925946930" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2925946930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925946cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f29259497a0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f29259497a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925949b20"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2925949cb0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2925949e40"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2925948020"/>
        <function-ref name="fired" scoped="" ref="0x7f29259481b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f29259472f0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f29259472f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925947670"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2925947800"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925947990"/>
        <function-ref name="get" scoped="" ref="0x7f2925947b20"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925947cb0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925947e40"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925946020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259461b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925946340"/>
        <function-ref name="setMode" scoped="" ref="0x7f29259464d0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2925946660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2925941930" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2925941930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925941cb0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2925941e40"/>
        <function-ref name="captured" scoped="" ref="0x7f2925940020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259401b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925940340"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29259404d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2925943940" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2925943940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2925943cc0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2925943e50"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925942020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259421b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2925942340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259424d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2925942660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259427f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2925942980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f292593ede0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f292593ede0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292593d180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2925942c50" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2925942c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925941020"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29259411b0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2925941340"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29259414d0"/>
        <function-ref name="fired" scoped="" ref="0x7f2925941660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f29259407a0" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f29259407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925940b20"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2925940cb0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925940e40"/>
        <function-ref name="get" scoped="" ref="0x7f292593e020"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f292593e1b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f292593e340"/>
        <function-ref name="getMode" scoped="" ref="0x7f292593e4d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f292593e660"/>
        <function-ref name="overflow" scoped="" ref="0x7f292593e7f0"/>
        <function-ref name="setMode" scoped="" ref="0x7f292593e980"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f292593eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2925939cf0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2925939cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259380a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2925938230"/>
        <function-ref name="captured" scoped="" ref="0x7f29259383c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925938550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259386e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2925938870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f292593bd20" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f292593bd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f292593a0e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f292593a270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f292593a400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f292593a590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f292593a720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f292593a8b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f292593aa40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f292593abd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f292593ad60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f29259362f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f29259362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925936670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2925939060" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2925939060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259393e0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2925939570"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2925939700"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2925939890"/>
        <function-ref name="fired" scoped="" ref="0x7f2925939a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2925938b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerA2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925938b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925937020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f29259371b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925937340"/>
        <function-ref name="get" scoped="" ref="0x7f29259374d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925937660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259377f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925937980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925937b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925937ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2925937e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2925936020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f29259312f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f29259312f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925931670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2925931800"/>
        <function-ref name="captured" scoped="" ref="0x7f2925931990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925931b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925931cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2925931e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2925933220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2925933220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259335a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2925933730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259338c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2925933a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2925933be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925933d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2925932020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259321b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2925932340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f292592e7a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f292592e7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292592eb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2925932610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2925932610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925932990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2925932b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2925932cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2925932e40"/>
        <function-ref name="fired" scoped="" ref="0x7f2925931020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2925930160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB0"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925930160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29259304e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2925930670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925930800"/>
        <function-ref name="get" scoped="" ref="0x7f2925930990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925930b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925930cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925930e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f292592e020"/>
        <function-ref name="overflow" scoped="" ref="0x7f292592e1b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f292592e340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f292592e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f29259297a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f29259297a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925929b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2925929cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2925929e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925928020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259281b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2925928340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f292592b6d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f292592b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f292592ba50"/>
        <function-ref name="getControl" scoped="" ref="0x7f292592bbe0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f292592bd70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f292592a020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f292592a1b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f292592a340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f292592a4d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f292592a660"/>
        <function-ref name="setControl" scoped="" ref="0x7f292592a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2925927c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2925927c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925926020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f292592aac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f292592aac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f292592ae40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2925929020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259291b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2925929340"/>
        <function-ref name="fired" scoped="" ref="0x7f29259294d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2925928610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB1"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925928610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925928990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2925928b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925928cb0"/>
        <function-ref name="get" scoped="" ref="0x7f2925928e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925927020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259271b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925927340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259274d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925927660"/>
        <function-ref name="setMode" scoped="" ref="0x7f29259277f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2925927980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f2925922cb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f2925922cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259210a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2925921230"/>
        <function-ref name="captured" scoped="" ref="0x7f29259213c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925921550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259216e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2925921870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2925924b30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2925924b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2925923020"/>
        <function-ref name="getControl" scoped="" ref="0x7f29259231b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925923340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29259234d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2925923660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29259237f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2925923980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2925923b10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2925923ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f292591f2f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f292591f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292591f670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2925922020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2925922020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259223a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2925922530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259226c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2925922850"/>
        <function-ref name="fired" scoped="" ref="0x7f29259229e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2925921b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB2"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925921b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925920020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f29259201b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925920340"/>
        <function-ref name="get" scoped="" ref="0x7f29259204d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925920660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259207f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925920980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925920b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925920ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2925920e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f292591f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f29259192f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f29259192f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925919670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2925919800"/>
        <function-ref name="captured" scoped="" ref="0x7f2925919990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925919b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925919cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2925919e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f292591b220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f292591b220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f292591b5a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f292591b730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f292591b8c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f292591ba50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f292591bbe0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f292591bd70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f292591a020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f292591a1b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f292591a340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f29259177a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f29259177a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925917b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f292591a610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f292591a610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f292591a990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f292591ab20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f292591acb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f292591ae40"/>
        <function-ref name="fired" scoped="" ref="0x7f2925919020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2925918160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB3"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925918160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29259184e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2925918670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925918800"/>
        <function-ref name="get" scoped="" ref="0x7f2925918990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925918b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925918cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925918e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925917020"/>
        <function-ref name="overflow" scoped="" ref="0x7f29259171b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2925917340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f29259174d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f29259127a0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f29259127a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925912b20"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2925912cb0"/>
        <function-ref name="captured" scoped="" ref="0x7f2925912e40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925911020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259111b0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2925911340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f29259146d0" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f29259146d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2925914a50"/>
        <function-ref name="getControl" scoped="" ref="0x7f2925914be0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925914d70"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2925913020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29259131b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925913340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29259134d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2925913660"/>
        <function-ref name="setControl" scoped="" ref="0x7f29259137f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f2925910c50" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f2925910c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292590e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2925913ac0" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2925913ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925913e40"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2925912020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29259121b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2925912340"/>
        <function-ref name="fired" scoped="" ref="0x7f29259124d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2925911610" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB4"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925911610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925911990"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2925911b20"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925911cb0"/>
        <function-ref name="get" scoped="" ref="0x7f2925911e40"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925910020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259101b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925910340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259104d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925910660"/>
        <function-ref name="setMode" scoped="" ref="0x7f29259107f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2925910980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f292590acb0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f292590acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29259090a0"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2925909230"/>
        <function-ref name="captured" scoped="" ref="0x7f29259093c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925909550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29259096e0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2925909870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f292590cb30" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f292590cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f292590b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f292590b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f292590b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f292590b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f292590b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f292590b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f292590b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f292590bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f292590bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f29259072f0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f29259072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925907670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f292590a020" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f292590a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f292590a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f292590a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f292590a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f292590a850"/>
        <function-ref name="fired" scoped="" ref="0x7f292590a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2925909b40" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB5"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925909b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925908020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f29259081b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925908340"/>
        <function-ref name="get" scoped="" ref="0x7f29259084d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925908660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29259087f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925908980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925908b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925908ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2925908e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2925907020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f29259022f0" loc="48:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f29259022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925902670"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f2925902800"/>
        <function-ref name="captured" scoped="" ref="0x7f2925902990"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925902b20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925902cb0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f2925902e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Control" ref="0x7f2925904220" loc="46:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Control" scoped="" ref="0x7f2925904220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29259045a0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2925904730"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29259048c0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2925904a50"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2925904be0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925904d70"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2925903020"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29259031b0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2925903340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Event" ref="0x7f29259007a0" loc="50:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Event" scoped="" ref="0x7f29259007a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925900b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7f2925903610" loc="47:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Compare" scoped="" ref="0x7f2925903610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2925903990"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2925903b20"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2925903cb0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2925903e40"/>
        <function-ref name="fired" scoped="" ref="0x7f2925902020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2925901160" loc="49:../../../tos/chips/msp430/timer/Msp430TimerCapComP.nc">
      <component-ref qname="Msp430TimerC.Msp430TimerB6"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925901160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29259014e0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2925901670"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925901800"/>
        <function-ref name="get" scoped="" ref="0x7f2925901990"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925901b20"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925901cb0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925901e40"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925900020"/>
        <function-ref name="overflow" scoped="" ref="0x7f29259001b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2925900340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f29259004d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB1" ref="0x7f29258f97b0" loc="7:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB1" scoped="" ref="0x7f29258f97b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f29258f9b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA0" ref="0x7f29258fa020" loc="4:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA0" scoped="" ref="0x7f29258fa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f29258fa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerA1" ref="0x7f29258fa7b0" loc="5:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerA1" scoped="" ref="0x7f29258fa7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f29258fab30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VectorTimerB0" ref="0x7f29258f9020" loc="6:../../../tos/chips/msp430/x1x2/timer/Msp430TimerCommonP.nc">
      <component-ref qname="Msp430TimerCommonP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VectorTimerB0" scoped="" ref="0x7f29258f9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerEvent"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f29258f93a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f2923fb5a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923fb5a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2923fb5e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2923fb4020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2923fb41b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2923fb4340"/>
        <function-ref name="fired" scoped="" ref="0x7f2923fb44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2923fb7190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923fb7190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2923fb7510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2923fb76a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923fb7830"/>
        <function-ref name="get" scoped="" ref="0x7f2923fb79c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923fb7b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2923fb7ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2923fb7e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2923fb6030"/>
        <function-ref name="overflow" scoped="" ref="0x7f2923fb61c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2923fb6350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2923fb64e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2923fbb020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2923fbb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923fb9870"/>
        <function-ref name="fired" scoped="" ref="0x7f2923fba840"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923fb9220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923fbad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923fb9d30"/>
        <function-ref name="start" scoped="" ref="0x7f2923fbbe30"/>
        <function-ref name="stop" scoped="" ref="0x7f2923fba380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2923fbc660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2923fbc660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2923fbc9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f2923fb6770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923fb6770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2923fb6af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2923fb6c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923fb6e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2923fb5020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2923fb51b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923fb5340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2923fb54d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2923fb5660"/>
        <function-ref name="setControl" scoped="" ref="0x7f2923fb57f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f29258718c0" loc="43:../../../tos/chips/msp430/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f29258718c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2925875700"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29258700d0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925875bc0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925870590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Counter32khz" ref="0x7f292586f8e0" loc="43:../../../tos/chips/msp430/x1x2/timer/Msp430Counter32khzC.nc">
      <component-ref qname="Msp430Counter32khzC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Counter32khz" scoped="" ref="0x7f292586f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f292586c780"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f292586b150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f292586cc40"/>
        <function-ref name="overflow" scoped="" ref="0x7f292586b610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f292585ac50" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f292585ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925859020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f29258591b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2925859340"/>
        <function-ref name="get" scoped="" ref="0x7f29258594d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2925859660"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29258597f0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925859980"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925859b10"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925859ca0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2925859e30"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2925858020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2925869b80" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430Counter32khzC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2925869b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f29258689b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f292585a360"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925868e70"/>
        <function-ref name="overflow" scoped="" ref="0x7f292585a820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f29258370f0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f29258370f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2925835020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29258359a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29258354e0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925835e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2925854cf0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2925854cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2925839b60"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925838550"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925838090"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925838a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2923fd2a90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2923fd2a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923fce2e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2923fd02e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923fd0c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923fd07a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923fce7a0"/>
        <function-ref name="start" scoped="" ref="0x7f2923fd18d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2923fd1de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f2923fcb210" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f2923fcb210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923fc8b30"/>
        <function-ref name="fired" scoped="" ref="0x7f2923fcaa60"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923fc84e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923fc8020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923fc7020"/>
        <function-ref name="start" scoped="" ref="0x7f2923fca090"/>
        <function-ref name="stop" scoped="" ref="0x7f2923fca5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2923fcee10" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="HilTimerMilliC.AlarmMilli32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2923fcee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2923fcdca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2923fcc670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2923fcc1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2923fccb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7f29257c29c0" loc="74:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="fired" scoped="" ref="0x7f29257c29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f29257c2d40"/>
        <function-ref name="runTask" scoped="" ref="0x7f29257c1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f29257c6850" loc="49:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f29257c6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f29257c2090"/>
        <function-ref name="fired" scoped="" ref="0x7f29257c3090"/>
        <function-ref name="startAt" scoped="" ref="0x7f29257c3a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f29257c3550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f29257c2550"/>
        <function-ref name="start" scoped="" ref="0x7f29257c56a0"/>
        <function-ref name="stop" scoped="" ref="0x7f29257c5bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f29257cb2f0" loc="48:../../../tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f29257cb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f29257c7870"/>
        <function-ref name="fired" scoped="" ref="0x7f29257cae40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f29257c8c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f29257c8780"/>
        <function-ref name="getdt" scoped="" ref="0x7f29257c61e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f29257c7cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f29257c8300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f29257ca020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f29257c7260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f29257ca4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f29257ca9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f2925743020" loc="58:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f2925743020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f292573f630"/>
        <function-ref name="fired" scoped="" ref="0x7f2925742a60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2925741920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f29257414a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f292573e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f292573fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2925741020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2925743c10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f292573f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2925742110"/>
        <function-ref name="stop" scoped="" ref="0x7f29257425e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f292573e450" loc="59:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f292573e450"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f292573e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f292574a8e0" loc="57:../../../tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f292574a8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2925745020"/>
        <function-ref name="fired" scoped="" ref="0x7f29257484c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2925746300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2925748e00"/>
        <function-ref name="getdt" scoped="" ref="0x7f2925745960"/>
        <function-ref name="gett0" scoped="" ref="0x7f29257454c0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2925748960"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2925749560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2925746930"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2925749a50"/>
        <function-ref name="stop" scoped="" ref="0x7f2925748020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7f2923dd6100" loc="153:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="updateFromTimer" scoped="" ref="0x7f2923dd6100"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2923dd6480"/>
        <function-ref name="runTask" scoped="" ref="0x7f2923dd6610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7f2923dde3d0" loc="65:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerFrom" scoped="" ref="0x7f2923dde3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923dda870"/>
        <function-ref name="fired" scoped="" ref="0x7f2923ddde40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2923ddbc00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2923ddb780"/>
        <function-ref name="getdt" scoped="" ref="0x7f2923dd91e0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2923ddacf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923ddb300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2923ddd020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2923dda260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2923ddd4f0"/>
        <function-ref name="stop" scoped="" ref="0x7f2923ddd9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSkew" ref="0x7f2923dd8a40" loc="67:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimeSkew" scoped="" ref="0x7f2923dd8a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TimeSkew"/>
      </instance>
      <interface-functions>
        <function-ref name="skew" scoped="" ref="0x7f2923dd8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Platform" ref="0x7f2923dd95d0" loc="66:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Platform" scoped="" ref="0x7f2923dd95d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Platform"/>
      </instance>
      <interface-functions>
        <function-ref name="localTime" scoped="" ref="0x7f2923dd8660"/>
        <function-ref name="usecsExpired" scoped="" ref="0x7f2923dd87f0"/>
        <function-ref name="usecsRawSize" scoped="" ref="0x7f2923dd9c70"/>
        <function-ref name="usecsRaw" scoped="" ref="0x7f2923dd9e00"/>
        <function-ref name="jiffiesExpired" scoped="" ref="0x7f2923dd8020"/>
        <function-ref name="getIntPriority" scoped="" ref="0x7f2923dd81b0"/>
        <function-ref name="set_unaligned_traps" scoped="" ref="0x7f2923dd8340"/>
        <function-ref name="jiffiesRaw" scoped="" ref="0x7f2923dd84d0"/>
        <function-ref name="jiffiesRawSize" scoped="" ref="0x7f2923dd9950"/>
        <function-ref name="node_id" scoped="" ref="0x7f2923dd9ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2923de5db0" loc="63:../../../tos/lib/timer/VirtualizeTimerImplP.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC.VT"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2923de5db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923ddf470"/>
        <function-ref name="fired" scoped="" ref="0x7f2923de39b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2923de17c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2923de1320"/>
        <function-ref name="getdt" scoped="" ref="0x7f2923ddfdb0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2923ddf910"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923de3e50"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2923de4a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2923de1df0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2923de3020"/>
        <function-ref name="stop" scoped="" ref="0x7f2923de3510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f292573b020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f292573b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f292573bc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2925731300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2925731300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2925730150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925730ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925730610"/>
        <function-ref name="overflow" scoped="" ref="0x7f292572e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2925723260" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerMiSlot"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2925723260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f292571f6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f2925722ca0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2925720a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f29257205f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f292571e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f292571fb60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2925720170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2925723e50"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f292571f0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2925722350"/>
        <function-ref name="stop" scoped="" ref="0x7f2925722820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f292571db00" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="SlaveAppC.TimerLeds"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f292571db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2925718110"/>
        <function-ref name="fired" scoped="" ref="0x7f292571a5b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f29257194a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2925719020"/>
        <function-ref name="getdt" scoped="" ref="0x7f2925718a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f2925718590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f292571aa30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f292571b750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2925719ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f292571bc20"/>
        <function-ref name="stop" scoped="" ref="0x7f292571a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f29257130c0" loc="61:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f29257130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2925713440"/>
        <function-ref name="stopDone" scoped="" ref="0x7f29257135d0"/>
        <function-ref name="start" scoped="" ref="0x7f2925713760"/>
        <function-ref name="stop" scoped="" ref="0x7f29257138f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f29257121d0" loc="63:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f29257121d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2925712550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f29257126e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2925712870"/>
        <function-ref name="cancel" scoped="" ref="0x7f2925712a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2925712b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2925710020" loc="65:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f2925710020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f29257103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2925710630" loc="67:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2925710630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29257109b0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2925710b40"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2925710cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2925710e60"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f292570f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f29256fe6b0" loc="70:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f29256fe6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f292570cce0"/>
        <function-ref name="clear" scoped="" ref="0x7f29256ff460"/>
        <function-ref name="isValid" scoped="" ref="0x7f292570c5b0"/>
        <function-ref name="set" scoped="" ref="0x7f29256ffb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f29256f15b0" loc="72:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f29256f15b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f29256f1930"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f29256f1ac0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f29256f1c50"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f29256f1de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f29257113f0" loc="64:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f29257113f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2925711770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f29257064c0" loc="69:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f29257064c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2925706840"/>
        <function-ref name="noAck" scoped="" ref="0x7f29257069d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2925706b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f292570f2d0" loc="68:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f292570f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f292570f650"/>
        <function-ref name="source" scoped="" ref="0x7f292570f7e0"/>
        <function-ref name="address" scoped="" ref="0x7f292570f970"/>
        <function-ref name="destination" scoped="" ref="0x7f292570fb00"/>
        <function-ref name="setSource" scoped="" ref="0x7f292570fc90"/>
        <function-ref name="setDestination" scoped="" ref="0x7f292570fe20"/>
        <function-ref name="type" scoped="" ref="0x7f292570e020"/>
        <function-ref name="setType" scoped="" ref="0x7f292570e1b0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f292570e340"/>
        <function-ref name="setGroup" scoped="" ref="0x7f292570e4d0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f292570e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f29256fd840" loc="71:../../../tos/platforms/telosa/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f29256fd840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f29256fcdd0"/>
        <function-ref name="clear" scoped="" ref="0x7f29256fa540"/>
        <function-ref name="isValid" scoped="" ref="0x7f29256fc6a0"/>
        <function-ref name="set" scoped="" ref="0x7f29256fac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f29256e5080" loc="55:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f29256e5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f29256e5400"/>
        <function-ref name="stopDone" scoped="" ref="0x7f29256e5590"/>
        <function-ref name="start" scoped="" ref="0x7f29256e5720"/>
        <function-ref name="stop" scoped="" ref="0x7f29256e58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f29256d2d40" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f29256d2d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f29256db0e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f29256db270"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f29256db400"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f29256db590"/>
        <function-ref name="setCca" scoped="" ref="0x7f29256db720"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f29256db8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f29256c6d20" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f29256c6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f29256d01c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f29256e0c20" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f29256e0c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29256df020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f29256df1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f29256df340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f29256df4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f29256df660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f29256e41d0" loc="56:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f29256e41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f29256e4550"/>
        <function-ref name="getPayload" scoped="" ref="0x7f29256e46e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f29256e4870"/>
        <function-ref name="cancel" scoped="" ref="0x7f29256e4a00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f29256e4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f29256e1020" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f29256e1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f29256e13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f29256df930" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f29256df930"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f29256dfcb0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f29256dfe40"/>
        <function-ref name="getRssi" scoped="" ref="0x7f29256de020"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f29256de1b0"/>
        <function-ref name="getPower" scoped="" ref="0x7f29256de340"/>
        <function-ref name="getLqi" scoped="" ref="0x7f29256de4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f29256dbbb0" loc="65:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f29256dbbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f29256d9020"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f29256d91b0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f29256d9340"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f29256d94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f29256e23f0" loc="57:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f29256e23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f29256e2770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f29256de800" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f29256de800"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f29256deb80"/>
        <function-ref name="noAck" scoped="" ref="0x7f29256ded10"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f29256dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f29256d1020" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f29256d1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f29256d13a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f29256d1530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f29256d16c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f29256d1850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f29256d19e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f29256e1650" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f29256e1650"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f29256e19d0"/>
        <function-ref name="source" scoped="" ref="0x7f29256e1b60"/>
        <function-ref name="address" scoped="" ref="0x7f29256e1cf0"/>
        <function-ref name="destination" scoped="" ref="0x7f29256e1e80"/>
        <function-ref name="setSource" scoped="" ref="0x7f29256e0030"/>
        <function-ref name="setDestination" scoped="" ref="0x7f29256e01c0"/>
        <function-ref name="type" scoped="" ref="0x7f29256e0350"/>
        <function-ref name="setType" scoped="" ref="0x7f29256e04e0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f29256e0670"/>
        <function-ref name="setGroup" scoped="" ref="0x7f29256e0800"/>
        <function-ref name="localGroup" scoped="" ref="0x7f29256e0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f29256daa80" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f29256daa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f29256dae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f29256c8b70" loc="43:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f29256c8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f29256c2020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f29256c21b0"/>
        <function-ref name="start" scoped="" ref="0x7f29256c2340"/>
        <function-ref name="stop" scoped="" ref="0x7f29256c24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f29256af9d0" loc="55:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f29256af9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f29256afd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f29256aeb70" loc="57:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f29256aeb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f29256ad020"/>
        <function-ref name="setRetries" scoped="" ref="0x7f29256ad1b0"/>
        <function-ref name="getRetries" scoped="" ref="0x7f29256ad340"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f29256ad4d0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f29256ad660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f29256b0020" loc="53:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f29256b0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f29256b03a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f29256b0530"/>
        <function-ref name="getRssi" scoped="" ref="0x7f29256b06c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f29256b0850"/>
        <function-ref name="getPower" scoped="" ref="0x7f29256b09e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f29256b0b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f29256ba990" loc="50:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f29256ba990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f29256bad10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f29256b2020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f29256b21b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f29256b2340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f29256b24d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f29256ae080" loc="56:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f29256ae080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f29256ae400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f29256ae590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f29256ae720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f29256ae8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f29256bb500" loc="47:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f29256bb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f29256bb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x7f29256af020" loc="54:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f29256af020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f29256af3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f29256af530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f29256af6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f29256c1210" loc="45:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29256c1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29256c1590"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29256c1720"/>
        <function-ref name="request" scoped="" ref="0x7f29256c18b0"/>
        <function-ref name="granted" scoped="" ref="0x7f29256c1a40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29256c1bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f29256b16f0" loc="46:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f29256b16f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f29256b1a70"/>
        <function-ref name="getPayload" scoped="" ref="0x7f29256b1c00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f29256b1d90"/>
        <function-ref name="cancel" scoped="" ref="0x7f29256bb020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f29256bb1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f29256bbbc0" loc="48:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f29256bbbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29256ba020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f29256ba1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f29256ba340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f29256ba4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f29256ba660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f29256b2840" loc="51:../../../tos/chips/cc2420/CC2420RadioC.nc">
      <component-ref qname="CC2420RadioC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f29256b2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f29256b2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f29256aa390" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f29256aa390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f29256aa710"/>
        <function-ref name="stopDone" scoped="" ref="0x7f29256aa8a0"/>
        <function-ref name="start" scoped="" ref="0x7f29256aaa30"/>
        <function-ref name="stop" scoped="" ref="0x7f29256aabc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f29256a7330" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f29256a7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f29256a76b0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f29256a7840"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f29256a79d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f29256a7b60"/>
        <function-ref name="setCca" scoped="" ref="0x7f29256a7cf0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f29256a7e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f29256aae80" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f29256aae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f29256a8220"/>
        <function-ref name="getPayload" scoped="" ref="0x7f29256a83b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f29256a8540"/>
        <function-ref name="cancel" scoped="" ref="0x7f29256a86d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f29256a8860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f29256a8b40" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f29256a8b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f29256a7020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f29256a5e70" loc="39:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f29256a5e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f29256a2220"/>
        <function-ref name="stopDone" scoped="" ref="0x7f29256a23b0"/>
        <function-ref name="start" scoped="" ref="0x7f29256a2540"/>
        <function-ref name="stop" scoped="" ref="0x7f29256a26d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f29256a17e0" loc="41:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f29256a17e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f29256a1b60"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f29256a1cf0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f29256a1e80"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f29256a0030"/>
        <function-ref name="setCca" scoped="" ref="0x7f29256a01c0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f29256a0350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f2925696060" loc="47:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f2925696060"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f29256963e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2925696570"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2925696700"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2925696890"/>
        <function-ref name="setCca" scoped="" ref="0x7f2925696a20"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2925696bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f292568b330" loc="50:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f292568b330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f292568b6b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f292568b840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f292568b9d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f292568bb60"/>
        <function-ref name="getPower" scoped="" ref="0x7f292568bcf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f292568be80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x7f292568d2a0" loc="46:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f292568d2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f292568d620"/>
        <function-ref name="cancel" scoped="" ref="0x7f292568d7b0"/>
        <function-ref name="modify" scoped="" ref="0x7f292568d940"/>
        <function-ref name="sendDone" scoped="" ref="0x7f292568dad0"/>
        <function-ref name="resend" scoped="" ref="0x7f292568dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f29256a2990" loc="40:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f29256a2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f29256a2d10"/>
        <function-ref name="getPayload" scoped="" ref="0x7f29256a1020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f29256a11b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f29256a1340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f29256a14d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f292568a420" loc="48:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f292568a420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f292568a7a0"/>
        <function-ref name="rand32" scoped="" ref="0x7f292568a930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f2925695760" loc="45:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f2925695760"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2925695ae0"/>
        <function-ref name="stop" scoped="" ref="0x7f2925695c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2925683920" loc="51:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2925683920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2925683ca0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2925683e30"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2925688020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x7f2925698b50" loc="44:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f2925698b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f292569e020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f292569e1b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f292569e340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f292569e4d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f292569e660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f292569e7f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f292569e980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f292569eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f292568abf0" loc="49:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f292568abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f292568c020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f292568c1b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f292568c340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f292568c4d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f292568c660"/>
        <function-ref name="get" scoped="" ref="0x7f292568c7f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f292568c980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f292568b020"/>
        <function-ref name="set" scoped="" ref="0x7f292568cb10"/>
        <function-ref name="led0On" scoped="" ref="0x7f292568cca0"/>
        <function-ref name="led2On" scoped="" ref="0x7f292568ce30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f29256a0640" loc="43:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29256a0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29256a09c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29256a0b50"/>
        <function-ref name="request" scoped="" ref="0x7f29256a0ce0"/>
        <function-ref name="granted" scoped="" ref="0x7f29256a0e70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292569f030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x7f2925687110" loc="52:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControlState" scoped="" ref="0x7f2925687110"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2925687590"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2925687720"/>
        <function-ref name="isState" scoped="" ref="0x7f29256878b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2925687a40"/>
        <function-ref name="requestState" scoped="" ref="0x7f2925687bd0"/>
        <function-ref name="forceState" scoped="" ref="0x7f2925687d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x7f2925679b70" loc="76:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sendDone_task" scoped="" ref="0x7f2925679b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2925678020"/>
        <function-ref name="runTask" scoped="" ref="0x7f29256781b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x7f292567aba0" loc="75:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopDone_task" scoped="" ref="0x7f292567aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2925679020"/>
        <function-ref name="runTask" scoped="" ref="0x7f29256791b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x7f292567cc20" loc="74:../../../tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startDone_task" scoped="" ref="0x7f292567cc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f292567a020"/>
        <function-ref name="runTask" scoped="" ref="0x7f292567a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f2925622dc0" loc="45:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f2925622dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f292562e180"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f292562e310"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f292562e4a0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f292562e630"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f292562e7c0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f292562e950"/>
        <function-ref name="setChannel" scoped="" ref="0x7f292562eae0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f292562ec70"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f292562ee00"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f292562d020"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f292562d1b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f292562d340"/>
        <function-ref name="sync" scoped="" ref="0x7f292562d4d0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f292562d760"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f292562d8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f292561f020" loc="47:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f292561f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f292561fc10"/>
        <function-ref name="readDone" scoped="" ref="0x7f292561e0d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f292562dbf0" loc="46:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f292562dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f2925620020"/>
        <function-ref name="rfOff" scoped="" ref="0x7f29256201b0"/>
        <function-ref name="rxOn" scoped="" ref="0x7f2925620340"/>
        <function-ref name="startVReg" scoped="" ref="0x7f29256204d0"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f2925620660"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f29256207f0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f2925620980"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f2925620b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2925632950" loc="44:../../../tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2925632950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2925632cd0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2925632e60"/>
        <function-ref name="request" scoped="" ref="0x7f292562f020"/>
        <function-ref name="granted" scoped="" ref="0x7f292562f1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292562f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x7f292561a970" loc="46:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f292561a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f292561acf0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f292561ae80"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f2925619030"/>
        <function-ref name="syncDone" scoped="" ref="0x7f29256191c0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f2925619350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f29256194e0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2925619670"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f2925619800"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f2925619990"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f2925619b20"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f2925619cb0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f2925619e40"/>
        <function-ref name="sync" scoped="" ref="0x7f2925618020"/>
        <function-ref name="getChannel" scoped="" ref="0x7f29256182b0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f2925618440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x7f29255f88e0" loc="66:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f29255f88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29255f8c60"/>
        <function-ref name="write" scoped="" ref="0x7f29255f8df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x7f2925613020" loc="50:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2925613020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f29256133a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x7f2925613a10" loc="52:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StartupTimer" scoped="" ref="0x7f2925613a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f292560f2a0"/>
        <function-ref name="fired" scoped="" ref="0x7f29256112a0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2925611c20"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2925611760"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f292560f760"/>
        <function-ref name="start" scoped="" ref="0x7f2925612890"/>
        <function-ref name="stop" scoped="" ref="0x7f2925612da0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x7f29255f9710" loc="64:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f29255f9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29255f9a90"/>
        <function-ref name="write" scoped="" ref="0x7f29255f9c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x7f292560ee70" loc="54:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f292560ee70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292560d220"/>
        <function-ref name="isInput" scoped="" ref="0x7f292560d3b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f292560d540"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292560d6d0"/>
        <function-ref name="get" scoped="" ref="0x7f292560d860"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292560d9f0"/>
        <function-ref name="set" scoped="" ref="0x7f292560db80"/>
        <function-ref name="clr" scoped="" ref="0x7f292560dd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x7f2925617b40" loc="48:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadRssi" scoped="" ref="0x7f2925617b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2925616750"/>
        <function-ref name="readDone" scoped="" ref="0x7f2925616bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x7f29255e6820" loc="126:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="syncDone" scoped="" ref="0x7f29255e6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f29255e6ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f29255e6d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x7f29255f71c0" loc="67:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f29255f71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29255f7540"/>
        <function-ref name="write" scoped="" ref="0x7f29255f76d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f29255f7a70" loc="68:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f29255f7a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29255f7df0"/>
        <function-ref name="write" scoped="" ref="0x7f29255f6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x7f29255fc550" loc="62:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f29255fc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29255fc8d0"/>
        <function-ref name="write" scoped="" ref="0x7f29255fca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f2925602390" loc="57:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2925602390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f2925602710"/>
        <function-ref name="changed" scoped="" ref="0x7f29256028a0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f2925602a30"/>
        <function-ref name="setAddress" scoped="" ref="0x7f2925602bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f292560fc50" loc="53:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f292560fc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292560e020"/>
        <function-ref name="isInput" scoped="" ref="0x7f292560e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f292560e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292560e4d0"/>
        <function-ref name="get" scoped="" ref="0x7f292560e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292560e7f0"/>
        <function-ref name="set" scoped="" ref="0x7f292560e980"/>
        <function-ref name="clr" scoped="" ref="0x7f292560eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x7f29255f5120" loc="71:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f29255f5120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f29255f56a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x7f292560c0f0" loc="55:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f292560c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292560c470"/>
        <function-ref name="isInput" scoped="" ref="0x7f292560c600"/>
        <function-ref name="toggle" scoped="" ref="0x7f292560c790"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292560c920"/>
        <function-ref name="get" scoped="" ref="0x7f292560cab0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292560cc40"/>
        <function-ref name="set" scoped="" ref="0x7f292560cdd0"/>
        <function-ref name="clr" scoped="" ref="0x7f292560b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f292561b4a0" loc="44:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f292561b4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f292561b820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f29255f8020" loc="65:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f29255f8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29255f83a0"/>
        <function-ref name="write" scoped="" ref="0x7f29255f8530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x7f29255f5a40" loc="72:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f29255f5a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f29255f5dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f29255f41d0" loc="74:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f29255f41d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29255f4550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29255f46e0"/>
        <function-ref name="request" scoped="" ref="0x7f29255f4870"/>
        <function-ref name="granted" scoped="" ref="0x7f29255f4a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29255f4b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x7f29255f2d90" loc="76:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SyncResource" scoped="" ref="0x7f29255f2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29255f1180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29255f1310"/>
        <function-ref name="request" scoped="" ref="0x7f29255f14a0"/>
        <function-ref name="granted" scoped="" ref="0x7f29255f1630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29255f17c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x7f2925618740" loc="47:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Power" scoped="" ref="0x7f2925618740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x7f2925618ac0"/>
        <function-ref name="rfOff" scoped="" ref="0x7f2925618c50"/>
        <function-ref name="rxOn" scoped="" ref="0x7f2925618de0"/>
        <function-ref name="startVReg" scoped="" ref="0x7f2925617020"/>
        <function-ref name="stopVReg" scoped="" ref="0x7f29256171b0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x7f2925617340"/>
        <function-ref name="stopOscillator" scoped="" ref="0x7f29256174d0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x7f2925617660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x7f29255fce00" loc="63:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f29255fce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29255f91c0"/>
        <function-ref name="write" scoped="" ref="0x7f29255f9350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x7f29255fabe0" loc="61:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f29255fabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29255fc020"/>
        <function-ref name="write" scoped="" ref="0x7f29255fc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x7f29255f32b0" loc="69:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f29255f32b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f29255f3630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f29255f1a80" loc="78:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f29255f1a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f29255f1e00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f29255f0020"/>
        <function-ref name="led1On" scoped="" ref="0x7f29255f01b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f29255f0340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f29255f04d0"/>
        <function-ref name="get" scoped="" ref="0x7f29255f0660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f29255f07f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f29255f0e30"/>
        <function-ref name="set" scoped="" ref="0x7f29255f0980"/>
        <function-ref name="led0On" scoped="" ref="0x7f29255f0b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f29255f0ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x7f29255e8940" loc="125:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="sync" scoped="" ref="0x7f29255e8940"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f29255e8cc0"/>
        <function-ref name="runTask" scoped="" ref="0x7f29255e8e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f292561bb10" loc="45:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f292561bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f292561a020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f292561a1b0"/>
        <function-ref name="request" scoped="" ref="0x7f292561a340"/>
        <function-ref name="granted" scoped="" ref="0x7f292561a4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292561a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x7f29256055e0" loc="60:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f29256055e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2925605960"/>
        <function-ref name="write" scoped="" ref="0x7f2925605af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IEEEADR" ref="0x7f29255fdc30" loc="59:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f29255fdc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29256050e0"/>
        <function-ref name="write" scoped="" ref="0x7f2925605270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x7f2925607c00" loc="56:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f2925607c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292560a020"/>
        <function-ref name="disable" scoped="" ref="0x7f292560a1b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f292560a340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f292560a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x7f29255f2020" loc="75:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RssiResource" scoped="" ref="0x7f29255f2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29255f23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29255f2530"/>
        <function-ref name="request" scoped="" ref="0x7f29255f26c0"/>
        <function-ref name="granted" scoped="" ref="0x7f29255f2850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29255f29e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x7f29255f39c0" loc="70:../../../tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f29255f39c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f29255f3d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2925571c70" loc="45:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2925571c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f292556e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f292556e690" loc="46:../../../tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f292556e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f292556a020"/>
        <function-ref name="fired" scoped="" ref="0x7f292556b020"/>
        <function-ref name="startAt" scoped="" ref="0x7f292556b9a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f292556b4e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f292556a4e0"/>
        <function-ref name="start" scoped="" ref="0x7f292556c5b0"/>
        <function-ref name="stop" scoped="" ref="0x7f292556cac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2925568a20" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2925568a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2925568da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x7f29255672e0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm32khz32" scoped="" ref="0x7f29255672e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f292552db30"/>
        <function-ref name="fired" scoped="" ref="0x7f292552eae0"/>
        <function-ref name="startAt" scoped="" ref="0x7f292552d4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f292552d020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f292552c020"/>
        <function-ref name="start" scoped="" ref="0x7f292552e110"/>
        <function-ref name="stop" scoped="" ref="0x7f292552e620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2923d7e570" loc="44:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2923d7e570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923d7cdb0"/>
        <function-ref name="fired" scoped="" ref="0x7f2923d7dda0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923d7c760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923d7c2a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923d7a2a0"/>
        <function-ref name="start" scoped="" ref="0x7f2923d7d3d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2923d7d8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2923d80c80" loc="43:../../../tos/chips/msp430/timer/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2923d80c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2923d7e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2923d76570" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2923d76570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923d74db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2923d75da0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923d74760"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923d742a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923d732a0"/>
        <function-ref name="start" scoped="" ref="0x7f2923d753d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2923d758e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2923d78c90" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2923d78c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2923d760a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f2923d5a020" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923d5a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2923d5a3a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2923d5a530"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2923d5a6c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2923d5a850"/>
        <function-ref name="fired" scoped="" ref="0x7f2923d5a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2923d60570" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923d60570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2923d608f0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2923d60a80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923d60c10"/>
        <function-ref name="get" scoped="" ref="0x7f2923d60da0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923d5f020"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2923d5f1b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2923d5f340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2923d5f4d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2923d5f660"/>
        <function-ref name="setMode" scoped="" ref="0x7f2923d5f7f0"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2923d5f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2923d5fc10" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923d5fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2923d5b020"/>
        <function-ref name="getControl" scoped="" ref="0x7f2923d5b1b0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923d5b340"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2923d5b4d0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2923d5b660"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923d5b7f0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2923d5b980"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2923d5bb10"/>
        <function-ref name="setControl" scoped="" ref="0x7f2923d5bca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f2923d51da0" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923d51da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2923d50180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2923d50310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2923d504a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2923d50630"/>
        <function-ref name="fired" scoped="" ref="0x7f2923d507c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2923d534c0" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923d534c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2923d53840"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2923d539d0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923d53b60"/>
        <function-ref name="get" scoped="" ref="0x7f2923d53cf0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923d53e80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2923d52030"/>
        <function-ref name="getMode" scoped="" ref="0x7f2923d521c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2923d52350"/>
        <function-ref name="overflow" scoped="" ref="0x7f2923d524e0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2923d52670"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2923d52800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2923d57340" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2923d57340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923d55ba0"/>
        <function-ref name="fired" scoped="" ref="0x7f2923d56b80"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923d55550"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923d55090"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923d53090"/>
        <function-ref name="start" scoped="" ref="0x7f2923d561b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2923d566c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2923d58a30" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2923d58a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2923d58db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f2923d52a90" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.AlarmC.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923d52a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2923d52e10"/>
        <function-ref name="getControl" scoped="" ref="0x7f2923d51020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923d511b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2923d51340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2923d514d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923d51660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2923d517f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2923d51980"/>
        <function-ref name="setControl" scoped="" ref="0x7f2923d51b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2925551650" loc="43:../../../tos/chips/msp430/timer/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2925551650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f29255505b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f292554f020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925550a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f292554f4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x7f29255496d0" loc="63:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CounterFrom" scoped="" ref="0x7f29255496d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f29255475b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2925546020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2925547a70"/>
        <function-ref name="overflow" scoped="" ref="0x7f29255464e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f292554b2e0" loc="62:../../../tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f292554b2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f292554a110"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f292554aa90"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f292554a5d0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2925549020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2923d71890" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2923d71890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923d6d0d0"/>
        <function-ref name="fired" scoped="" ref="0x7f2923d6e0d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923d6ea50"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923d6e590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923d6d590"/>
        <function-ref name="start" scoped="" ref="0x7f2923d706e0"/>
        <function-ref name="stop" scoped="" ref="0x7f2923d70bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f2923d6a0a0" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f2923d6a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923d67b30"/>
        <function-ref name="fired" scoped="" ref="0x7f2923d699f0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923d674e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923d67020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923d66020"/>
        <function-ref name="start" scoped="" ref="0x7f2923d69020"/>
        <function-ref name="stop" scoped="" ref="0x7f2923d69530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2923d6dc00" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2923d6dc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2923d6ca80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2923d6b4e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2923d6b020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2923d6b9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x7f29255266a0" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f29255266a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925526a20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925526bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925526d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925525020"/>
        <function-ref name="get" scoped="" ref="0x7f29255251b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925525340"/>
        <function-ref name="set" scoped="" ref="0x7f29255254d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925525660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x7f29255259d0" loc="45:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f29255259d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925525d50"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925523020"/>
        <function-ref name="toggle" scoped="" ref="0x7f29255231b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925523340"/>
        <function-ref name="get" scoped="" ref="0x7f29255234d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925523660"/>
        <function-ref name="set" scoped="" ref="0x7f29255237f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925523980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x7f2925523ce0" loc="46:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSTN" scoped="" ref="0x7f2925523ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29255220a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925522230"/>
        <function-ref name="toggle" scoped="" ref="0x7f29255223c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925522550"/>
        <function-ref name="get" scoped="" ref="0x7f29255226e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925522870"/>
        <function-ref name="set" scoped="" ref="0x7f2925522a00"/>
        <function-ref name="clr" scoped="" ref="0x7f2925522b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x7f2925527370" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f2925527370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29255276f0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925527880"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925527a10"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925527ba0"/>
        <function-ref name="get" scoped="" ref="0x7f2925527d30"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925526020"/>
        <function-ref name="set" scoped="" ref="0x7f29255261b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925526340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x7f2925520380" loc="48:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="VREN" scoped="" ref="0x7f2925520380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925520700"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925520890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925520a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925520bb0"/>
        <function-ref name="get" scoped="" ref="0x7f2925520d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292551f020"/>
        <function-ref name="set" scoped="" ref="0x7f292551f1b0"/>
        <function-ref name="clr" scoped="" ref="0x7f292551f340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x7f29255280e0" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f29255280e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925528460"/>
        <function-ref name="isInput" scoped="" ref="0x7f29255285f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925528780"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925528910"/>
        <function-ref name="get" scoped="" ref="0x7f2925528aa0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925528c30"/>
        <function-ref name="set" scoped="" ref="0x7f2925528dc0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925527020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x7f2925521020" loc="47:../../../tos/platforms/telosa/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f2925521020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29255213a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925521530"/>
        <function-ref name="toggle" scoped="" ref="0x7f29255216c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925521850"/>
        <function-ref name="get" scoped="" ref="0x7f29255219e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925521b70"/>
        <function-ref name="set" scoped="" ref="0x7f2925521d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2925520020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f292551d930" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f292551d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292551dcb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f292551de40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f292551c020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f292551bc10"/>
        <function-ref name="toggle" scoped="" ref="0x7f292551c340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292551c4d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f292551c660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f292551c7f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292551c980"/>
        <function-ref name="get" scoped="" ref="0x7f292551cb10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f292551cca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f292551ce30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f292551b020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f292551b2b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f292551b440"/>
        <function-ref name="set" scoped="" ref="0x7f292551b5d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f292551b760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f292551b8f0"/>
        <function-ref name="clr" scoped="" ref="0x7f292551c1b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f292551ba80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f292551e710" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CCAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f292551e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292551ea90"/>
        <function-ref name="isInput" scoped="" ref="0x7f292551ec20"/>
        <function-ref name="toggle" scoped="" ref="0x7f292551edb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292551d020"/>
        <function-ref name="get" scoped="" ref="0x7f292551d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292551d340"/>
        <function-ref name="set" scoped="" ref="0x7f292551d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f292551d660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2925517020" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2925517020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29255173a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925517530"/>
        <function-ref name="setResistor" scoped="" ref="0x7f29255176c0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f29255154d0"/>
        <function-ref name="toggle" scoped="" ref="0x7f29255179e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925517b70"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925517d00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925516020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29255161b0"/>
        <function-ref name="get" scoped="" ref="0x7f2925516340"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f29255164d0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925516660"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f29255167f0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925516a80"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925516c10"/>
        <function-ref name="set" scoped="" ref="0x7f2925516da0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925515020"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f29255151b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925517850"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925515340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2925519da0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.CSNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2925519da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925518180"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925518310"/>
        <function-ref name="toggle" scoped="" ref="0x7f29255184a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925518630"/>
        <function-ref name="get" scoped="" ref="0x7f29255187c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925518950"/>
        <function-ref name="set" scoped="" ref="0x7f2925518ae0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925518c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2925512610" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2925512610"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925512990"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925512b20"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925512cb0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925510980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925511020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f29255111b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925511340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f29255114d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925511660"/>
        <function-ref name="get" scoped="" ref="0x7f29255117f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925511980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925511b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925511ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925510020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29255101b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925510340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f29255104d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925510660"/>
        <function-ref name="clr" scoped="" ref="0x7f2925512e40"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f29255107f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f29255134a0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f29255134a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925513820"/>
        <function-ref name="isInput" scoped="" ref="0x7f29255139b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925513b40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925513cd0"/>
        <function-ref name="get" scoped="" ref="0x7f2925513e60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925512020"/>
        <function-ref name="set" scoped="" ref="0x7f29255121b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2925512340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f292550dc60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f292550dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292550b020"/>
        <function-ref name="isInput" scoped="" ref="0x7f292550b1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f292550b340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925509020"/>
        <function-ref name="toggle" scoped="" ref="0x7f292550b660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292550b7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f292550b980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f292550bb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292550bca0"/>
        <function-ref name="get" scoped="" ref="0x7f292550be30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f292550a020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f292550a1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f292550a340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f292550a5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f292550a760"/>
        <function-ref name="set" scoped="" ref="0x7f292550a8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f292550aa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f292550ac10"/>
        <function-ref name="clr" scoped="" ref="0x7f292550b4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f292550ada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f292550eb00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.FIFOPM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f292550eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292550ee80"/>
        <function-ref name="isInput" scoped="" ref="0x7f292550d030"/>
        <function-ref name="toggle" scoped="" ref="0x7f292550d1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292550d350"/>
        <function-ref name="get" scoped="" ref="0x7f292550d4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292550d670"/>
        <function-ref name="set" scoped="" ref="0x7f292550d800"/>
        <function-ref name="clr" scoped="" ref="0x7f292550d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f29255062f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f29255062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925506670"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925506800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925506990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925504660"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925506cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925506e40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925505020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f29255051b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925505340"/>
        <function-ref name="get" scoped="" ref="0x7f29255054d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925505660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f29255057f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925505980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925505c10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925505da0"/>
        <function-ref name="set" scoped="" ref="0x7f2925504020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f29255041b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925504340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925506b20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f29255044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2925507020" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.RSTNM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2925507020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29255073a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925507530"/>
        <function-ref name="toggle" scoped="" ref="0x7f29255076c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925507850"/>
        <function-ref name="get" scoped="" ref="0x7f29255079e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925507b70"/>
        <function-ref name="set" scoped="" ref="0x7f2925507d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2925506020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f29255017a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f29255017a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925501b20"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925501cb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925501e40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f29254ffa80"/>
        <function-ref name="toggle" scoped="" ref="0x7f29255001b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925500340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f29255004d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925500660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29255007f0"/>
        <function-ref name="get" scoped="" ref="0x7f2925500980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925500b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925500ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925500e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f29254ff120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29254ff2b0"/>
        <function-ref name="set" scoped="" ref="0x7f29254ff440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f29254ff5d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f29254ff760"/>
        <function-ref name="clr" scoped="" ref="0x7f2925500020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f29254ff8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2925502630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.SFDM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2925502630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29255029b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2925502b40"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925502cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925502e60"/>
        <function-ref name="get" scoped="" ref="0x7f2925501020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29255011b0"/>
        <function-ref name="set" scoped="" ref="0x7f2925501340"/>
        <function-ref name="clr" scoped="" ref="0x7f29255014d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f29254fcc60" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f29254fcc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29254fb020"/>
        <function-ref name="isInput" scoped="" ref="0x7f29254fb1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f29254fb340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f29254f9020"/>
        <function-ref name="toggle" scoped="" ref="0x7f29254fb660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f29254fb7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f29254fb980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f29254fbb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29254fbca0"/>
        <function-ref name="get" scoped="" ref="0x7f29254fbe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f29254fa020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f29254fa1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f29254fa340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f29254fa5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29254fa760"/>
        <function-ref name="set" scoped="" ref="0x7f29254fa8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f29254faa80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f29254fac10"/>
        <function-ref name="clr" scoped="" ref="0x7f29254fb4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f29254fada0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f29254fdb00" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplCC2420PinsC.VRENM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f29254fdb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29254fde80"/>
        <function-ref name="isInput" scoped="" ref="0x7f29254fc030"/>
        <function-ref name="toggle" scoped="" ref="0x7f29254fc1c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f29254fc350"/>
        <function-ref name="get" scoped="" ref="0x7f29254fc4e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29254fc670"/>
        <function-ref name="set" scoped="" ref="0x7f29254fc800"/>
        <function-ref name="clr" scoped="" ref="0x7f29254fc990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x7f29254df700" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f29254df700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f29254dfa80"/>
        <function-ref name="disable" scoped="" ref="0x7f29254dfc10"/>
        <function-ref name="captured" scoped="" ref="0x7f29254dfda0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f29254e3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x7f29254e3400" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptCCA" scoped="" ref="0x7f29254e3400"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f29254e3780"/>
        <function-ref name="disable" scoped="" ref="0x7f29254e3910"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f29254e3aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f29254e3c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x7f29254e2060" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f29254e2060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f29254e23e0"/>
        <function-ref name="disable" scoped="" ref="0x7f29254e2570"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f29254e2700"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f29254e2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Capture" ref="0x7f29254c4a80" loc="50:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Capture" scoped="" ref="0x7f29254c4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Capture"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29254c4e00"/>
        <function-ref name="setSynchronous" scoped="" ref="0x7f29254c2020"/>
        <function-ref name="captured" scoped="" ref="0x7f29254c21b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f29254c2340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f29254c24d0"/>
        <function-ref name="setEdge" scoped="" ref="0x7f29254c2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x7f29254d7c20" loc="48:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Capture" scoped="" ref="0x7f29254d7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f29254c5020"/>
        <function-ref name="disable" scoped="" ref="0x7f29254c51b0"/>
        <function-ref name="captured" scoped="" ref="0x7f29254c5340"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f29254c54d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f29254c5760" loc="49:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f29254c5760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29254c5ae0"/>
        <function-ref name="getControl" scoped="" ref="0x7f29254c5c70"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29254c5e00"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29254c4020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29254c41b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29254c4340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29254c44d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29254c4660"/>
        <function-ref name="setControl" scoped="" ref="0x7f29254c47f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x7f29254c2930" loc="51:../../../tos/chips/msp430/timer/GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f29254c2930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29254c2cb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f29254c2e40"/>
        <function-ref name="setResistor" scoped="" ref="0x7f29254c1020"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f29254c0c10"/>
        <function-ref name="toggle" scoped="" ref="0x7f29254c1340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f29254c14d0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f29254c1660"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f29254c17f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29254c1980"/>
        <function-ref name="get" scoped="" ref="0x7f29254c1b10"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f29254c1ca0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f29254c1e30"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f29254c0020"/>
        <function-ref name="getRaw" scoped="" ref="0x7f29254c02b0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29254c0440"/>
        <function-ref name="set" scoped="" ref="0x7f29254c05d0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f29254c0760"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f29254c08f0"/>
        <function-ref name="clr" scoped="" ref="0x7f29254c11b0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f29254c0a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f29254b03f0" loc="46:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f29254b03f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254b0770"/>
        <function-ref name="fired" scoped="" ref="0x7f29254b0900"/>
        <function-ref name="disable" scoped="" ref="0x7f29254b0a90"/>
        <function-ref name="edge" scoped="" ref="0x7f29254b0c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254b0db0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254af020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254af1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254af340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f29254a43f0" loc="58:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f29254a43f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254a4770"/>
        <function-ref name="fired" scoped="" ref="0x7f29254a4900"/>
        <function-ref name="disable" scoped="" ref="0x7f29254a4a90"/>
        <function-ref name="edge" scoped="" ref="0x7f29254a4c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254a4db0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254a3020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254a31b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254a3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f29254add50" loc="49:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f29254add50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254ac100"/>
        <function-ref name="fired" scoped="" ref="0x7f29254ac290"/>
        <function-ref name="disable" scoped="" ref="0x7f29254ac420"/>
        <function-ref name="edge" scoped="" ref="0x7f29254ac5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254ac740"/>
        <function-ref name="enable" scoped="" ref="0x7f29254ac8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254aca60"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254acbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f29254aa3f0" loc="53:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f29254aa3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254aa770"/>
        <function-ref name="fired" scoped="" ref="0x7f29254aa900"/>
        <function-ref name="disable" scoped="" ref="0x7f29254aaa90"/>
        <function-ref name="edge" scoped="" ref="0x7f29254aac20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254aadb0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254a9020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254a91b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254a9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f29254b8bc0" loc="44:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f29254b8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254b2020"/>
        <function-ref name="fired" scoped="" ref="0x7f29254b21b0"/>
        <function-ref name="disable" scoped="" ref="0x7f29254b2340"/>
        <function-ref name="edge" scoped="" ref="0x7f29254b24d0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254b2660"/>
        <function-ref name="enable" scoped="" ref="0x7f29254b27f0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254b2980"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254b2b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f29254a7d50" loc="56:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f29254a7d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254a6210"/>
        <function-ref name="fired" scoped="" ref="0x7f29254a63a0"/>
        <function-ref name="disable" scoped="" ref="0x7f29254a6530"/>
        <function-ref name="edge" scoped="" ref="0x7f29254a66c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254a6850"/>
        <function-ref name="enable" scoped="" ref="0x7f29254a69e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254a6b70"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254a6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f29254af710" loc="47:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f29254af710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254afa90"/>
        <function-ref name="fired" scoped="" ref="0x7f29254afc20"/>
        <function-ref name="disable" scoped="" ref="0x7f29254afdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f29254ae020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254ae1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254ae340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254ae4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254ae660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f29254a3710" loc="59:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f29254a3710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254a3a90"/>
        <function-ref name="fired" scoped="" ref="0x7f29254a3c20"/>
        <function-ref name="disable" scoped="" ref="0x7f29254a3db0"/>
        <function-ref name="edge" scoped="" ref="0x7f29254a2020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254a21b0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254a2340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254a24d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254a2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f29254b3620" loc="42:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f29254b3620"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254b39a0"/>
        <function-ref name="fired" scoped="" ref="0x7f29254b3b30"/>
        <function-ref name="disable" scoped="" ref="0x7f29254b3cc0"/>
        <function-ref name="edge" scoped="" ref="0x7f29254b3e50"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254b9020"/>
        <function-ref name="enable" scoped="" ref="0x7f29254b91b0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254b9340"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f29254a9710" loc="54:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f29254a9710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254a9a90"/>
        <function-ref name="fired" scoped="" ref="0x7f29254a9c20"/>
        <function-ref name="disable" scoped="" ref="0x7f29254a9db0"/>
        <function-ref name="edge" scoped="" ref="0x7f29254a8020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254a81b0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254a8340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254a84d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254a8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f29254b1020" loc="45:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f29254b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254b13a0"/>
        <function-ref name="fired" scoped="" ref="0x7f29254b1530"/>
        <function-ref name="disable" scoped="" ref="0x7f29254b16c0"/>
        <function-ref name="edge" scoped="" ref="0x7f29254b1850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254b19e0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254b1b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254b1d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254b0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f29254a5100" loc="57:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f29254a5100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254a5480"/>
        <function-ref name="fired" scoped="" ref="0x7f29254a5610"/>
        <function-ref name="disable" scoped="" ref="0x7f29254a57a0"/>
        <function-ref name="edge" scoped="" ref="0x7f29254a5930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254a5ac0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254a5c50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254a5de0"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254a4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f29254aea30" loc="48:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f29254aea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254aedb0"/>
        <function-ref name="fired" scoped="" ref="0x7f29254ad020"/>
        <function-ref name="disable" scoped="" ref="0x7f29254ad1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f29254ad340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254ad4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254ad660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254ad7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254ad980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f29254ab020" loc="52:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f29254ab020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254ab3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f29254ab530"/>
        <function-ref name="disable" scoped="" ref="0x7f29254ab6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f29254ab850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254ab9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254abb70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254abd00"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254aa020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f29254b98a0" loc="43:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f29254b98a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254b9c20"/>
        <function-ref name="fired" scoped="" ref="0x7f29254b9db0"/>
        <function-ref name="disable" scoped="" ref="0x7f29254b8020"/>
        <function-ref name="edge" scoped="" ref="0x7f29254b81b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254b8340"/>
        <function-ref name="enable" scoped="" ref="0x7f29254b84d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254b8660"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254b87f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f29254a8a30" loc="55:../../../tos/chips/msp430/pins/HplMsp430InterruptC.nc">
      <component-ref qname="HplMsp430InterruptC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f29254a8a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254a8db0"/>
        <function-ref name="fired" scoped="" ref="0x7f29254a7020"/>
        <function-ref name="disable" scoped="" ref="0x7f29254a71b0"/>
        <function-ref name="edge" scoped="" ref="0x7f29254a7340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254a74d0"/>
        <function-ref name="enable" scoped="" ref="0x7f29254a7660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254a77f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f29254a7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port14" ref="0x7f29254993f0" loc="58:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port14" scoped="" ref="0x7f29254993f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925499770"/>
        <function-ref name="fired" scoped="" ref="0x7f2925499900"/>
        <function-ref name="disable" scoped="" ref="0x7f2925499a90"/>
        <function-ref name="edge" scoped="" ref="0x7f2925499c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2925499db0"/>
        <function-ref name="enable" scoped="" ref="0x7f2925498020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254981b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2925498340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port26" ref="0x7f292548d3f0" loc="70:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port26" scoped="" ref="0x7f292548d3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f292548d770"/>
        <function-ref name="fired" scoped="" ref="0x7f292548d900"/>
        <function-ref name="disable" scoped="" ref="0x7f292548da90"/>
        <function-ref name="edge" scoped="" ref="0x7f292548dc20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f292548ddb0"/>
        <function-ref name="enable" scoped="" ref="0x7f292548c020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f292548c1b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f292548c340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port17" ref="0x7f2925496d50" loc="61:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port17" scoped="" ref="0x7f2925496d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925495100"/>
        <function-ref name="fired" scoped="" ref="0x7f2925495290"/>
        <function-ref name="disable" scoped="" ref="0x7f2925495420"/>
        <function-ref name="edge" scoped="" ref="0x7f29254955b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2925495740"/>
        <function-ref name="enable" scoped="" ref="0x7f29254958d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2925495a60"/>
        <function-ref name="getValue" scoped="" ref="0x7f2925495bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port21" ref="0x7f29254933f0" loc="65:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port21" scoped="" ref="0x7f29254933f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925493770"/>
        <function-ref name="fired" scoped="" ref="0x7f2925493900"/>
        <function-ref name="disable" scoped="" ref="0x7f2925493a90"/>
        <function-ref name="edge" scoped="" ref="0x7f2925493c20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2925493db0"/>
        <function-ref name="enable" scoped="" ref="0x7f2925492020"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254921b0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2925492340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port12" ref="0x7f292549cd50" loc="56:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port12" scoped="" ref="0x7f292549cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f292549b100"/>
        <function-ref name="fired" scoped="" ref="0x7f292549b290"/>
        <function-ref name="disable" scoped="" ref="0x7f292549b420"/>
        <function-ref name="edge" scoped="" ref="0x7f292549b5b0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f292549b740"/>
        <function-ref name="enable" scoped="" ref="0x7f292549b8d0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f292549ba60"/>
        <function-ref name="getValue" scoped="" ref="0x7f292549bbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port24" ref="0x7f2925490d50" loc="68:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port24" scoped="" ref="0x7f2925490d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f292548f210"/>
        <function-ref name="fired" scoped="" ref="0x7f292548f3a0"/>
        <function-ref name="disable" scoped="" ref="0x7f292548f530"/>
        <function-ref name="edge" scoped="" ref="0x7f292548f6c0"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f292548f850"/>
        <function-ref name="enable" scoped="" ref="0x7f292548f9e0"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f292548fb70"/>
        <function-ref name="getValue" scoped="" ref="0x7f292548fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port15" ref="0x7f2925498710" loc="59:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port15" scoped="" ref="0x7f2925498710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925498a90"/>
        <function-ref name="fired" scoped="" ref="0x7f2925498c20"/>
        <function-ref name="disable" scoped="" ref="0x7f2925498db0"/>
        <function-ref name="edge" scoped="" ref="0x7f2925497020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254971b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2925497340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254974d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2925497660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port27" ref="0x7f292548c710" loc="71:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port27" scoped="" ref="0x7f292548c710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f292548ca90"/>
        <function-ref name="fired" scoped="" ref="0x7f292548cc20"/>
        <function-ref name="disable" scoped="" ref="0x7f292548cdb0"/>
        <function-ref name="edge" scoped="" ref="0x7f292548b020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f292548b1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f292548b340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f292548b4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f292548b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port10" ref="0x7f29254a17a0" loc="54:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port10" scoped="" ref="0x7f29254a17a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254a1b20"/>
        <function-ref name="fired" scoped="" ref="0x7f29254a1cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f29254a1e40"/>
        <function-ref name="edge" scoped="" ref="0x7f292549d020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f292549d1b0"/>
        <function-ref name="enable" scoped="" ref="0x7f292549d340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f292549d4d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f292549d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port22" ref="0x7f2925492710" loc="66:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port22" scoped="" ref="0x7f2925492710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925492a90"/>
        <function-ref name="fired" scoped="" ref="0x7f2925492c20"/>
        <function-ref name="disable" scoped="" ref="0x7f2925492db0"/>
        <function-ref name="edge" scoped="" ref="0x7f2925491020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254911b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2925491340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254914d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2925491660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port13" ref="0x7f292549a020" loc="57:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port13" scoped="" ref="0x7f292549a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f292549a3a0"/>
        <function-ref name="fired" scoped="" ref="0x7f292549a530"/>
        <function-ref name="disable" scoped="" ref="0x7f292549a6c0"/>
        <function-ref name="edge" scoped="" ref="0x7f292549a850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f292549a9e0"/>
        <function-ref name="enable" scoped="" ref="0x7f292549ab70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f292549ad00"/>
        <function-ref name="getValue" scoped="" ref="0x7f2925499020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port25" ref="0x7f292548e100" loc="69:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port25" scoped="" ref="0x7f292548e100"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f292548e480"/>
        <function-ref name="fired" scoped="" ref="0x7f292548e610"/>
        <function-ref name="disable" scoped="" ref="0x7f292548e7a0"/>
        <function-ref name="edge" scoped="" ref="0x7f292548e930"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f292548eac0"/>
        <function-ref name="enable" scoped="" ref="0x7f292548ec50"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f292548ede0"/>
        <function-ref name="getValue" scoped="" ref="0x7f292548d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port16" ref="0x7f2925497a30" loc="60:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port16" scoped="" ref="0x7f2925497a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925497db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2925496020"/>
        <function-ref name="disable" scoped="" ref="0x7f29254961b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2925496340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254964d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2925496660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254967f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2925496980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port20" ref="0x7f2925494020" loc="64:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port20" scoped="" ref="0x7f2925494020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29254943a0"/>
        <function-ref name="fired" scoped="" ref="0x7f2925494530"/>
        <function-ref name="disable" scoped="" ref="0x7f29254946c0"/>
        <function-ref name="edge" scoped="" ref="0x7f2925494850"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254949e0"/>
        <function-ref name="enable" scoped="" ref="0x7f2925494b70"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2925494d00"/>
        <function-ref name="getValue" scoped="" ref="0x7f2925493020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port11" ref="0x7f292549da30" loc="55:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port11" scoped="" ref="0x7f292549da30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f292549ddb0"/>
        <function-ref name="fired" scoped="" ref="0x7f292549c020"/>
        <function-ref name="disable" scoped="" ref="0x7f292549c1b0"/>
        <function-ref name="edge" scoped="" ref="0x7f292549c340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f292549c4d0"/>
        <function-ref name="enable" scoped="" ref="0x7f292549c660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f292549c7f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f292549c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Port23" ref="0x7f2925491a30" loc="67:../../../tos/chips/msp430/x1x2/pins/HplMsp430InterruptP.nc">
      <component-ref qname="HplMsp430InterruptP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Port23" scoped="" ref="0x7f2925491a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925491db0"/>
        <function-ref name="fired" scoped="" ref="0x7f2925490020"/>
        <function-ref name="disable" scoped="" ref="0x7f29254901b0"/>
        <function-ref name="edge" scoped="" ref="0x7f2925490340"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29254904d0"/>
        <function-ref name="enable" scoped="" ref="0x7f2925490660"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29254907f0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2925490980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f29253812f0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f29253812f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925381670"/>
        <function-ref name="fired" scoped="" ref="0x7f2925381800"/>
        <function-ref name="disable" scoped="" ref="0x7f2925381990"/>
        <function-ref name="edge" scoped="" ref="0x7f2925381b20"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f2925381cb0"/>
        <function-ref name="enable" scoped="" ref="0x7f2925381e40"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f2925374020"/>
        <function-ref name="getValue" scoped="" ref="0x7f29253741b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f2925382680" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptCCAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2925382680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925382a00"/>
        <function-ref name="disable" scoped="" ref="0x7f2925382b90"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2925382d20"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2925381020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f29253727a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f29253727a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2925372b20"/>
        <function-ref name="fired" scoped="" ref="0x7f2925372cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f2925372e40"/>
        <function-ref name="edge" scoped="" ref="0x7f2925371020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29253711b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2925371340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29253714d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2925371660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f2925373b70" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2925373b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925372020"/>
        <function-ref name="disable" scoped="" ref="0x7f29253721b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2925372340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f29253724d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f2924f11e50" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924f11e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f10410"/>
        <function-ref name="write" scoped="" ref="0x7f2924f105a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f2924f1b160" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f2924f1b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f1b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f2924f15e50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924f15e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f13210"/>
        <function-ref name="write" scoped="" ref="0x7f2924f133a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f2924f0f880" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924f0f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f0fc00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f0fd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f2924f070a0" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f2924f070a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f07420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f075b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f2924f0e0a0" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f2924f0e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f0e420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f0e5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f2924efb500" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2924efb500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924efb880"/>
        <function-ref name="write" scoped="" ref="0x7f2924efba10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f2924efd500" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2924efd500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924efd880"/>
        <function-ref name="write" scoped="" ref="0x7f2924efda10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f2924f19490" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2924f19490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f19810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f2924f03880" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f2924f03880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f03c00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f03d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f2924efe500" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924efe500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924efe880"/>
        <function-ref name="write" scoped="" ref="0x7f2924efea10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f2924f13e50" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2924f13e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f12210"/>
        <function-ref name="write" scoped="" ref="0x7f2924f123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f2924f12e50" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2924f12e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f11210"/>
        <function-ref name="write" scoped="" ref="0x7f2924f113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f2924f09880" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f2924f09880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f09c00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f09d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f2924f0a0a0" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f2924f0a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f0a420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f0a5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f2924f0e880" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2924f0e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f0ec00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f0ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2924f1da90" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924f1da90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2924f1de10"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2924f1c020"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2924f1c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f2924f18e00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924f18e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f171c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f2924f17490" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2924f17490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f17910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f2924f02c80" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2924f02c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f010a0"/>
        <function-ref name="write" scoped="" ref="0x7f2924f01230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f2924f17be0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f2924f17be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f16020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f2924efece0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924efece0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924efd0a0"/>
        <function-ref name="write" scoped="" ref="0x7f2924efd230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f2924f18160" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924f18160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f184e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f2924f030a0" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f2924f030a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f03420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f035b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f2924f12670" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f2924f12670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f129f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924f12b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f2924f13670" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924f13670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f139f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924f13b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f2924f1cad0" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2924f1cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f1ce50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f2924f040a0" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f2924f040a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f04420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f045b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f2924f07880" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f2924f07880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f07c00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f07d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f2924f04880" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f2924f04880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f04c00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f04d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f2924efcce0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2924efcce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924efb0a0"/>
        <function-ref name="write" scoped="" ref="0x7f2924efb230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f2924efdce0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2924efdce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924efc0a0"/>
        <function-ref name="write" scoped="" ref="0x7f2924efc230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f2924f0a880" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f2924f0a880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f0ac00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f0ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f2924f050a0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f2924f050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f05420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f055b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f2924f00ce0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f2924f00ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924efe0a0"/>
        <function-ref name="write" scoped="" ref="0x7f2924efe230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f2924f0c880" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f2924f0c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f0cc00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f0cd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f2924efbce0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2924efbce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924efa0a0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924efa230"/>
        <function-ref name="write" scoped="" ref="0x7f2924efa3c0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924efa550"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924efa6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f2924f1c480" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2924f1c480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f1c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f2924f15670" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f2924f15670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f159f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924f15b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f2924f11670" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f2924f11670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f119f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924f11b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f2924f080a0" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f2924f080a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f08420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f085b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f2924f0c0a0" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2924f0c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f0c420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f0c5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f2924f08880" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f2924f08880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f08c00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f08d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f2924f10870" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2924f10870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f10bf0"/>
        <function-ref name="write" scoped="" ref="0x7f2924f10d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f2924f1b7b0" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2924f1b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f1bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f2924f0f0a0" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924f0f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f0f420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f0f5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2924f1ee20" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2924f1ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924f1d1c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924f1d350"/>
        <function-ref name="request" scoped="" ref="0x7f2924f1d4e0"/>
        <function-ref name="granted" scoped="" ref="0x7f2924f1d670"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924f1d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f2924f162f0" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2924f162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f16670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f2924f15020" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f2924f15020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f2924f00500" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2924f00500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f00880"/>
        <function-ref name="write" scoped="" ref="0x7f2924f00a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f2924f01ce0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2924f01ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f000a0"/>
        <function-ref name="write" scoped="" ref="0x7f2924f00230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f2924f187b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924f187b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f18b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f2924f01500" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2924f01500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f01880"/>
        <function-ref name="write" scoped="" ref="0x7f2924f01a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f2924efc500" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f2924efc500"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924efc880"/>
        <function-ref name="write" scoped="" ref="0x7f2924efca10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f2924f090a0" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f2924f090a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f09420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f095b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f2924f05880" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f2924f05880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f05c00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f05d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f2924f1be00" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2924f1be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f191c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f2924f19ae0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2924f19ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f19e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f2924f0b0a0" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f2924f0b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f0b420"/>
        <function-ref name="write" scoped="" ref="0x7f2924f0b5b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f2924f16940" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2924f16940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924f16cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f2924f0b880" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f2924f0b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f0bc00"/>
        <function-ref name="write" scoped="" ref="0x7f2924f0bd90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f2924f020a0" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f2924f020a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924f02820"/>
        <function-ref name="write" scoped="" ref="0x7f2924f029b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f2924efa9b0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2924efa9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924efad30"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924ef9020"/>
        <function-ref name="write" scoped="" ref="0x7f2924ef91b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924ef9340"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924ef94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f292532d2c0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f292532d2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f292532d640"/>
        <function-ref name="writeDone" scoped="" ref="0x7f292532d7d0"/>
        <function-ref name="write" scoped="" ref="0x7f292532d960"/>
        <function-ref name="beginRead" scoped="" ref="0x7f292532daf0"/>
        <function-ref name="readDone" scoped="" ref="0x7f292532dc80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f292532e350" loc="40:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f292532e350"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f292532e6d0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f292532e860"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f292532e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f292532c540" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f292532c540"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f292532c8c0"/>
        <function-ref name="write" scoped="" ref="0x7f292532ca50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f292532b370" loc="43:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f292532b370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f292532b6f0"/>
        <function-ref name="write" scoped="" ref="0x7f292532b880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f29253304d0" loc="39:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29253304d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2925330850"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29253309e0"/>
        <function-ref name="request" scoped="" ref="0x7f2925330b70"/>
        <function-ref name="granted" scoped="" ref="0x7f2925330d00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292532e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f29253291d0" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f29253291d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2925329550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x7f29253142e0" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f29253142e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2925314660"/>
        <function-ref name="sendDone" scoped="" ref="0x7f29253147f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x7f2925324890" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Fifo" scoped="" ref="0x7f2925324890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2925324c10"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2925324da0"/>
        <function-ref name="write" scoped="" ref="0x7f2925323020"/>
        <function-ref name="beginRead" scoped="" ref="0x7f29253231b0"/>
        <function-ref name="readDone" scoped="" ref="0x7f2925323340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2925326660" loc="44:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2925326660"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f29253269e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2925326b70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2925326d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x7f292531cc70" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f292531cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f292531e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x7f2925314b40" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="WorkingState" scoped="" ref="0x7f2925314b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f292531b020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f292531b1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f292531b340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f292531b4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f292531b660"/>
        <function-ref name="forceState" scoped="" ref="0x7f292531b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f292531f060" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f292531f060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f292531f3e0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f292531f570"/>
        <function-ref name="request" scoped="" ref="0x7f292531f700"/>
        <function-ref name="granted" scoped="" ref="0x7f292531f890"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292531fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x7f2925323ba0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Ram" scoped="" ref="0x7f2925323ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2925322020"/>
        <function-ref name="write" scoped="" ref="0x7f29253221b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x7f2925322a30" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Reg" scoped="" ref="0x7f2925322a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2925322db0"/>
        <function-ref name="write" scoped="" ref="0x7f2925320020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f292531ba70" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f292531ba70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f292531bdf0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2925315020"/>
        <function-ref name="led1On" scoped="" ref="0x7f29253151b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2925315340"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f29253154d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925315660"/>
        <function-ref name="led1Off" scoped="" ref="0x7f29253157f0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2925315e30"/>
        <function-ref name="set" scoped="" ref="0x7f2925315980"/>
        <function-ref name="led0On" scoped="" ref="0x7f2925315b10"/>
        <function-ref name="led2On" scoped="" ref="0x7f2925315ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2925325510" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2925325510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2925325890"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2925325a20"/>
        <function-ref name="request" scoped="" ref="0x7f2925325bb0"/>
        <function-ref name="granted" scoped="" ref="0x7f2925325d40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2925324020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x7f2925310bd0" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grant" scoped="" ref="0x7f2925310bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f292530f020"/>
        <function-ref name="runTask" scoped="" ref="0x7f292530f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x7f29253208b0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Strobe" scoped="" ref="0x7f29253208b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2925320c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f29252b5770" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f29252b5770"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f29252b5af0"/>
        <function-ref name="toIdle" scoped="" ref="0x7f29252b5c80"/>
        <function-ref name="isState" scoped="" ref="0x7f29252b5e10"/>
        <function-ref name="isIdle" scoped="" ref="0x7f29252b1020"/>
        <function-ref name="requestState" scoped="" ref="0x7f29252b11b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f29252b1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f29252b01d0" loc="66:../../../tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f29252b01d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f29252b0550"/>
        <function-ref name="toIdle" scoped="" ref="0x7f29252b06e0"/>
        <function-ref name="isState" scoped="" ref="0x7f29252b0870"/>
        <function-ref name="isIdle" scoped="" ref="0x7f29252b0a00"/>
        <function-ref name="requestState" scoped="" ref="0x7f29252b0b90"/>
        <function-ref name="forceState" scoped="" ref="0x7f29252b0d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f29252ac020" loc="66:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f29252ac020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f29252ac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f29252acb70" loc="67:../../../tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f29252acb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f29252ab020"/>
        <function-ref name="toIdle" scoped="" ref="0x7f29252ab1b0"/>
        <function-ref name="isState" scoped="" ref="0x7f29252ab340"/>
        <function-ref name="isIdle" scoped="" ref="0x7f29252ab4d0"/>
        <function-ref name="requestState" scoped="" ref="0x7f29252ab660"/>
        <function-ref name="forceState" scoped="" ref="0x7f29252ab7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f2924f44020" loc="44:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f2924f44020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924f443a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924f44530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f29252928f0" loc="43:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f29252928f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f2925292c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2925293c40" loc="42:../../../tos/platforms/telosa/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2925293c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2925292020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29252921b0"/>
        <function-ref name="request" scoped="" ref="0x7f2925292340"/>
        <function-ref name="granted" scoped="" ref="0x7f29252924d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2925292660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2923c7b5d0" loc="82:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2923c7b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2923c7b950"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2923c7bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f2923c79020" loc="87:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f2923c79020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2923c793a0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2923c79530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f2923c797c0" loc="89:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2923c797c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2923c79b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f2923c7bd70" loc="83:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f2923c7bd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f2923c7a180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2923c7c940" loc="81:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2923c7c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2923c7ccc0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2923c7ce50"/>
        <function-ref name="request" scoped="" ref="0x7f2923c7b020"/>
        <function-ref name="granted" scoped="" ref="0x7f2923c7b1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2923c7b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f2923c7a410" loc="85:../../../tos/chips/msp430/usart/Msp430Spi0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f2923c7a410"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f2923c7a790"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f2923c7a920"/>
        <function-ref name="splitRead" scoped="" ref="0x7f2923c7aab0"/>
        <function-ref name="write" scoped="" ref="0x7f2923c7ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f29252298e0" loc="74:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29252298e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2925229c60"/>
        <function-ref name="configure" scoped="" ref="0x7f2925229df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f292522b850" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f292522b850"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f292522bbd0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f292522bd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f2925226a40" loc="80:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f2925226a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f2925226dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f292522c110" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f292522c110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f292522c490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f2925227690" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f2925227690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2925227a10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2925227ba0"/>
        <function-ref name="request" scoped="" ref="0x7f2925227d30"/>
        <function-ref name="granted" scoped="" ref="0x7f2925226020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29252261b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2925231d80" loc="73:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2925231d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f292522d180"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f292522d310"/>
        <function-ref name="request" scoped="" ref="0x7f292522d4a0"/>
        <function-ref name="granted" scoped="" ref="0x7f292522d630"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292522d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f292522c790" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f292522c790"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f292522cb10"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f292522cca0"/>
        <function-ref name="splitRead" scoped="" ref="0x7f292522ce30"/>
        <function-ref name="write" scoped="" ref="0x7f292522b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f2925222b40" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDma0P.nc">
      <component-ref qname="Msp430SpiNoDma0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f2925222b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2925224020"/>
        <function-ref name="txDone" scoped="" ref="0x7f29252241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceConfigure" ref="0x7f29251b0250" loc="76:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29251b0250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f29251b05f0"/>
        <function-ref name="configure" scoped="" ref="0x7f29251b0780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x7f29251afc50" loc="79:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiPacket" scoped="" ref="0x7f29251afc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f29251ae020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f29251ae1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430SpiConfigure" ref="0x7f29251ad3e0" loc="82:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430SpiConfigure" scoped="" ref="0x7f29251ad3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430SpiConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfig" scoped="" ref="0x7f29251ad780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x7f29251b0a10" loc="77:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiByte" scoped="" ref="0x7f29251b0a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x7f29251b0d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Usart" ref="0x7f29251ada50" loc="83:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f29251ada50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f29251addd0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f29251ab020"/>
        <function-ref name="setUctl" scoped="" ref="0x7f29251ab1b0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f29251ab340"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f29251ab4d0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f29251ab660"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f29251ab7f0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f29251ab980"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f29251abb10"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f29251abca0"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f29251abe30"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f29251aa020"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f29251aa1b0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f29251aa440"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f29251aa5d0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f29251aa760"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f29251aa8f0"/>
        <function-ref name="isUart" scoped="" ref="0x7f29251aaa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f29251aac10"/>
        <function-ref name="isSpi" scoped="" ref="0x7f29251aada0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f29251a9020"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f29251a91b0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f29251a9340"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f29251a94d0"/>
        <function-ref name="getMode" scoped="" ref="0x7f29251a9660"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f29251a99f0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f29251a9b80"/>
        <function-ref name="setUbr" scoped="" ref="0x7f29251a9d10"/>
        <function-ref name="tx" scoped="" ref="0x7f29251a8020"/>
        <function-ref name="getUctl" scoped="" ref="0x7f29251a81b0"/>
        <function-ref name="disableUart" scoped="" ref="0x7f29251a8340"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f29251a84d0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f29251a8660"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f29251a87f0"/>
        <function-ref name="rx" scoped="" ref="0x7f29251a8980"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f29251a8b10"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f29251a8ca0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f29251a8e30"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f29251a7020"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f29251a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f29251a7c20" loc="85:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f29251a7c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f29251a6020"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f29251a61b0"/>
        <function-ref name="led1On" scoped="" ref="0x7f29251a6340"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f29251a64d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f29251a6660"/>
        <function-ref name="get" scoped="" ref="0x7f29251a67f0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f29251a6980"/>
        <function-ref name="led2On" scoped="" ref="0x7f29251a5020"/>
        <function-ref name="set" scoped="" ref="0x7f29251a6ca0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f29251a6b10"/>
        <function-ref name="led0On" scoped="" ref="0x7f29251a6e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartResource" ref="0x7f29251ae5b0" loc="81:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartResource" scoped="" ref="0x7f29251ae5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29251ae950"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29251aeae0"/>
        <function-ref name="request" scoped="" ref="0x7f29251aec70"/>
        <function-ref name="granted" scoped="" ref="0x7f29251aee00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29251ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f29251b1470" loc="75:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29251b1470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29251b1810"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29251b19a0"/>
        <function-ref name="request" scoped="" ref="0x7f29251b1b30"/>
        <function-ref name="granted" scoped="" ref="0x7f29251b1cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29251b1e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x7f29251af060" loc="78:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FastSpiByte" scoped="" ref="0x7f29251af060"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x7f29251af3e0"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x7f29251af570"/>
        <function-ref name="splitRead" scoped="" ref="0x7f29251af700"/>
        <function-ref name="write" scoped="" ref="0x7f29251af890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UsartInterrupts" ref="0x7f29251a7480" loc="84:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UsartInterrupts" scoped="" ref="0x7f29251a7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f29251a7800"/>
        <function-ref name="txDone" scoped="" ref="0x7f29251a7990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalDone_task" ref="0x7f29251a52f0" loc="102:../../../tos/chips/msp430/usart/Msp430SpiNoDmaP.nc">
      <component-ref qname="Msp430SpiNoDma0P.SpiP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalDone_task" scoped="" ref="0x7f29251a52f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f29251a5670"/>
        <function-ref name="runTask" scoped="" ref="0x7f29251a5800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f29251952c0" loc="78:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f29251952c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925195640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f2925199d10" loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2925199d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f29251980e0"/>
        <function-ref name="txDone" scoped="" ref="0x7f2925198270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f292519d020" loc="76:../../../tos/chips/msp430/usart/HplMsp430Usart0C.nc">
      <component-ref qname="HplMsp430Usart0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f292519d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f292519d3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f292519d530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f292519d6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f292519d850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f292519d9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f292519db70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f292519dd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f292519c020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f292519c1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f292519c340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f292519c4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f292519c660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f292519c7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f292519ca80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f292519cc10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f292519cda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f292519b020"/>
        <function-ref name="isUart" scoped="" ref="0x7f292519b1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f292519b340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f292519b4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f292519b660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f292519b7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f292519b980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f292519bb10"/>
        <function-ref name="getMode" scoped="" ref="0x7f292519bca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f292519a220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f292519a3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f292519a540"/>
        <function-ref name="tx" scoped="" ref="0x7f292519a6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f292519a860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f292519a9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f292519ab80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f292519ad10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2925199020"/>
        <function-ref name="rx" scoped="" ref="0x7f29251991b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2925199340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f29251994d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2925199660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f29251997f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2925199980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f292515bbb0" loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f292515bbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292515a020"/>
        <function-ref name="isInput" scoped="" ref="0x7f292515a1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f292515a340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925158020"/>
        <function-ref name="toggle" scoped="" ref="0x7f292515a660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292515a7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f292515a980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f292515ab10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292515aca0"/>
        <function-ref name="get" scoped="" ref="0x7f292515ae30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925159020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f29251591b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925159340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f29251595d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925159760"/>
        <function-ref name="set" scoped="" ref="0x7f29251598f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925159a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f292515a4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925159c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925159da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f292518f2d0" loc="56:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f292518f2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f292518f650"/>
        <function-ref name="txDone" scoped="" ref="0x7f292518f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="URXD" ref="0x7f29251583e0" loc="63:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="URXD" scoped="" ref="0x7f29251583e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925158760"/>
        <function-ref name="isInput" scoped="" ref="0x7f29251588f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925158a80"/>
        <function-ref name="clr" scoped="" ref="0x7f29251567f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925158da0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2925157020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f29251571b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925157340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29251574d0"/>
        <function-ref name="get" scoped="" ref="0x7f2925157660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f29251577f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2925157980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925157b10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2925157da0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925156020"/>
        <function-ref name="set" scoped="" ref="0x7f29251561b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925156340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2925158c10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f29251564d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925156660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UTXD" ref="0x7f2925156bb0" loc="64:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UTXD" scoped="" ref="0x7f2925156bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2925155020"/>
        <function-ref name="isInput" scoped="" ref="0x7f29251551b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2925155340"/>
        <function-ref name="clr" scoped="" ref="0x7f2925153020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2925155660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f29251557f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2925155980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2925155b10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2925155ca0"/>
        <function-ref name="get" scoped="" ref="0x7f2925155e30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2925154020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f29251541b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2925154340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f29251545d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2925154760"/>
        <function-ref name="set" scoped="" ref="0x7f29251548f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2925154a80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f29251554d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2925154c10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2925154da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Usart" ref="0x7f2925194700" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Usart" scoped="" ref="0x7f2925194700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2925194a80"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2925194c10"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2925194da0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2925193020"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f29251931b0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2925193340"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f29251934d0"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2925193660"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f29251937f0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2925193980"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2925193b10"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2925193ca0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2925193e30"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2925192120"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f29251922b0"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2925192440"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f29251925d0"/>
        <function-ref name="isUart" scoped="" ref="0x7f2925192760"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f29251928f0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2925192a80"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2925192c10"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2925192da0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2925191020"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f29251911b0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2925191340"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f29251916d0"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2925191860"/>
        <function-ref name="setUbr" scoped="" ref="0x7f29251919f0"/>
        <function-ref name="tx" scoped="" ref="0x7f2925191b80"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2925191d10"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2925190020"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f29251901b0"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2925190340"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f29251904d0"/>
        <function-ref name="rx" scoped="" ref="0x7f2925190660"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f29251907f0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2925190980"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2925190b10"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2925190ca0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2925190e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplI2C" ref="0x7f2925166d10" loc="59:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f2925166d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f292518d0e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f292518d270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f292518d400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f292518d590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f292518d720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f292518d8b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f292518da40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f292518dbd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f292518dd60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f292518c020"/>
        <function-ref name="getData" scoped="" ref="0x7f292518c1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f292518c340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f292518c4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f292518c760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f292518c8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f292518ca80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f292518cc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f292518cda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2925164020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f29251641b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2925164340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f29251644d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2925164660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f29251647f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2925164980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2925164d10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2925163020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f29251631b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2925163340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f29251634d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2925163660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f29251637f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2925163980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2925163b10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2925163ca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2925163e30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2925162020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f29251621b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2925162340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f29251624d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2925162660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f29251627f0"/>
        <function-ref name="setData" scoped="" ref="0x7f2925162980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2925162b10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2925162ca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2925162e30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2925161020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f29251611b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2925161340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f29251618d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2925161a60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2925161bf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2925161d80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2925160020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f29251601b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2925160340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f29251604d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2925160660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f29251607f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SOMI" ref="0x7f292515d3e0" loc="61:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SOMI" scoped="" ref="0x7f292515d3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292515d760"/>
        <function-ref name="isInput" scoped="" ref="0x7f292515d8f0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f292515da80"/>
        <function-ref name="clr" scoped="" ref="0x7f292515b7f0"/>
        <function-ref name="toggle" scoped="" ref="0x7f292515dda0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292515c020"/>
        <function-ref name="getResistor" scoped="" ref="0x7f292515c1b0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f292515c340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292515c4d0"/>
        <function-ref name="get" scoped="" ref="0x7f292515c660"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f292515c7f0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f292515c980"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f292515cb10"/>
        <function-ref name="getRaw" scoped="" ref="0x7f292515cda0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f292515b020"/>
        <function-ref name="set" scoped="" ref="0x7f292515b1b0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f292515b340"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f292515dc10"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f292515b4d0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f292515b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f292518fc20" loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f292518fc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292518e020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f2925160bb0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart0P.nc">
      <component-ref qname="HplMsp430Usart0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f2925160bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292515f020"/>
        <function-ref name="isInput" scoped="" ref="0x7f292515f1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f292515f340"/>
        <function-ref name="clr" scoped="" ref="0x7f292515d020"/>
        <function-ref name="toggle" scoped="" ref="0x7f292515f660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292515f7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f292515f980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f292515fb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292515fca0"/>
        <function-ref name="get" scoped="" ref="0x7f292515fe30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f292515e020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f292515e1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f292515e340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f292515e5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f292515e760"/>
        <function-ref name="set" scoped="" ref="0x7f292515e8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f292515ea80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f292515f4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f292515ec10"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f292515eda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2923c71020" loc="42:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2923c71020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2923c713a0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2923c71530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2CInterrupts" ref="0x7f2923c6a440" loc="46:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2CInterrupts" scoped="" ref="0x7f2923c6a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2923c6a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2923c61760" loc="51:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2923c61760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2923c61ae0"/>
        <function-ref name="configure" scoped="" ref="0x7f2923c61c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f2923c6aa50" loc="48:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f2923c6aa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f2923c6add0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2923c69020"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2923c691b0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2923c69340"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2923c694d0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f2923c69660"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2923c697f0"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2923c69980"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2923c69b10"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2923c69ca0"/>
        <function-ref name="getData" scoped="" ref="0x7f2923c69e30"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2923c68020"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2923c681b0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2923c68440"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2923c685d0"/>
        <function-ref name="getIV" scoped="" ref="0x7f2923c68760"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2923c688f0"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2923c68a80"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2923c68c10"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2923c68da0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2923c67020"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2923c671b0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2923c67340"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2923c674d0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2923c67660"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2923c679f0"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2923c67b80"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2923c67d10"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2923c66020"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2923c661b0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2923c66340"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2923c664d0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2923c66660"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2923c667f0"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2923c66980"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2923c66b10"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2923c66ca0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2923c66e30"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2923c65020"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2923c651b0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2923c65340"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2923c654d0"/>
        <function-ref name="setData" scoped="" ref="0x7f2923c65660"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2923c657f0"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2923c65980"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2923c65b10"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2923c65ca0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2923c65e30"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2923c64020"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2923c645b0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2923c64740"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2923c648d0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2923c64a60"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2923c64bf0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2923c64d80"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2923c61020"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2923c611b0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2923c61340"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2923c614d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430UsartInterrupts" ref="0x7f2923c6bc10" loc="45:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430UsartInterrupts" scoped="" ref="0x7f2923c6bc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2923c6a020"/>
        <function-ref name="txDone" scoped="" ref="0x7f2923c6a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2923c72340" loc="41:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2923c72340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2923c726c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2923c72850"/>
        <function-ref name="request" scoped="" ref="0x7f2923c729e0"/>
        <function-ref name="granted" scoped="" ref="0x7f2923c72b70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2923c72d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430Usart" ref="0x7f2923c6f020" loc="44:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430Usart" scoped="" ref="0x7f2923c6f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2923c6f3a0"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2923c6f530"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2923c6f6c0"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2923c6f850"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2923c6f9e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2923c6fb70"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2923c6fd00"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2923c6e020"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2923c6e1b0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2923c6e340"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2923c6e4d0"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2923c6e660"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2923c6e7f0"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2923c6ea80"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2923c6ec10"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2923c6eda0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2923c6d020"/>
        <function-ref name="isUart" scoped="" ref="0x7f2923c6d1b0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2923c6d340"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2923c6d4d0"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2923c6d660"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2923c6d7f0"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2923c6d980"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2923c6db10"/>
        <function-ref name="getMode" scoped="" ref="0x7f2923c6dca0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2923c6c220"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2923c6c3b0"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2923c6c540"/>
        <function-ref name="tx" scoped="" ref="0x7f2923c6c6d0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2923c6c860"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2923c6c9f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2923c6cb80"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2923c6cd10"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2923c6b020"/>
        <function-ref name="rx" scoped="" ref="0x7f2923c6b1b0"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2923c6b340"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2923c6b4d0"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2923c6b660"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2923c6b7f0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2923c6b980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2923c717c0" loc="43:../../../tos/chips/msp430/usart/Msp430Usart0C.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC.SpiC.UsartC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2923c717c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2923c71b40"/>
        <function-ref name="userId" scoped="" ref="0x7f2923c71cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f29250ad2c0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f29250ad2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f29250ad640"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f29250ad7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f29250ac8a0" loc="45:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29250ac8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f29250acc20"/>
        <function-ref name="configure" scoped="" ref="0x7f29250acdb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f29250b04d0" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f29250b04d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f29250b0850"/>
        <function-ref name="txDone" scoped="" ref="0x7f29250b09e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f29250ae020" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29250ae020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29250ae3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29250ae530"/>
        <function-ref name="request" scoped="" ref="0x7f29250ae6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f29250ae850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29250ae9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f29250af3f0" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f29250af3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f29250af770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f29250adad0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShare0P.nc">
      <component-ref qname="Msp430UsartShare0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f29250adad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f29250ade50"/>
        <function-ref name="userId" scoped="" ref="0x7f29250ac020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f2925097bf0" loc="43:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2925097bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2925096020"/>
        <function-ref name="userId" scoped="" ref="0x7f29250961b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupts" ref="0x7f29250a9d60" loc="39:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupts" scoped="" ref="0x7f29250a9d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f29250a8180"/>
        <function-ref name="txDone" scoped="" ref="0x7f29250a8310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawI2CInterrupts" ref="0x7f29250975e0" loc="42:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawI2CInterrupts" scoped="" ref="0x7f29250975e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2925097960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CInterrupts" ref="0x7f29250a8710" loc="40:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="I2CInterrupts" scoped="" ref="0x7f29250a8710"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f29250a8ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RawInterrupts" ref="0x7f29250a8d80" loc="41:../../../tos/chips/msp430/usart/Msp430UsartShareP.nc">
      <component-ref qname="Msp430UsartShare0P.UsartShareP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RawInterrupts" scoped="" ref="0x7f29250a8d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
      </instance>
      <interface-functions>
        <function-ref name="rxDone" scoped="" ref="0x7f2925097180"/>
        <function-ref name="txDone" scoped="" ref="0x7f2925097310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2925017a60" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2925017a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2925017e00"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2925016020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2925015790" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2925015790"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2925015b30"/>
        <function-ref name="configure" scoped="" ref="0x7f2925015cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2925016270" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2925016270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29250165f0"/>
        <function-ref name="requested" scoped="" ref="0x7f2925016780"/>
        <function-ref name="granted" scoped="" ref="0x7f2925016910"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2925016aa0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2925016c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2925018ca0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2925018ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29250170a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2925017230"/>
        <function-ref name="request" scoped="" ref="0x7f29250173c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2925017550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29250176e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f2925014020" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f2925014020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f29250143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2925016e80" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2925016e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2925015220"/>
        <function-ref name="userId" scoped="" ref="0x7f29250153b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2923bf4020" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2923bf4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2923bf43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f2923bf4630" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f2923bf4630"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2923bf49b0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2923bf4b40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2923bf4cd0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2923bf4e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2923bf06c0" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2923bf06c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2923bf0a60"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2923bf0bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f2923bee9d0" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f2923bee9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f2923beed70"/>
        <function-ref name="configure" scoped="" ref="0x7f2923bed020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2923bed2b0" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f2923bed2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2923bed630"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2923bed7c0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2923bed950"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2923bedae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2923bf0e40" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2923bf0e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2923bef1e0"/>
        <function-ref name="requested" scoped="" ref="0x7f2923bef370"/>
        <function-ref name="granted" scoped="" ref="0x7f2923bef500"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2923bef690"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2923bef820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2923bedd30" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2923bedd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2923bec0e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2923bec270"/>
        <function-ref name="led1On" scoped="" ref="0x7f2923bec400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2923bec590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2923bec720"/>
        <function-ref name="get" scoped="" ref="0x7f2923bec8b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2923beca40"/>
        <function-ref name="led0On" scoped="" ref="0x7f2923beb1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2923becd60"/>
        <function-ref name="led2On" scoped="" ref="0x7f2923becbd0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2923beb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2923bf1850" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2923bf1850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2923bf1bf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2923bf1d80"/>
        <function-ref name="request" scoped="" ref="0x7f2923bf0020"/>
        <function-ref name="granted" scoped="" ref="0x7f2923bf01b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2923bf0340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f2923bee2d0" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f2923bee2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2923bee650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2923befa70" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2923befa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2923befdf0"/>
        <function-ref name="userId" scoped="" ref="0x7f2923bee020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f2923beb480" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="Msp430UsartShare0P.ArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f2923beb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2923beb800"/>
        <function-ref name="runTask" scoped="" ref="0x7f2923beb990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplMsp430I2C" ref="0x7f292500b020" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C0C.nc">
      <component-ref qname="HplMsp430I2C0C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplMsp430I2C" scoped="" ref="0x7f292500b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f292500b3a0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f292500b530"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f292500b6c0"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f292500b850"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f292500b9e0"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f292500bb70"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f292500bd00"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f292500a020"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f292500a1b0"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f292500a340"/>
        <function-ref name="getData" scoped="" ref="0x7f292500a4d0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f292500a660"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f292500a7f0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f292500aa80"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f292500ac10"/>
        <function-ref name="getIV" scoped="" ref="0x7f292500ada0"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2925009020"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f29250091b0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2925009340"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f29250094d0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2925009660"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f29250097f0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2925009980"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2925009b10"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2925009ca0"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2925008220"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f29250083b0"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2925008540"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f29250086d0"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2925008860"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f29250089f0"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2925008b80"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2925008d10"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2925007020"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f29250071b0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2925007340"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f29250074d0"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2925007660"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f29250077f0"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2925007980"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2925007b10"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2925007ca0"/>
        <function-ref name="setData" scoped="" ref="0x7f2925007e30"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2925006020"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f29250061b0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2925006340"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f29250064d0"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2925006660"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f29250067f0"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2925006d80"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2925005020"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f29250051b0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2925005340"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f29250054d0"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2925005660"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f29250057f0"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2925005980"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2925005b10"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2925005ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUsart" ref="0x7f2924ffabb0" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplUsart" scoped="" ref="0x7f2924ffabb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Usart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x7f2924ff9020"/>
        <function-ref name="enableUartRx" scoped="" ref="0x7f2924ff91b0"/>
        <function-ref name="setUctl" scoped="" ref="0x7f2924ff9340"/>
        <function-ref name="enableUart" scoped="" ref="0x7f2924ff94d0"/>
        <function-ref name="setUrctl" scoped="" ref="0x7f2924ff9660"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x7f2924ff97f0"/>
        <function-ref name="clrRxIntr" scoped="" ref="0x7f2924ff9980"/>
        <function-ref name="getUtctl" scoped="" ref="0x7f2924ff9b10"/>
        <function-ref name="getUrctl" scoped="" ref="0x7f2924ff9ca0"/>
        <function-ref name="resetUsart" scoped="" ref="0x7f2924ff9e30"/>
        <function-ref name="getUmctl" scoped="" ref="0x7f2924ff8020"/>
        <function-ref name="disableIntr" scoped="" ref="0x7f2924ff81b0"/>
        <function-ref name="setUtctl" scoped="" ref="0x7f2924ff8340"/>
        <function-ref name="getUbr" scoped="" ref="0x7f2924ff85d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x7f2924ff8760"/>
        <function-ref name="setUmctl" scoped="" ref="0x7f2924ff88f0"/>
        <function-ref name="isUartRx" scoped="" ref="0x7f2924ff8a80"/>
        <function-ref name="isUart" scoped="" ref="0x7f2924ff8c10"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x7f2924ff8da0"/>
        <function-ref name="isSpi" scoped="" ref="0x7f2924ff7020"/>
        <function-ref name="enableUartTx" scoped="" ref="0x7f2924ff71b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x7f2924ff7340"/>
        <function-ref name="disableUartRx" scoped="" ref="0x7f2924ff74d0"/>
        <function-ref name="enableIntr" scoped="" ref="0x7f2924ff7660"/>
        <function-ref name="getMode" scoped="" ref="0x7f2924ff77f0"/>
        <function-ref name="isTxIntrPending" scoped="" ref="0x7f2924ff7b80"/>
        <function-ref name="clrIntr" scoped="" ref="0x7f2924ff7d10"/>
        <function-ref name="setUbr" scoped="" ref="0x7f2924ff6020"/>
        <function-ref name="tx" scoped="" ref="0x7f2924ff61b0"/>
        <function-ref name="getUctl" scoped="" ref="0x7f2924ff6340"/>
        <function-ref name="disableUart" scoped="" ref="0x7f2924ff64d0"/>
        <function-ref name="enableSpi" scoped="" ref="0x7f2924ff6660"/>
        <function-ref name="setModeUart" scoped="" ref="0x7f2924ff67f0"/>
        <function-ref name="setModeSpi" scoped="" ref="0x7f2924ff6980"/>
        <function-ref name="rx" scoped="" ref="0x7f2924ff6b10"/>
        <function-ref name="isRxIntrPending" scoped="" ref="0x7f2924ff6ca0"/>
        <function-ref name="isUartTx" scoped="" ref="0x7f2924ff6e30"/>
        <function-ref name="clrTxIntr" scoped="" ref="0x7f2924ff5020"/>
        <function-ref name="disableSpi" scoped="" ref="0x7f2924ff51b0"/>
        <function-ref name="disableUartTx" scoped="" ref="0x7f2924ff5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UCLK" ref="0x7f2924ff3e40" loc="52:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="UCLK" scoped="" ref="0x7f2924ff3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924ff21e0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924ff2370"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2924ff2500"/>
        <function-ref name="clr" scoped="" ref="0x7f2924ff01b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924ff2820"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924ff29b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2924ff2b40"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2924ff2cd0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924ff2e60"/>
        <function-ref name="get" scoped="" ref="0x7f2924ff1020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2924ff11b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2924ff1340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2924ff14d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2924ff1760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2924ff18f0"/>
        <function-ref name="set" scoped="" ref="0x7f2924ff1a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2924ff1c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2924ff2690"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2924ff1da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2924ff0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplI2C" ref="0x7f2925003d40" loc="48:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplI2C" scoped="" ref="0x7f2925003d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="disableOwnAddress" scoped="" ref="0x7f29250000e0"/>
        <function-ref name="getStartByte" scoped="" ref="0x7f2925000270"/>
        <function-ref name="setSlaveAddress" scoped="" ref="0x7f2925000400"/>
        <function-ref name="setMasterMode" scoped="" ref="0x7f2925000590"/>
        <function-ref name="disableTransmitReady" scoped="" ref="0x7f2925000720"/>
        <function-ref name="getClockPrescaler" scoped="" ref="0x7f29250008b0"/>
        <function-ref name="setTransmitMode" scoped="" ref="0x7f2925000a40"/>
        <function-ref name="getStopBit" scoped="" ref="0x7f2925000bd0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2925000d60"/>
        <function-ref name="getRepeatMode" scoped="" ref="0x7f2924fff020"/>
        <function-ref name="getData" scoped="" ref="0x7f2924fff1b0"/>
        <function-ref name="enableStartDetect" scoped="" ref="0x7f2924fff340"/>
        <function-ref name="enableAccessReady" scoped="" ref="0x7f2924fff4d0"/>
        <function-ref name="getSlaveAddress" scoped="" ref="0x7f2924fff760"/>
        <function-ref name="isGeneralCallPending" scoped="" ref="0x7f2924fff8f0"/>
        <function-ref name="getIV" scoped="" ref="0x7f2924fffa80"/>
        <function-ref name="enableI2C" scoped="" ref="0x7f2924fffc10"/>
        <function-ref name="setStartBit" scoped="" ref="0x7f2924fffda0"/>
        <function-ref name="getTransferByteCount" scoped="" ref="0x7f2924ffe020"/>
        <function-ref name="getTransmitReceiveMode" scoped="" ref="0x7f2924ffe1b0"/>
        <function-ref name="clearModeI2C" scoped="" ref="0x7f2924ffe340"/>
        <function-ref name="setOwnAddress" scoped="" ref="0x7f2924ffe4d0"/>
        <function-ref name="isI2C" scoped="" ref="0x7f2924ffe660"/>
        <function-ref name="enableGeneralCall" scoped="" ref="0x7f2924ffe7f0"/>
        <function-ref name="enableOwnAddress" scoped="" ref="0x7f2924ffe980"/>
        <function-ref name="isAccessReadyPending" scoped="" ref="0x7f2924ffed10"/>
        <function-ref name="isArbitrationLostPending" scoped="" ref="0x7f2924ffd020"/>
        <function-ref name="disableReceiveReady" scoped="" ref="0x7f2924ffd1b0"/>
        <function-ref name="disableNoAck" scoped="" ref="0x7f2924ffd340"/>
        <function-ref name="disableStartDetect" scoped="" ref="0x7f2924ffd4d0"/>
        <function-ref name="enableArbitrationLost" scoped="" ref="0x7f2924ffd660"/>
        <function-ref name="disableI2C" scoped="" ref="0x7f2924ffd7f0"/>
        <function-ref name="getShiftClock" scoped="" ref="0x7f2924ffd980"/>
        <function-ref name="disableArbitrationLost" scoped="" ref="0x7f2924ffdb10"/>
        <function-ref name="disableAccessReady" scoped="" ref="0x7f2924ffdca0"/>
        <function-ref name="setTransferByteCount" scoped="" ref="0x7f2924ffde30"/>
        <function-ref name="isOwnAddressPending" scoped="" ref="0x7f2924ffc020"/>
        <function-ref name="getOwnAddress" scoped="" ref="0x7f2924ffc1b0"/>
        <function-ref name="enableTransmitReady" scoped="" ref="0x7f2924ffc340"/>
        <function-ref name="setModeI2C" scoped="" ref="0x7f2924ffc4d0"/>
        <function-ref name="getStartBit" scoped="" ref="0x7f2924ffc660"/>
        <function-ref name="setWordMode" scoped="" ref="0x7f2924ffc7f0"/>
        <function-ref name="setData" scoped="" ref="0x7f2924ffc980"/>
        <function-ref name="isStartDetectPending" scoped="" ref="0x7f2924ffcb10"/>
        <function-ref name="getClockSource" scoped="" ref="0x7f2924ffcca0"/>
        <function-ref name="getWordMode" scoped="" ref="0x7f2924ffce30"/>
        <function-ref name="setShiftClock" scoped="" ref="0x7f2924ffb020"/>
        <function-ref name="setSlaveMode" scoped="" ref="0x7f2924ffb1b0"/>
        <function-ref name="enableNoAck" scoped="" ref="0x7f2924ffb340"/>
        <function-ref name="enableReceiveReady" scoped="" ref="0x7f2924ffb8d0"/>
        <function-ref name="disableGeneralCall" scoped="" ref="0x7f2924ffba60"/>
        <function-ref name="setClockPrescaler" scoped="" ref="0x7f2924ffbbf0"/>
        <function-ref name="setStopBit" scoped="" ref="0x7f2924ffbd80"/>
        <function-ref name="setReceiveMode" scoped="" ref="0x7f2924ffa020"/>
        <function-ref name="isNoAckPending" scoped="" ref="0x7f2924ffa1b0"/>
        <function-ref name="setRepeatMode" scoped="" ref="0x7f2924ffa340"/>
        <function-ref name="isTransmitReadyPending" scoped="" ref="0x7f2924ffa4d0"/>
        <function-ref name="setStartByte" scoped="" ref="0x7f2924ffa660"/>
        <function-ref name="isReceiveReadyPending" scoped="" ref="0x7f2924ffa7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SIMO" ref="0x7f2924ff5700" loc="51:../../../tos/chips/msp430/usart/HplMsp430I2C0P.nc">
      <component-ref qname="HplMsp430I2C0P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SIMO" scoped="" ref="0x7f2924ff5700"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924ff5a80"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924ff5c10"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2924ff5da0"/>
        <function-ref name="clr" scoped="" ref="0x7f2924ff3a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924ff41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924ff4340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2924ff44d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2924ff4660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924ff47f0"/>
        <function-ref name="get" scoped="" ref="0x7f2924ff4980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2924ff4b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2924ff4ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2924ff4e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2924ff3120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2924ff32b0"/>
        <function-ref name="set" scoped="" ref="0x7f2924ff3440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2924ff35d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2924ff4020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2924ff3760"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2924ff38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f2924edfc60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924edfc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924edd210"/>
        <function-ref name="write" scoped="" ref="0x7f2924edd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f2924ee9da0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f2924ee9da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee8180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f2924ee2b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924ee2b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ee1020"/>
        <function-ref name="write" scoped="" ref="0x7f2924ee11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f2924edc670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924edc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924edc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924edcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f2924ed5e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f2924ed5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed4210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f2924edce50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f2924edce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924edb210"/>
        <function-ref name="write" scoped="" ref="0x7f2924edb3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f2924ec82f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2924ec82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ec8670"/>
        <function-ref name="write" scoped="" ref="0x7f2924ec8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f2924ecb2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2924ecb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ecb670"/>
        <function-ref name="write" scoped="" ref="0x7f2924ecb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f2924ee7120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2924ee7120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee74a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f2924ed0670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f2924ed0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed09f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f2924ecc2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924ecc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ecc670"/>
        <function-ref name="write" scoped="" ref="0x7f2924ecc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f2924ee1c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2924ee1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ee0020"/>
        <function-ref name="write" scoped="" ref="0x7f2924ee01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f2924ee0c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2924ee0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924edf020"/>
        <function-ref name="write" scoped="" ref="0x7f2924edf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f2924ed6670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f2924ed6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed69f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f2924ed9e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f2924ed9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed7210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f2924edb670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2924edb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924edb9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924edbb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2924eea760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924eea760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2924eeaae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2924eeac70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2924eeae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f2924ee6aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924ee6aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee6e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f2924ee4120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2924ee4120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee45a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f2924ecfa70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2924ecfa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ecfdf0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ece020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f2924ee4870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f2924ee4870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f2924eccad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924eccad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ecce50"/>
        <function-ref name="write" scoped="" ref="0x7f2924ecb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f2924ee7dc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924ee7dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee6180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f2924ed2e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f2924ed2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed0210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f2924ee0480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f2924ee0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ee0800"/>
        <function-ref name="write" scoped="" ref="0x7f2924ee0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f2924ee1480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924ee1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ee1800"/>
        <function-ref name="write" scoped="" ref="0x7f2924ee1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f2924ee9750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2924ee9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee9ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f2924ed3e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f2924ed3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed2210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f2924ed4670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f2924ed4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed49f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f2924ed2670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f2924ed2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed29f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f2924ec9ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2924ec9ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ec9e50"/>
        <function-ref name="write" scoped="" ref="0x7f2924ec8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f2924ecbad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2924ecbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ecbe50"/>
        <function-ref name="write" scoped="" ref="0x7f2924ec9020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f2924ed7670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f2924ed7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed79f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f2924ed4e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f2924ed4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed3210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f2924ecdad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f2924ecdad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ecde50"/>
        <function-ref name="write" scoped="" ref="0x7f2924ecc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f2924eda670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f2924eda670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eda9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924edab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f2924ec8ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2924ec8ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924ec8e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924ec7020"/>
        <function-ref name="write" scoped="" ref="0x7f2924ec71b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924ec7340"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924ec74d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f2924ee9100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2924ee9100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee9480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f2924ee2370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f2924ee2370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ee26f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ee2880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f2924edf480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f2924edf480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924edf800"/>
        <function-ref name="write" scoped="" ref="0x7f2924edf990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f2924ed6e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f2924ed6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed5210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f2924edbe50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2924edbe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eda210"/>
        <function-ref name="write" scoped="" ref="0x7f2924eda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f2924ed5670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f2924ed5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed59f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f2924edd670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2924edd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924edd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924eddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f2924ee8450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2924ee8450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee87d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f2924edde50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924edde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924edc210"/>
        <function-ref name="write" scoped="" ref="0x7f2924edc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2924eeca80" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2924eeca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924eece00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924eea020"/>
        <function-ref name="request" scoped="" ref="0x7f2924eea1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f2924eea340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924eea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f2924ee3020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2924ee3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f2924ee3cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f2924ee3cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee20a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f2924ecd2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2924ecd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ecd670"/>
        <function-ref name="write" scoped="" ref="0x7f2924ecd800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f2924ecead0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2924ecead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ecee50"/>
        <function-ref name="write" scoped="" ref="0x7f2924ecd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f2924ee6450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924ee6450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee67d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f2924ece2f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2924ece2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ece670"/>
        <function-ref name="write" scoped="" ref="0x7f2924ece800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f2924ec92f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f2924ec92f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ec9670"/>
        <function-ref name="write" scoped="" ref="0x7f2924ec9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f2924ed7e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f2924ed7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed6210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f2924ed3670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f2924ed3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed39f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f2924ee8aa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2924ee8aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee8e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f2924ee7770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2924ee7770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee7af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f2924edae50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f2924edae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed9210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f2924ee3670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2924ee3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ee39f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f2924ed9670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f2924ed9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ed99f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ed9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f2924ed0e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f2924ed0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ecf610"/>
        <function-ref name="write" scoped="" ref="0x7f2924ecf7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f2924ec77a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2924ec77a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924ec7b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924ec7cb0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ec7e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924ec6020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924ec61b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f2924eb2c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924eb2c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb1210"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb13a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f2924ebdda0" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f2924ebdda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ebc180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f2924eb6b50" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924eb6b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb4020"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb41b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f2924eb0670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924eb0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb09f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb0b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f2924ea9e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f2924ea9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea7210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f2924eb0e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f2924eb0e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eae210"/>
        <function-ref name="write" scoped="" ref="0x7f2924eae3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f2924e9c2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2924e9c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e9c670"/>
        <function-ref name="write" scoped="" ref="0x7f2924e9c800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f2924e9e2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2924e9e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e9e670"/>
        <function-ref name="write" scoped="" ref="0x7f2924e9e800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f2924eba120" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2924eba120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924eba4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f2924ea4670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f2924ea4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea49f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea4b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f2924e9f2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924e9f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e9f670"/>
        <function-ref name="write" scoped="" ref="0x7f2924e9f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f2924eb4c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2924eb4c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb3020"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f2924eb3c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2924eb3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb2020"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb21b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f2924eaa670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f2924eaa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eaa9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924eaab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f2924eace50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f2924eace50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eab210"/>
        <function-ref name="write" scoped="" ref="0x7f2924eab3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f2924eae670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2924eae670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eae9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924eaeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2924ebe760" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924ebe760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2924ebeae0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2924ebec70"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2924ebee00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f2924eb9aa0" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924eb9aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924eb9e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f2924eb8120" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2924eb8120"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924eb85a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f2924ea3a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2924ea3a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea3df0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f2924eb8870" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f2924eb8870"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924eb8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f2924e9fad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924e9fad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e9fe50"/>
        <function-ref name="write" scoped="" ref="0x7f2924e9e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f2924ebadc0" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924ebadc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924eb9180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f2924ea5e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f2924ea5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea4210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea43a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f2924eb3480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f2924eb3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb3800"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f2924eb4480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924eb4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb4800"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb4990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f2924ebd750" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2924ebd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ebdad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f2924ea6e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f2924ea6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea5210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f2924ea7670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f2924ea7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea79f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f2924ea5670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f2924ea5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea59f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f2924e9dad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2924e9dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e9de50"/>
        <function-ref name="write" scoped="" ref="0x7f2924e9c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f2924e9ead0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2924e9ead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e9ee50"/>
        <function-ref name="write" scoped="" ref="0x7f2924e9d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f2924eab670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f2924eab670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eab9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924eabb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f2924ea7e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f2924ea7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea6210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f2924ea0ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f2924ea0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea0e50"/>
        <function-ref name="write" scoped="" ref="0x7f2924e9f020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f2924ead670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f2924ead670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ead9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924eadb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f2924e9cad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2924e9cad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924e9ce50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924e9b020"/>
        <function-ref name="write" scoped="" ref="0x7f2924e9b1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924e9b340"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924e9b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f2924ebd100" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2924ebd100"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ebd480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f2924eb6370" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f2924eb6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb66f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb6880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f2924eb2480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f2924eb2480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb2800"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb2990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f2924eaae50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f2924eaae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea9210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f2924eaee50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2924eaee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ead210"/>
        <function-ref name="write" scoped="" ref="0x7f2924ead3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f2924ea9670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f2924ea9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea99f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f2924eb1670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2924eb1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb19f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb1b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f2924ebc450" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2924ebc450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ebc7d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f2924eb1e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924eb1e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eb0210"/>
        <function-ref name="write" scoped="" ref="0x7f2924eb03a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2924ebf9e0" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2924ebf9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924ebfd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924ebe020"/>
        <function-ref name="request" scoped="" ref="0x7f2924ebe1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f2924ebe340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924ebe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f2924eb7020" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2924eb7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924eb73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f2924eb7cc0" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f2924eb7cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924eb60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f2924ea02f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2924ea02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea0670"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f2924ea2ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2924ea2ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea2e50"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f2924eb9450" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924eb9450"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924eb97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f2924ea22f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2924ea22f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea2670"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea2800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f2924e9d2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f2924e9d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e9d670"/>
        <function-ref name="write" scoped="" ref="0x7f2924e9d800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f2924eabe50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f2924eabe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eaa210"/>
        <function-ref name="write" scoped="" ref="0x7f2924eaa3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f2924ea6670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f2924ea6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea69f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f2924ebcaa0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2924ebcaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ebce20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f2924eba770" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2924eba770"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ebaaf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f2924eade50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f2924eade50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eac210"/>
        <function-ref name="write" scoped="" ref="0x7f2924eac3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f2924eb7670" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2924eb7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924eb79f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f2924eac670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f2924eac670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924eac9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924eacb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f2924ea4e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f2924ea4e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924ea3610"/>
        <function-ref name="write" scoped="" ref="0x7f2924ea37a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f2924e9b7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2924e9b7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924e9bb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924e9bcb0"/>
        <function-ref name="write" scoped="" ref="0x7f2924e9be40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924e9a020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924e9a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x7f2924e92b20" loc="54:../../../tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2924e92b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f2924e8f020"/>
        <function-ref name="changed" scoped="" ref="0x7f2924e8f1b0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f2924e8f340"/>
        <function-ref name="setAddress" scoped="" ref="0x7f2924e8f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f2924e91d20" loc="13:../../../tos/chips/ds2411/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2924e91d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f2924e7a0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x7f2924e76310" loc="5:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x7f2924e76310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x7f2924e76690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadId48" ref="0x7f2924e73880" loc="8:../../../tos/chips/ds2411/LocalIeeeEui64P.nc">
      <component-ref qname="LocalIeeeEui64P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f2924e73880"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e73c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f2924e68020" loc="8:../../../tos/chips/ds2411/Ds2411C.nc">
      <component-ref qname="Ds2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f2924e68020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e683a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="OneWire" ref="0x7f2924e5ebd0" loc="14:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f2924e5ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e62020"/>
        <function-ref name="write" scoped="" ref="0x7f2924e621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerControl" ref="0x7f2924e62530" loc="15:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerControl" scoped="" ref="0x7f2924e62530"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2924e628b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2924e62a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadId48" ref="0x7f2924e63140" loc="11:../../../tos/chips/ds2411/Ds2411P.nc">
      <component-ref qname="Ds2411P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadId48" scoped="" ref="0x7f2924e63140"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadId48"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e634c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f2924e67c50" loc="8:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f2924e67c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e4e020"/>
        <function-ref name="write" scoped="" ref="0x7f2924e4e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f2924e4e540" loc="11:../../../tos/lib/onewire/OneWireMasterC.nc">
      <component-ref qname="OneWireMasterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f2924e4e540"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924e4e8c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924e4ea50"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924e4ebe0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924e4ed70"/>
        <function-ref name="get" scoped="" ref="0x7f2924e4d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924e4d1b0"/>
        <function-ref name="set" scoped="" ref="0x7f2924e4d340"/>
        <function-ref name="clr" scoped="" ref="0x7f2924e4d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x7f2924e45950" loc="15:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f2924e45950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec4640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2925ec49b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f2924e47780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="OneWire" ref="0x7f2924e4a150" loc="11:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="OneWire" scoped="" ref="0x7f2924e4a150"/></type-interface>
      <instance>
        <interfacedef-ref qname="OneWireReadWrite"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924e4a4d0"/>
        <function-ref name="write" scoped="" ref="0x7f2924e4a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pin" ref="0x7f2924e4a9f0" loc="14:../../../tos/lib/onewire/OneWireMasterP.nc">
      <component-ref qname="OneWireMasterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Pin" scoped="" ref="0x7f2924e4a9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924e4ad70"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924e49020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924e491b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924e49340"/>
        <function-ref name="get" scoped="" ref="0x7f2924e494d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924e49660"/>
        <function-ref name="set" scoped="" ref="0x7f2924e497f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2924e49980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f2924e4cca0" loc="41:../../../tos/chips/msp430/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f2924e4cca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec4640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2925ec49b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f2924e24ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x7f2924e22a90" loc="54:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BusyWait" scoped="" ref="0x7f2924e22a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec4640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2925ec49b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x7f2924e218d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2924e12020" loc="55:../../../tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2924e12020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec4640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2925ec49b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2924e12e30"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2924e10800"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2924e10340"/>
        <function-ref name="overflow" scoped="" ref="0x7f2924e10cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430CounterMicro" ref="0x7f2924e0c530" loc="46:../../../tos/chips/msp430/x1x2/timer/Msp430CounterMicroC.nc">
      <component-ref qname="Msp430CounterMicroC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430CounterMicro" scoped="" ref="0x7f2924e0c530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec4640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2925ec49b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2924e0b3d0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2924e0bd50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2924e0b890"/>
        <function-ref name="overflow" scoped="" ref="0x7f2924e0a260"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2924e05020" loc="45:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2924e05020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2924e053a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2924e05530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2924e056c0"/>
        <function-ref name="get" scoped="" ref="0x7f2924e05850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2924e059e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2924e05b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f2924e05d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2924e04020"/>
        <function-ref name="overflow" scoped="" ref="0x7f2924e041b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2924e04340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f2924e044d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7f2924e08e50" loc="44:../../../tos/chips/msp430/timer/Msp430CounterC.nc">
      <component-ref qname="Msp430CounterMicroC.Counter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2924e08e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec4640"/>
            <typename><typedef-ref name="TMicro" ref="0x7f2925ec49b0"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2924e07ca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2924e06670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2924e061b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f2924e06b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Gpio" ref="0x7f2924e4f590" loc="3:../../../tos/platforms/epic/chips/ds2411/HplDs2411C.nc">
      <component-ref qname="HplDs2411C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Gpio" scoped="" ref="0x7f2924e4f590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924e4f910"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924e4faa0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924e4fc30"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924e4fdc0"/>
        <function-ref name="get" scoped="" ref="0x7f2924e00020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924e001b0"/>
        <function-ref name="set" scoped="" ref="0x7f2924e00340"/>
        <function-ref name="clr" scoped="" ref="0x7f2924e004d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2924dfdc50" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2924dfdc50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924dfc020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924dfc1b0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2924dfc340"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2924dfa020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924dfc660"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924dfc7f0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2924dfc980"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2924dfcb10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924dfcca0"/>
        <function-ref name="get" scoped="" ref="0x7f2924dfce30"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2924dfb020"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2924dfb1b0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2924dfb340"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2924dfb5d0"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f2924dfb760"/>
        <function-ref name="set" scoped="" ref="0x7f2924dfb8f0"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2924dfba80"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2924dfbc10"/>
        <function-ref name="clr" scoped="" ref="0x7f2924dfc4d0"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2924dfbda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2924dfe9e0" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplDs2411C.MspGpio"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2924dfe9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924dfed60"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924dfd020"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924dfd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924dfd340"/>
        <function-ref name="get" scoped="" ref="0x7f2924dfd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924dfd660"/>
        <function-ref name="set" scoped="" ref="0x7f2924dfd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f2924dfd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2924df51b0" loc="14:../../../tos/chips/ds2411/Ds2411PowerControlC.nc">
      <component-ref qname="Ds2411PowerControlC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2924df51b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2924df5530"/>
        <function-ref name="stop" scoped="" ref="0x7f2924df56c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f2924de6cb0" loc="46:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f2924de6cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2924de50a0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2924de5230"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2924de53c0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2924de5550"/>
        <function-ref name="setCca" scoped="" ref="0x7f2924de56e0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2924de5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f2924de2990" loc="47:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f2924de2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2924de2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x7f2924de6020" loc="45:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Transmit" scoped="" ref="0x7f2924de6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924de63a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924de6530"/>
        <function-ref name="modify" scoped="" ref="0x7f2924de66c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924de6850"/>
        <function-ref name="resend" scoped="" ref="0x7f2924de69e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2924de96c0" loc="44:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2924de96c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2924de9a40"/>
        <function-ref name="stop" scoped="" ref="0x7f2924de9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f2924de4150" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f2924de4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2924de44d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f2924dd8970" loc="51:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f2924dd8970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2924dd8cf0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2924dd8e80"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2924dd7030"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2924dd71c0"/>
        <function-ref name="setCca" scoped="" ref="0x7f2924dd7350"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2924dd74e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f2924dce950" loc="58:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2924dce950"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2924dcc020"/>
        <function-ref name="clear" scoped="" ref="0x7f2924dcc750"/>
        <function-ref name="isValid" scoped="" ref="0x7f2924dcd780"/>
        <function-ref name="set" scoped="" ref="0x7f2924dcce80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f2924db7020" loc="78:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924db7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924db73a0"/>
        <function-ref name="write" scoped="" ref="0x7f2924db7530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f2924db7890" loc="79:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2924db7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924db7c10"/>
        <function-ref name="write" scoped="" ref="0x7f2924db7da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x7f2924dd7900" loc="52:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="EnergyIndicator" scoped="" ref="0x7f2924dd7900"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2924dd7c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x7f2924dba530" loc="72:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2924dba530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924dba8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x7f2924dc9880" loc="60:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CaptureSFD" scoped="" ref="0x7f2924dc9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x7f2924dc9c00"/>
        <function-ref name="disable" scoped="" ref="0x7f2924dc9d90"/>
        <function-ref name="captured" scoped="" ref="0x7f2924dc8020"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x7f2924dc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x7f2924dd6ae0" loc="55:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BackoffTimer" scoped="" ref="0x7f2924dd6ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2924dd0390"/>
        <function-ref name="fired" scoped="" ref="0x7f2924dd2360"/>
        <function-ref name="startAt" scoped="" ref="0x7f2924dd2ce0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2924dd2820"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2924dd0850"/>
        <function-ref name="start" scoped="" ref="0x7f2924dd3970"/>
        <function-ref name="stop" scoped="" ref="0x7f2924dd3e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2924dd0d00" loc="56:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924dd0d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2924dcf0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2924dcf230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2924dcf3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2924dcf550"/>
        <function-ref name="getPower" scoped="" ref="0x7f2924dcf6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2924dcf870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x7f2924dbc550" loc="68:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924dbc550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924dbc8d0"/>
        <function-ref name="write" scoped="" ref="0x7f2924dbca60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x7f2924dbce00" loc="69:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2924dbce00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924dbb1c0"/>
        <function-ref name="write" scoped="" ref="0x7f2924dbb350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x7f2924db0d40" loc="83:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f2924db0d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924db40e0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f2924db4270"/>
        <function-ref name="sfd" scoped="" ref="0x7f2924db4400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2924dd9bc0" loc="50:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2924dd9bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924dd8020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924dd81b0"/>
        <function-ref name="modify" scoped="" ref="0x7f2924dd8340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924dd84d0"/>
        <function-ref name="resend" scoped="" ref="0x7f2924dd8660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x7f2924dbed10" loc="66:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924dbed10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2924dbd0e0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2924dbd270"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2924dbd400"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x7f2924dbac60" loc="73:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924dbac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924db9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f2924dc2820" loc="62:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f2924dc2820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924dc2ba0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924dc2d30"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924dc0020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924dc01b0"/>
        <function-ref name="get" scoped="" ref="0x7f2924dc0340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924dc04d0"/>
        <function-ref name="set" scoped="" ref="0x7f2924dc0660"/>
        <function-ref name="clr" scoped="" ref="0x7f2924dc07f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2924ddbc60" loc="48:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2924ddbc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2924dd9020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2924dcfbb0" loc="57:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924dcfbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2924dce020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2924dce1b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2924dce340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x7f2924dc3be0" loc="59:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2924dc3be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2924dc9020"/>
        <function-ref name="isSet" scoped="" ref="0x7f2924dc91b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924dc9340"/>
        <function-ref name="set" scoped="" ref="0x7f2924dc94d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x7f2924db93e0" loc="74:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924db93e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924db9960"/>
        <function-ref name="write" scoped="" ref="0x7f2924db9af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f2924dbe020" loc="65:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f2924dbe020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924dbe3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924dbe530"/>
        <function-ref name="request" scoped="" ref="0x7f2924dbe6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2924dbe850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924dbe9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x7f2924dc8500" loc="61:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CCA" scoped="" ref="0x7f2924dc8500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924dc8980"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924dc8b10"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924dc8ca0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924dc8e30"/>
        <function-ref name="get" scoped="" ref="0x7f2924dc2020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924dc21b0"/>
        <function-ref name="set" scoped="" ref="0x7f2924dc2340"/>
        <function-ref name="clr" scoped="" ref="0x7f2924dc24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f2924db6130" loc="80:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2924db6130"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924db64b0"/>
        <function-ref name="write" scoped="" ref="0x7f2924db6640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXNONCE" ref="0x7f2924db69c0" loc="81:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2924db69c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924db6d40"/>
        <function-ref name="write" scoped="" ref="0x7f2924db5020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f2924dbb6d0" loc="70:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2924dbb6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924dbba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x7f2924dc0b40" loc="63:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFD" scoped="" ref="0x7f2924dc0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924dbf020"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924dbf1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924dbf340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924dbf4d0"/>
        <function-ref name="get" scoped="" ref="0x7f2924dbf660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924dbf7f0"/>
        <function-ref name="set" scoped="" ref="0x7f2924dbf980"/>
        <function-ref name="clr" scoped="" ref="0x7f2924dbfb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2924db46c0" loc="84:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2924db46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2924db4a40"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2924db4bd0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2924db4d60"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2924db3020"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2924db31b0"/>
        <function-ref name="get" scoped="" ref="0x7f2924db3340"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2924db34d0"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2924db3b10"/>
        <function-ref name="set" scoped="" ref="0x7f2924db3660"/>
        <function-ref name="led0On" scoped="" ref="0x7f2924db37f0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2924db3980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f2924db85e0" loc="77:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924db85e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924db8960"/>
        <function-ref name="write" scoped="" ref="0x7f2924db8af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2924dd9320" loc="49:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2924dd9320"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2924dd96a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2924dd9830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x7f2924dbd780" loc="67:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2924dbd780"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924dbdb00"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924dbdc90"/>
        <function-ref name="write" scoped="" ref="0x7f2924dbde20"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924dbc020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924dbc1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x7f2924dbbde0" loc="71:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2924dbbde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924dba180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXENC" ref="0x7f2924db9e80" loc="76:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2924db9e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924db8220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x7f2924dd60f0" loc="53:../../../tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ByteIndicator" scoped="" ref="0x7f2924dd60f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2924dd6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f2924d16c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924d16c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d15210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d153a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f2924d20020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f2924d20020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d203a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f2924d1ac70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924d1ac70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d18020"/>
        <function-ref name="write" scoped="" ref="0x7f2924d181b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f2924d14670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924d14670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d149f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d14b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f2924d0de50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f2924d0de50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d0b210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d0b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f2924d14e50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f2924d14e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d12210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d123a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f2924d002f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2924d002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d00670"/>
        <function-ref name="write" scoped="" ref="0x7f2924d00800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f2924d022f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2924d022f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d02670"/>
        <function-ref name="write" scoped="" ref="0x7f2924d02800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f2924d1e370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2924d1e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1e6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f2924d08670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f2924d08670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d089f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d08b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f2924d032f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924d032f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d03670"/>
        <function-ref name="write" scoped="" ref="0x7f2924d03800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f2924d18c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2924d18c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d17020"/>
        <function-ref name="write" scoped="" ref="0x7f2924d171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f2924d17c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2924d17c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d16020"/>
        <function-ref name="write" scoped="" ref="0x7f2924d161b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f2924d0e670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f2924d0e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d0e9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d0eb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f2924d10e50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f2924d10e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d0f210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d0f3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f2924d12670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2924d12670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d129f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d12b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2924d228f0" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924d228f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2924d22c70"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2924d22e00"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2924d21020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f2924d1dd00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924d1dd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1c0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f2924d1c370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2924d1c370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1c7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f2924d07a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2924d07a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d07df0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d06020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f2924d1cac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f2924d1cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1ce40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f2924d03ad0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924d03ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d03e50"/>
        <function-ref name="write" scoped="" ref="0x7f2924d02020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f2924d1d060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924d1d060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1d3e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f2924d09e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f2924d09e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d08210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d083a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f2924d17480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f2924d17480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d17800"/>
        <function-ref name="write" scoped="" ref="0x7f2924d17990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f2924d18480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924d18480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d18800"/>
        <function-ref name="write" scoped="" ref="0x7f2924d18990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f2924d21940" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2924d21940"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d21cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f2924d0ae50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f2924d0ae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d09210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d093a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f2924d0b670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f2924d0b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d0b9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d0bb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f2924d09670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f2924d09670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d099f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d09b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f2924d01ad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2924d01ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d01e50"/>
        <function-ref name="write" scoped="" ref="0x7f2924d00020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f2924d02ad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2924d02ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d02e50"/>
        <function-ref name="write" scoped="" ref="0x7f2924d01020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f2924d0f670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f2924d0f670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d0f9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d0fb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f2924d0be50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f2924d0be50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d0a210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d0a3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f2924d04ad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f2924d04ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d04e50"/>
        <function-ref name="write" scoped="" ref="0x7f2924d03020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f2924d11670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f2924d11670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d119f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d11b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f2924d00ad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2924d00ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924d00e50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924cff020"/>
        <function-ref name="write" scoped="" ref="0x7f2924cff1b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924cff340"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924cff4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f2924d212f0" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2924d212f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d21670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f2924d1a490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f2924d1a490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d1a810"/>
        <function-ref name="write" scoped="" ref="0x7f2924d1a9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f2924d16480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f2924d16480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d16800"/>
        <function-ref name="write" scoped="" ref="0x7f2924d16990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f2924d0ee50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f2924d0ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d0d210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d0d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f2924d12e50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2924d12e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d11210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d113a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f2924d0d670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f2924d0d670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d0d9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d0db80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f2924d15670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2924d15670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d159f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d15b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f2924d20670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2924d20670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d209f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f2924d15e50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924d15e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d14210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d143a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2924d23c30" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2924d23c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924d22020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924d221b0"/>
        <function-ref name="request" scoped="" ref="0x7f2924d22340"/>
        <function-ref name="granted" scoped="" ref="0x7f2924d224d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924d22660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f2924d1b160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2924d1b160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1b4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f2924d1be00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f2924d1be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1a1c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f2924d042f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2924d042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d04670"/>
        <function-ref name="write" scoped="" ref="0x7f2924d04800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f2924d06ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2924d06ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d06e50"/>
        <function-ref name="write" scoped="" ref="0x7f2924d04020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f2924d1d6b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924d1d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1da30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f2924d062f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2924d062f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d06670"/>
        <function-ref name="write" scoped="" ref="0x7f2924d06800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f2924d012f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f2924d012f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d01670"/>
        <function-ref name="write" scoped="" ref="0x7f2924d01800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f2924d0fe50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f2924d0fe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d0e210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d0e3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f2924d0a670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f2924d0a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d0a9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d0ab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f2924d20cc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2924d20cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f2924d1e9c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2924d1e9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1ed40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f2924d11e50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f2924d11e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d10210"/>
        <function-ref name="write" scoped="" ref="0x7f2924d103a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f2924d1b7b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2924d1b7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924d1bb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f2924d10670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f2924d10670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d109f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924d10b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f2924d08e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f2924d08e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924d07610"/>
        <function-ref name="write" scoped="" ref="0x7f2924d077a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f2924cff7a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2924cff7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924cffb20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924cffcb0"/>
        <function-ref name="write" scoped="" ref="0x7f2924cffe40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924cfe020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924cfe1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f2924cf2df0" loc="42:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f2924cf2df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924cef1c0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f2924cef350"/>
        <function-ref name="sfd" scoped="" ref="0x7f2924cef4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2924cef7c0" loc="43:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2924cef7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924cefb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f2924cee020" loc="44:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f2924cee020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2924cee3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2924cf25c0" loc="41:../../../tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2924cf25c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2924cf2940"/>
        <function-ref name="stop" scoped="" ref="0x7f2924cf2ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x7f2924ce6380" loc="54:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFO" scoped="" ref="0x7f2924ce6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924ce6700"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924ce6890"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924ce6a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924ce6bb0"/>
        <function-ref name="get" scoped="" ref="0x7f2924ce6d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924ce5020"/>
        <function-ref name="set" scoped="" ref="0x7f2924ce51b0"/>
        <function-ref name="clr" scoped="" ref="0x7f2924ce5340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f2924cdfb90" loc="64:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f2924cdfb90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f2924cde020"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f2924cde1b0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f2924cde340"/>
        <function-ref name="syncDone" scoped="" ref="0x7f2924cde4d0"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f2924cde660"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f2924cde7f0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2924cde980"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f2924cdeb10"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f2924cdeca0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f2924cdee30"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f2924cdd020"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f2924cdd1b0"/>
        <function-ref name="sync" scoped="" ref="0x7f2924cdd340"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2924cdd5d0"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f2924cdd760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x7f2924cc79d0" loc="148:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="receiveDone_task" scoped="" ref="0x7f2924cc79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2924cc7d50"/>
        <function-ref name="runTask" scoped="" ref="0x7f2924cc6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x7f2924cddd70" loc="65:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp" scoped="" ref="0x7f2924cddd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2924cda330"/>
        <function-ref name="clear" scoped="" ref="0x7f2924cdaa60"/>
        <function-ref name="isValid" scoped="" ref="0x7f2924cdbba0"/>
        <function-ref name="set" scoped="" ref="0x7f2924cd9210"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x7f2924ce56b0" loc="55:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FIFOP" scoped="" ref="0x7f2924ce56b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924ce5a30"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924ce5bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924ce5d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924ce4020"/>
        <function-ref name="get" scoped="" ref="0x7f2924ce41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924ce4340"/>
        <function-ref name="set" scoped="" ref="0x7f2924ce44d0"/>
        <function-ref name="clr" scoped="" ref="0x7f2924ce4660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL1" ref="0x7f2924cd8cb0" loc="69:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924cd8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924cd60a0"/>
        <function-ref name="write" scoped="" ref="0x7f2924cd6230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY0" ref="0x7f2924cd6590" loc="70:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2924cd6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924cd6910"/>
        <function-ref name="write" scoped="" ref="0x7f2924cd6aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXNONCE" ref="0x7f2924cd56d0" loc="72:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2924cd56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924cd5a50"/>
        <function-ref name="write" scoped="" ref="0x7f2924cd5be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2924ce0330" loc="62:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924ce0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2924ce06b0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2924ce0840"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2924ce09d0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2924ce0b60"/>
        <function-ref name="getPower" scoped="" ref="0x7f2924ce0cf0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2924ce0e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x7f2924ce9550" loc="49:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Receive" scoped="" ref="0x7f2924ce9550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924ce98d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x7f2924ce9a60"/>
        <function-ref name="sfd" scoped="" ref="0x7f2924ce9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x7f2924ce13a0" loc="60:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2924ce13a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ce1720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x7f2924ce7020" loc="53:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CSN" scoped="" ref="0x7f2924ce7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924ce73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924ce7530"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924ce76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924ce7850"/>
        <function-ref name="get" scoped="" ref="0x7f2924ce79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924ce7b70"/>
        <function-ref name="set" scoped="" ref="0x7f2924ce7d00"/>
        <function-ref name="clr" scoped="" ref="0x7f2924ce6020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO_RAM" ref="0x7f2924cd4020" loc="73:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924cd4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924cd43a0"/>
        <function-ref name="write" scoped="" ref="0x7f2924cd4530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2924cea620" loc="47:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2924cea620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2924cea9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2924cdf1e0" loc="63:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924cdf1e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2924cdf560"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2924cdf6f0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2924cdf880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2924ce8020" loc="50:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2924ce8020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924ce83a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x7f2924ce36e0" loc="58:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SpiResource" scoped="" ref="0x7f2924ce36e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924ce3a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924ce3bf0"/>
        <function-ref name="request" scoped="" ref="0x7f2924ce3d80"/>
        <function-ref name="granted" scoped="" ref="0x7f2924ce2020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924ce21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="KEY1" ref="0x7f2924cd6e00" loc="71:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2924cd6e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924cd51c0"/>
        <function-ref name="write" scoped="" ref="0x7f2924cd5350"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x7f2924ce2530" loc="59:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2924ce2530"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924ce28b0"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924ce2a40"/>
        <function-ref name="write" scoped="" ref="0x7f2924ce2bd0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924ce2d60"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924ce1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x7f2924cd48b0" loc="74:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2924cd48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924cd4e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x7f2924ce87c0" loc="51:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketIndicator" scoped="" ref="0x7f2924ce87c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x7f2924ce8b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2924cd3150" loc="76:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2924cd3150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2924cd34d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2924cd3660"/>
        <function-ref name="led1On" scoped="" ref="0x7f2924cd37f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2924cd3980"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2924cd3b10"/>
        <function-ref name="get" scoped="" ref="0x7f2924cd3ca0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2924cd3e30"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2924cd24d0"/>
        <function-ref name="set" scoped="" ref="0x7f2924cd2020"/>
        <function-ref name="led0On" scoped="" ref="0x7f2924cd21b0"/>
        <function-ref name="led2On" scoped="" ref="0x7f2924cd2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SECCTRL0" ref="0x7f2924cd83e0" loc="68:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924cd83e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924cd8760"/>
        <function-ref name="write" scoped="" ref="0x7f2924cd88f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXDEC" ref="0x7f2924cd9b10" loc="67:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2924cd9b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924cd8020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x7f2924ce4a50" loc="56:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptFIFOP" scoped="" ref="0x7f2924ce4a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2924ce4dd0"/>
        <function-ref name="disable" scoped="" ref="0x7f2924ce3020"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2924ce31b0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2924ce3340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x7f2924ce1ad0" loc="61:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924ce1ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924ce0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x7f2924ceaca0" loc="48:../../../tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2924ceaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2924ce90a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2924ce9230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f2924c67a70" loc="44:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2924c67a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2924c67df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f2924c6b670" loc="41:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924c6b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2924c6b9f0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2924c6bb80"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2924c6bd10"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2924c68020"/>
        <function-ref name="getPower" scoped="" ref="0x7f2924c681b0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2924c68340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f2924c66550" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2924c66550"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2924c65b00"/>
        <function-ref name="clear" scoped="" ref="0x7f2924c632a0"/>
        <function-ref name="isValid" scoped="" ref="0x7f2924c653d0"/>
        <function-ref name="set" scoped="" ref="0x7f2924c639d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f2924c670c0" loc="43:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c670c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2924c67440"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2924c675d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2924c67760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f2924c5e480" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2924c5e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2924c5e800"/>
        <function-ref name="isSet" scoped="" ref="0x7f2924c5e990"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924c5eb20"/>
        <function-ref name="set" scoped="" ref="0x7f2924c5ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f2924c62660" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2924c62660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2924c61ce0"/>
        <function-ref name="clear" scoped="" ref="0x7f2924c5f460"/>
        <function-ref name="isValid" scoped="" ref="0x7f2924c615b0"/>
        <function-ref name="set" scoped="" ref="0x7f2924c5fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2924c686e0" loc="42:../../../tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f2924c686e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2924c68a60"/>
        <function-ref name="noAck" scoped="" ref="0x7f2924c68bf0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2924c68d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x7f2924c57020" loc="49:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x7f2924c57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x7f2924c573a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x7f2924c5dd20" loc="46:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924c5dd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2924c5a0e0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2924c5a270"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2924c5a400"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2924c5a590"/>
        <function-ref name="getPower" scoped="" ref="0x7f2924c5a720"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2924c5a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2924c4e4a0" loc="56:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2924c4e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2924c4e820"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2924c4e9b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924c4eb40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924c4ecd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2924c4ee60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x7f2924c57a80" loc="51:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x7f2924c57a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2924c55020"/>
        <function-ref name="clear" scoped="" ref="0x7f2924c55750"/>
        <function-ref name="isValid" scoped="" ref="0x7f2924c568d0"/>
        <function-ref name="set" scoped="" ref="0x7f2924c55e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x7f2924c59640" loc="48:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924c59640"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2924c599c0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2924c59b50"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2924c59ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x7f2924c508b0" loc="53:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x7f2924c508b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2924c50c30"/>
        <function-ref name="isSet" scoped="" ref="0x7f2924c50dc0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924c4e020"/>
        <function-ref name="set" scoped="" ref="0x7f2924c4e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x7f2924c4d3b0" loc="57:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime32khz" scoped="" ref="0x7f2924c4d3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2924c4c020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x7f2924c4c6e0" loc="58:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTimeMilli" scoped="" ref="0x7f2924c4c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2924c4b3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x7f2924c54af0" loc="52:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x7f2924c54af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x7f2924c510d0"/>
        <function-ref name="clear" scoped="" ref="0x7f2924c51800"/>
        <function-ref name="isValid" scoped="" ref="0x7f2924c52970"/>
        <function-ref name="set" scoped="" ref="0x7f2924c50020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2924c5ac50" loc="47:../../../tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f2924c5ac50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2924c59020"/>
        <function-ref name="noAck" scoped="" ref="0x7f2924c591b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2924c59340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7f2924bfb020" loc="48:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LocalTime" scoped="" ref="0x7f2924bfb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2924bfbc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f2924bfa300" loc="49:../../../tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f2924bfa300"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f2924bf9150"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2924bf9ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2924bf9610"/>
        <function-ref name="overflow" scoped="" ref="0x7f2924bf8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f2924bf5450" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2924bf5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2924bf2a20"/>
        <function-ref name="fired" scoped="" ref="0x7f2924bf3020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2924bf3da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2924bf3920"/>
        <function-ref name="getdt" scoped="" ref="0x7f2924bf14a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2924bf1020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2924bf34a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2924bf4090"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2924bf2410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2924bf4560"/>
        <function-ref name="stop" scoped="" ref="0x7f2924bf4a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x7f2924be0c60" loc="69:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL1" scoped="" ref="0x7f2924be0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bdf210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bdf3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x7f2924bea020" loc="47:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXCAL" scoped="" ref="0x7f2924bea020"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924bea3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x7f2924be4c70" loc="63:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL0" scoped="" ref="0x7f2924be4c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924be3020"/>
        <function-ref name="write" scoped="" ref="0x7f2924be31b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x7f2924bde670" loc="72:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL1" scoped="" ref="0x7f2924bde670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bde9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bdeb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST0" ref="0x7f2924bd7e50" loc="86:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST0" scoped="" ref="0x7f2924bd7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd6210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd63a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x7f2924bdee50" loc="73:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BATTMON" scoped="" ref="0x7f2924bdee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bdd210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bdd3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXNONCE" ref="0x7f2924bca2f0" loc="108:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXNONCE" scoped="" ref="0x7f2924bca2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bca670"/>
        <function-ref name="write" scoped="" ref="0x7f2924bca800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY0" ref="0x7f2924bcc2f0" loc="104:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY0" scoped="" ref="0x7f2924bcc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bcc670"/>
        <function-ref name="write" scoped="" ref="0x7f2924bcc800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x7f2924be9370" loc="50:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXONCCA" scoped="" ref="0x7f2924be9370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be96f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DACTST" ref="0x7f2924bd2670" loc="93:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DACTST" scoped="" ref="0x7f2924bd2670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd29f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd2b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x7f2924bce2f0" loc="102:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x7f2924bce2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bce670"/>
        <function-ref name="write" scoped="" ref="0x7f2924bce800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x7f2924be3c60" loc="65:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RSSI" scoped="" ref="0x7f2924be3c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924be1020"/>
        <function-ref name="write" scoped="" ref="0x7f2924be11b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x7f2924be1c60" loc="67:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXCTRL" scoped="" ref="0x7f2924be1c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924be0020"/>
        <function-ref name="write" scoped="" ref="0x7f2924be01b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST0" ref="0x7f2924bd8670" loc="83:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST0" scoped="" ref="0x7f2924bd8670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd89f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd8b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x7f2924bdae50" loc="79:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANAND" scoped="" ref="0x7f2924bdae50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd9210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd93a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x7f2924bdd670" loc="74:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG0" scoped="" ref="0x7f2924bdd670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bdd9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bddb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x7f2924bec970" loc="42:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ChipSpiResource" scoped="" ref="0x7f2924bec970"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x7f2924beccf0"/>
        <function-ref name="abortRelease" scoped="" ref="0x7f2924bece80"/>
        <function-ref name="attemptRelease" scoped="" ref="0x7f2924beb030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x7f2924be7d00" loc="54:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHTX" scoped="" ref="0x7f2924be7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be60a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x7f2924be6370" loc="55:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACK" scoped="" ref="0x7f2924be6370"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be67f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_REGISTER" ref="0x7f2924bd1a70" loc="95:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO_REGISTER" scoped="" ref="0x7f2924bd1a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd1df0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x7f2924be6ac0" loc="56:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SACKPEND" scoped="" ref="0x7f2924be6ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be6e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_RAM" ref="0x7f2924bcead0" loc="103:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_RAM" scoped="" ref="0x7f2924bcead0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bcee50"/>
        <function-ref name="write" scoped="" ref="0x7f2924bcc020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x7f2924be7060" loc="52:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCOFF" scoped="" ref="0x7f2924be7060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be73e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ADCTST" ref="0x7f2924bd3e50" loc="92:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCTST" scoped="" ref="0x7f2924bd3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd2210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd23a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x7f2924be1480" loc="66:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SYNCWORD" scoped="" ref="0x7f2924be1480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924be1800"/>
        <function-ref name="write" scoped="" ref="0x7f2924be1990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x7f2924be3480" loc="64:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MDMCTRL1" scoped="" ref="0x7f2924be3480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924be3800"/>
        <function-ref name="write" scoped="" ref="0x7f2924be3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x7f2924beb950" loc="46:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SXOSCON" scoped="" ref="0x7f2924beb950"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924bebcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXBPFTST" ref="0x7f2924bd5e50" loc="90:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXBPFTST" scoped="" ref="0x7f2924bd5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd3210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd33a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST1" ref="0x7f2924bd6670" loc="87:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST1" scoped="" ref="0x7f2924bd6670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd69f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd6b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMSTATE" ref="0x7f2924bd3670" loc="91:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMSTATE" scoped="" ref="0x7f2924bd3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd39f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd3b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXNONCE" ref="0x7f2924bcbad0" loc="107:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXNONCE" scoped="" ref="0x7f2924bcbad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bcbe50"/>
        <function-ref name="write" scoped="" ref="0x7f2924bca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="KEY1" ref="0x7f2924bccad0" loc="105:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="KEY1" scoped="" ref="0x7f2924bccad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bcce50"/>
        <function-ref name="write" scoped="" ref="0x7f2924bcb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x7f2924bd9670" loc="80:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANOR" scoped="" ref="0x7f2924bd9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd99f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd9b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST2" ref="0x7f2924bd6e50" loc="88:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST2" scoped="" ref="0x7f2924bd6e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd5210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd53a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x7f2924bcfad0" loc="101:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SHORTADR" scoped="" ref="0x7f2924bcfad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bcfe50"/>
        <function-ref name="write" scoped="" ref="0x7f2924bce020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x7f2924bdc670" loc="76:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDL" scoped="" ref="0x7f2924bdc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bdc9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bdcb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x7f2924bcaad0" loc="111:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO" scoped="" ref="0x7f2924bcaad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924bcae50"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924bc9020"/>
        <function-ref name="write" scoped="" ref="0x7f2924bc91b0"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924bc9340"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924bc94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x7f2924beb300" loc="45:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SNOP" scoped="" ref="0x7f2924beb300"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924beb680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x7f2924be4490" loc="62:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MAIN" scoped="" ref="0x7f2924be4490"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924be4810"/>
        <function-ref name="write" scoped="" ref="0x7f2924be49a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x7f2924be0480" loc="68:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXCTRL0" scoped="" ref="0x7f2924be0480"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924be0800"/>
        <function-ref name="write" scoped="" ref="0x7f2924be0990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST1" ref="0x7f2924bd8e50" loc="84:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST1" scoped="" ref="0x7f2924bd8e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd7210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd73a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x7f2924bdde50" loc="75:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IOCFG1" scoped="" ref="0x7f2924bdde50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bdc210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bdc3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCTST2" ref="0x7f2924bd7670" loc="85:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCTST2" scoped="" ref="0x7f2924bd7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd79f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd7b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x7f2924bdf670" loc="70:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSCTRL" scoped="" ref="0x7f2924bdf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bdf9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bdfb80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x7f2924bea670" loc="48:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXON" scoped="" ref="0x7f2924bea670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924bea9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x7f2924bdfe50" loc="71:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SECCTRL0" scoped="" ref="0x7f2924bdfe50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bde210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bde3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2924bedd00" loc="41:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2924bedd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924bec0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924bec230"/>
        <function-ref name="request" scoped="" ref="0x7f2924bec3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2924bec550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924bec6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x7f2924be5160" loc="57:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRXDEC" scoped="" ref="0x7f2924be5160"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be54e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x7f2924be5e00" loc="59:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SAES" scoped="" ref="0x7f2924be5e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be41c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x7f2924bcf2f0" loc="100:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PANID" scoped="" ref="0x7f2924bcf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bcf670"/>
        <function-ref name="write" scoped="" ref="0x7f2924bcf800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x7f2924bd0ad0" loc="99:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="IEEEADR" scoped="" ref="0x7f2924bd0ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd0e50"/>
        <function-ref name="write" scoped="" ref="0x7f2924bcf020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x7f2924be76b0" loc="53:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SFLUSHRX" scoped="" ref="0x7f2924be76b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be7a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO_REGISTER" ref="0x7f2924bd02f0" loc="96:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RXFIFO_REGISTER" scoped="" ref="0x7f2924bd02f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd0670"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd0800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SABUF" ref="0x7f2924bcb2f0" loc="106:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SABUF" scoped="" ref="0x7f2924bcb2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bcb670"/>
        <function-ref name="write" scoped="" ref="0x7f2924bcb800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x7f2924bd9e50" loc="81:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AGCCTRL" scoped="" ref="0x7f2924bd9e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd8210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd83a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSTST3" ref="0x7f2924bd5670" loc="89:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSTST3" scoped="" ref="0x7f2924bd5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd59f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd5b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x7f2924beacc0" loc="49:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXON" scoped="" ref="0x7f2924beacc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be90a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x7f2924be99c0" loc="51:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SRFOFF" scoped="" ref="0x7f2924be99c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be9d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x7f2924bdce50" loc="77:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MANFIDH" scoped="" ref="0x7f2924bdce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bda210"/>
        <function-ref name="write" scoped="" ref="0x7f2924bda3a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x7f2924be57b0" loc="58:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="STXENC" scoped="" ref="0x7f2924be57b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x7f2924be5b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x7f2924bda670" loc="78:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FSMTC" scoped="" ref="0x7f2924bda670"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bda9f0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bdab80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TOPTST" ref="0x7f2924bd2e50" loc="94:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TOPTST" scoped="" ref="0x7f2924bd2e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2924bd1610"/>
        <function-ref name="write" scoped="" ref="0x7f2924bd17a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x7f2924bc97a0" loc="112:../../../tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TXFIFO" scoped="" ref="0x7f2924bc97a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x7f2924bc9b20"/>
        <function-ref name="writeDone" scoped="" ref="0x7f2924bc9cb0"/>
        <function-ref name="write" scoped="" ref="0x7f2924bc9e40"/>
        <function-ref name="beginRead" scoped="" ref="0x7f2924bc8020"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924bc81b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f2924b9ba20" loc="46:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f2924b9ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2924b9bda0"/>
        <function-ref name="rand32" scoped="" ref="0x7f2924b9a020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f2924b99920" loc="45:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f2924b99920"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2924b9b560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2924ba3990" loc="44:../../../tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2924ba3990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2924ba3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x7f2924b95a20" loc="48:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f2924b95a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2924b95da0"/>
        <function-ref name="rand32" scoped="" ref="0x7f2924b93020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x7f2924b96940" loc="47:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SeedInit" scoped="" ref="0x7f2924b96940"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2924b95560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2924b96080" loc="46:../../../tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2924b96080"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2924b96400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f2924b9daa0" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2924b9daa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2924b9de20"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2924b97020"/>
        <function-ref name="isState" scoped="" ref="0x7f2924b971b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2924b97340"/>
        <function-ref name="requestState" scoped="" ref="0x7f2924b974d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f2924b97660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2924b7d020" loc="44:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2924b7d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924b7d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b7d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b7d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924b7d850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924b7d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2924b7e220" loc="40:../../../tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2924b7e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924b7e5a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b7e730"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b7e8c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924b7ea50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924b7ebe0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2924b79e60" loc="45:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2924b79e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924b78210"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b783a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b78530"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924b786c0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924b78850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2924b7ca10" loc="40:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2924b7ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924b7cd90"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b79020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b791b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924b79340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924b794d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x7f2924b778f0" loc="47:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Random" scoped="" ref="0x7f2924b778f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x7f2924b77c70"/>
        <function-ref name="rand32" scoped="" ref="0x7f2924b77e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2924b79750" loc="41:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2924b79750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2924b79ad0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2924b76170" loc="48:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924b76170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b764f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2924b76680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2924b76810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x7f2924b78ae0" loc="46:../../../tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2924b78ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2924b78e60"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2924b77020"/>
        <function-ref name="isState" scoped="" ref="0x7f2924b771b0"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2924b77340"/>
        <function-ref name="requestState" scoped="" ref="0x7f2924b774d0"/>
        <function-ref name="forceState" scoped="" ref="0x7f2924b77660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f2924b7a690" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2924b7a690"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2924b7aa10"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2924b7aba0"/>
        <function-ref name="isState" scoped="" ref="0x7f2924b7ad30"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2924b65020"/>
        <function-ref name="requestState" scoped="" ref="0x7f2924b651b0"/>
        <function-ref name="forceState" scoped="" ref="0x7f2924b65340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2924b5e950" loc="47:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2924b5e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b5ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2924b61aa0" loc="42:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2924b61aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b61e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f2924b5e200" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f2924b5e200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b5e580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2924b593f0" loc="49:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2924b593f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b59770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2924b5ab70" loc="45:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2924b5ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2924b59020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2924b5de30" loc="43:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2924b5de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b5a1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2924b59a70" loc="50:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924b59a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b59df0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2924b58020"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2924b581b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x7f2924b5a570" loc="44:../../../tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DuplicateReceive" scoped="" ref="0x7f2924b5a570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b5a8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2924b2b020" loc="75:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2924b2b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b2b3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2924b2b6b0" loc="76:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2924b2b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924b2ba30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b2bbc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b2bd50"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924b2a020"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924b2a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2924b2f8e0" loc="65:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2924b2f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924b2fc60"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b2fdf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b2e020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924b2e1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924b2e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f2924b2ec90" loc="68:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f2924b2ec90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924b2d0a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b2d230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b2d3c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924b2d550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924b2d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2924b2e5e0" loc="66:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2924b2e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b2e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2924b30be0" loc="64:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2924b30be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924b2f020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924b2f1b0"/>
        <function-ref name="request" scoped="" ref="0x7f2924b2f340"/>
        <function-ref name="granted" scoped="" ref="0x7f2924b2f4d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924b2f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f2924b2da50" loc="69:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f2924b2da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b2ddd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f2924b2c170" loc="71:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f2924b2c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2924b2c4f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2924b2c680"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b2c810"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b2c9a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2924b2cb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2924b21d70" loc="58:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2924b21d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924b20180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b20310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b204a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924b20630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924b207c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2924b20b10" loc="59:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2924b20b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b1f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantTask" ref="0x7f2924af2db0" loc="184:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantTask" scoped="" ref="0x7f2924af2db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2924af0180"/>
        <function-ref name="runTask" scoped="" ref="0x7f2924af0310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2924b1f2f0" loc="60:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924b1f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2924b1f670"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2924b1f800"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2924b1f990"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2924b1fb20"/>
        <function-ref name="getPower" scoped="" ref="0x7f2924b1fcb0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2924b1fe40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveSend" ref="0x7f2924b23a20" loc="51:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveSend" scoped="" ref="0x7f2924b23a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924b23da0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b22020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b221b0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924b22340"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924b224d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f2924b1eb70" loc="62:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f2924b1eb70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2924b1d020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2924b1d1b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2924b1d340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2924b1d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2924b1e170" loc="61:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924b1e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b1e4f0"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2924b1e680"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2924b1e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x7f2924b23370" loc="49:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareReceive" scoped="" ref="0x7f2924b23370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b236f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2924b257b0" loc="46:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2924b257b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924b25b30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924b25cc0"/>
        <function-ref name="request" scoped="" ref="0x7f2924b25e50"/>
        <function-ref name="granted" scoped="" ref="0x7f2924b24020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924b241b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x7f2924b244d0" loc="48:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BareSend" scoped="" ref="0x7f2924b244d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924b24850"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b249e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b24b70"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924b24d00"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924b23020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveReceive" ref="0x7f2924b22840" loc="52:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveReceive" scoped="" ref="0x7f2924b22840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924b22bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x7f2924b21020" loc="54:../../../tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="BarePacket" scoped="" ref="0x7f2924b21020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2924b213a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2924b21530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924b216c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924b21850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2924b219e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2924ad1dd0" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2924ad1dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2924ad0180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f2924ad0410" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="CC2420TinyosNetworkC.FcfsResourceQueueC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f2924ad0410"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f2924ad0790"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2924ad0920"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f2924ad0ab0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2924ad0c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2924ac5b80" loc="46:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2924ac5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2924ac4020"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2924ac41b0"/>
        <function-ref name="start" scoped="" ref="0x7f2924ac4340"/>
        <function-ref name="stop" scoped="" ref="0x7f2924ac44d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2924ac3860" loc="51:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2924ac3860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924ac3be0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924ac3d70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924ac2020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924ac21b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924ac2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2924ac2690" loc="52:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2924ac2690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924ac2a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2924ac9ce0" loc="43:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2924ac9ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924ac60a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924ac6230"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924ac63c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924ac6550"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924ac66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2924ac5080" loc="45:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2924ac5080"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2924ac5400"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2924ac5590"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2924ac5720"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2924ac58b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x7f2924ac4800" loc="47:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendState" scoped="" ref="0x7f2924ac4800"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2924ac4b80"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2924ac4d10"/>
        <function-ref name="isState" scoped="" ref="0x7f2924ac3020"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2924ac31b0"/>
        <function-ref name="requestState" scoped="" ref="0x7f2924ac3340"/>
        <function-ref name="forceState" scoped="" ref="0x7f2924ac34d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x7f2924ac2d90" loc="53:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubControl" scoped="" ref="0x7f2924ac2d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2924ac1180"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2924ac1310"/>
        <function-ref name="start" scoped="" ref="0x7f2924ac14a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2924ac1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2924ac6980" loc="44:../../../tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2924ac6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924ac6d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x7f2924abe2d0" loc="41:../../../tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="LowPowerListening" scoped="" ref="0x7f2924abe2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x7f2924abe650"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x7f2924abe7e0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x7f2924abe970"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x7f2924abeb00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x7f2924ac0580" loc="67:../../../tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="State" scoped="" ref="0x7f2924ac0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x7f2924ac0900"/>
        <function-ref name="toIdle" scoped="" ref="0x7f2924ac0a90"/>
        <function-ref name="isState" scoped="" ref="0x7f2924ac0c20"/>
        <function-ref name="isIdle" scoped="" ref="0x7f2924ac0db0"/>
        <function-ref name="requestState" scoped="" ref="0x7f2924abf020"/>
        <function-ref name="forceState" scoped="" ref="0x7f2924abf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2924ab0d70" loc="45:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2924ab0d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924aaf180"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924aaf310"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924aaf4a0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924aaf630"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924aaf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2924ab3350" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2924ab3350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924ab36d0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924ab3860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924ab39f0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924ab3b80"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924ab3d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f2924ab0020" loc="41:../../../tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f2924ab0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2924ab03a0"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2924ab0530"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2924ab06c0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2924ab0850"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2924ab09e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x7f2924aab1c0" loc="44:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x7f2924aab1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2924aab540"/>
        <function-ref name="noAck" scoped="" ref="0x7f2924aab6d0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2924aab860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x7f2924aae410" loc="40:../../../tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PacketLink" scoped="" ref="0x7f2924aae410"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x7f2924aae790"/>
        <function-ref name="setRetries" scoped="" ref="0x7f2924aae920"/>
        <function-ref name="getRetries" scoped="" ref="0x7f2924aaeab0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x7f2924aaec40"/>
        <function-ref name="wasDelivered" scoped="" ref="0x7f2924aaedd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x7f2924a8c690" loc="59:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubReceive" scoped="" ref="0x7f2924a8c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924a8ca10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x7f2924a8d860" loc="58:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubSend" scoped="" ref="0x7f2924a8d860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924a8dbe0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924a8dd70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924a8c020"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924a8c1b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924a8c340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x7f2924a89610" loc="62:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Config" scoped="" ref="0x7f2924a89610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x7f2924a89990"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x7f2924a89b20"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x7f2924a89cb0"/>
        <function-ref name="syncDone" scoped="" ref="0x7f2924a89e40"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x7f2924a88020"/>
        <function-ref name="setShortAddr" scoped="" ref="0x7f2924a881b0"/>
        <function-ref name="setChannel" scoped="" ref="0x7f2924a88340"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x7f2924a884d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x7f2924a88660"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x7f2924a887f0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x7f2924a88980"/>
        <function-ref name="getShortAddr" scoped="" ref="0x7f2924a88b10"/>
        <function-ref name="sync" scoped="" ref="0x7f2924a88ca0"/>
        <function-ref name="getChannel" scoped="" ref="0x7f2924a87020"/>
        <function-ref name="getPanAddr" scoped="" ref="0x7f2924a871b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x7f2924a8e8b0" loc="54:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioBackoff" scoped="" ref="0x7f2924a8e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2924a8ec30"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2924a8edc0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2924a8d020"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2924a8d1b0"/>
        <function-ref name="setCca" scoped="" ref="0x7f2924a8d340"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2924a8d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x7f2924a8fce0" loc="53:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendNotifier" scoped="" ref="0x7f2924a8fce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x7f2924a8e0a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x7f2924a861f0" loc="64:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubBackoff" scoped="" ref="0x7f2924a861f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x7f2924a86570"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x7f2924a86700"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x7f2924a86890"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x7f2924a86a20"/>
        <function-ref name="setCca" scoped="" ref="0x7f2924a86bb0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x7f2924a86d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2924a90a80" loc="52:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2924a90a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2924a90e00"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2924a8f020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924a8f1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924a8f340"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2924a8f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2924a94020" loc="48:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2924a94020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2924a943a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924a94530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924a946c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924a94850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924a949e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x7f2924a92df0" loc="50:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Snoop" scoped="" ref="0x7f2924a92df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924a911c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x7f2924a8cce0" loc="60:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420Packet" scoped="" ref="0x7f2924a8cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x7f2924a8a0a0"/>
        <function-ref name="setNetwork" scoped="" ref="0x7f2924a8a230"/>
        <function-ref name="getRssi" scoped="" ref="0x7f2924a8a3c0"/>
        <function-ref name="getNetwork" scoped="" ref="0x7f2924a8a550"/>
        <function-ref name="getPower" scoped="" ref="0x7f2924a8a6e0"/>
        <function-ref name="getLqi" scoped="" ref="0x7f2924a8a870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x7f2924a874d0" loc="63:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x7f2924a874d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x7f2924a87950"/>
        <function-ref name="changed" scoped="" ref="0x7f2924a87ae0"/>
        <function-ref name="amGroup" scoped="" ref="0x7f2924a87c70"/>
        <function-ref name="setAddress" scoped="" ref="0x7f2924a87e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x7f2924a8ab70" loc="61:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CC2420PacketBody" scoped="" ref="0x7f2924a8ab70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getPayload" scoped="" ref="0x7f2924a89020"/>
        <function-ref name="getHeader" scoped="" ref="0x7f2924a891b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x7f2924a89340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2924a92210" loc="49:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2924a92210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924a92590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f2924a85d30" loc="67:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f2924a85d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2924a840e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2924a84270"/>
        <function-ref name="led1On" scoped="" ref="0x7f2924a84400"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f2924a84590"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2924a84720"/>
        <function-ref name="get" scoped="" ref="0x7f2924a848b0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2924a84a40"/>
        <function-ref name="led2Off" scoped="" ref="0x7f2924a831b0"/>
        <function-ref name="set" scoped="" ref="0x7f2924a84bd0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2924a84d60"/>
        <function-ref name="led2On" scoped="" ref="0x7f2924a83020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2924a91470" loc="51:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2924a91470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2924a917f0"/>
        <function-ref name="source" scoped="" ref="0x7f2924a91980"/>
        <function-ref name="address" scoped="" ref="0x7f2924a91b10"/>
        <function-ref name="destination" scoped="" ref="0x7f2924a91ca0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2924a91e30"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2924a90020"/>
        <function-ref name="type" scoped="" ref="0x7f2924a901b0"/>
        <function-ref name="setType" scoped="" ref="0x7f2924a90340"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2924a904d0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2924a90660"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2924a907f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioResource" ref="0x7f2924a850f0" loc="66:../../../tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RadioResource" scoped="" ref="0x7f2924a850f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924a85470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924a85600"/>
        <function-ref name="request" scoped="" ref="0x7f2924a85790"/>
        <function-ref name="granted" scoped="" ref="0x7f2924a85920"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924a85ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f292496d020" loc="49:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f292496d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f292496d3a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f292496d530"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f292496d6c0"/>
        <function-ref name="cancel" scoped="" ref="0x7f292496d850"/>
        <function-ref name="sendDone" scoped="" ref="0x7f292496d9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f292496dc30" loc="50:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f292496dc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f292496c020"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f292496c1b0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f292496c340"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f292496c4d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f292496c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f292496c8b0" loc="51:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f292496c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f292496cc30"/>
        <function-ref name="source" scoped="" ref="0x7f292496cdc0"/>
        <function-ref name="address" scoped="" ref="0x7f292496b020"/>
        <function-ref name="destination" scoped="" ref="0x7f292496b1b0"/>
        <function-ref name="setSource" scoped="" ref="0x7f292496b340"/>
        <function-ref name="setDestination" scoped="" ref="0x7f292496b4d0"/>
        <function-ref name="type" scoped="" ref="0x7f292496b660"/>
        <function-ref name="setType" scoped="" ref="0x7f292496b7f0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f292496b980"/>
        <function-ref name="setGroup" scoped="" ref="0x7f292496bb10"/>
        <function-ref name="localGroup" scoped="" ref="0x7f292496bca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f292496a020" loc="52:../../../tos/system/AMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f292496a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f292496a3a0"/>
        <function-ref name="noAck" scoped="" ref="0x7f292496a530"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f292496a6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2923a6fbc0" loc="49:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2923a6fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2923a6e020"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2923a6e1b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2923a6e340"/>
        <function-ref name="cancel" scoped="" ref="0x7f2923a6e4d0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2923a6e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2923a6e8b0" loc="50:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2923a6e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2923a6ec30"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2923a6edc0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2923a6d020"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2923a6d1b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f2923a6d340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2923a6d590" loc="51:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2923a6d590"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2923a6d910"/>
        <function-ref name="source" scoped="" ref="0x7f2923a6daa0"/>
        <function-ref name="address" scoped="" ref="0x7f2923a6dc30"/>
        <function-ref name="destination" scoped="" ref="0x7f2923a6ddc0"/>
        <function-ref name="setSource" scoped="" ref="0x7f2923a6c020"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2923a6c1b0"/>
        <function-ref name="type" scoped="" ref="0x7f2923a6c340"/>
        <function-ref name="setType" scoped="" ref="0x7f2923a6c4d0"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2923a6c660"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2923a6c7f0"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2923a6c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x7f2923a6cc10" loc="52:../../../tos/system/DirectAMSenderC.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Acks" scoped="" ref="0x7f2923a6cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x7f2923a6b020"/>
        <function-ref name="noAck" scoped="" ref="0x7f2923a6b1b0"/>
        <function-ref name="wasAcked" scoped="" ref="0x7f2923a6b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x7f2923a62640" loc="44:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2923a62640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2923a629c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2923a62b50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2923a62ce0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2923a62e70"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2923a60030"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x7f2923a602e0" loc="46:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2923a602e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f2923a60660"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2923a607f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2923a60980"/>
        <function-ref name="cancel" scoped="" ref="0x7f2923a60b10"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2923a60ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2923a5f020" loc="47:../../../tos/system/AMQueueEntryP.nc">
      <component-ref qname="SlaveAppC.AMSenderC.SenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2923a5f020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f2923a5f3a0"/>
        <function-ref name="source" scoped="" ref="0x7f2923a5f530"/>
        <function-ref name="address" scoped="" ref="0x7f2923a5f6c0"/>
        <function-ref name="destination" scoped="" ref="0x7f2923a5f850"/>
        <function-ref name="setSource" scoped="" ref="0x7f2923a5f9e0"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2923a5fb70"/>
        <function-ref name="type" scoped="" ref="0x7f2923a5fd00"/>
        <function-ref name="setType" scoped="" ref="0x7f2923a5e020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f2923a5e1b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2923a5e340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f2923a5e4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f29249d4930" loc="43:../../../tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f29249d4930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f29249d4cb0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f29249d4e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f29249d1020"/>
        <function-ref name="cancel" scoped="" ref="0x7f29249d11b0"/>
        <function-ref name="sendDone" scoped="" ref="0x7f29249d1340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x7f2924982400" loc="51:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMSend" scoped="" ref="0x7f2924982400"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f29249827a0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924982930"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924982ac0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924982c50"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924982de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x7f2924984df0" loc="47:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Send" scoped="" ref="0x7f2924984df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x7f29249831c0"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924983350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f29249834e0"/>
        <function-ref name="cancel" scoped="" ref="0x7f2924983670"/>
        <function-ref name="sendDone" scoped="" ref="0x7f2924983800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x7f2924980720" loc="53:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2924980720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2924980aa0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2924980c30"/>
        <function-ref name="getPayload" scoped="" ref="0x7f2924980dc0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f292497f020"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f292497f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBusy" ref="0x7f2924983b80" loc="48:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SendBusy" scoped="" ref="0x7f2924983b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBusy"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="busy" scoped="" ref="0x7f2924982020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x7f292497f480" loc="184:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="errorTask" scoped="" ref="0x7f292497f480"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f292497f800"/>
        <function-ref name="runTask" scoped="" ref="0x7f292497f990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x7f292497fc60" loc="140:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CancelTask" scoped="" ref="0x7f292497fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f292497d020"/>
        <function-ref name="runTask" scoped="" ref="0x7f292497d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x7f2924981060" loc="52:../../../tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2924981060"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f29249813e0"/>
        <function-ref name="source" scoped="" ref="0x7f2924981570"/>
        <function-ref name="address" scoped="" ref="0x7f2924981700"/>
        <function-ref name="destination" scoped="" ref="0x7f2924981890"/>
        <function-ref name="setSource" scoped="" ref="0x7f2924981a20"/>
        <function-ref name="setDestination" scoped="" ref="0x7f2924981bb0"/>
        <function-ref name="type" scoped="" ref="0x7f2924981d40"/>
        <function-ref name="setType" scoped="" ref="0x7f2924980020"/>
        <function-ref name="isForMe" scoped="" ref="0x7f29249801b0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f2924980340"/>
        <function-ref name="localGroup" scoped="" ref="0x7f29249804d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x7f2924960020" loc="46:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Packet" scoped="" ref="0x7f2924960020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29249603a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x7f2924960530"/>
        <function-ref name="getPayload" scoped="" ref="0x7f29249606c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x7f2924960850"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x7f29249609e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x7f2924961910" loc="45:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Receive" scoped="" ref="0x7f2924961910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x7f2924961c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x7f2924960c30" loc="47:../../../tos/system/AMReceiverC.nc">
      <component-ref qname="SlaveAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AMPacket" scoped="" ref="0x7f2924960c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x7f292495f020"/>
        <function-ref name="source" scoped="" ref="0x7f292495f1b0"/>
        <function-ref name="address" scoped="" ref="0x7f292495f340"/>
        <function-ref name="destination" scoped="" ref="0x7f292495f4d0"/>
        <function-ref name="setSource" scoped="" ref="0x7f292495f660"/>
        <function-ref name="setDestination" scoped="" ref="0x7f292495f7f0"/>
        <function-ref name="type" scoped="" ref="0x7f292495f980"/>
        <function-ref name="setType" scoped="" ref="0x7f292495fb10"/>
        <function-ref name="isForMe" scoped="" ref="0x7f292495fca0"/>
        <function-ref name="setGroup" scoped="" ref="0x7f292495fe30"/>
        <function-ref name="localGroup" scoped="" ref="0x7f292495e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f29247ea900" loc="49:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SlaveAppC.Sht11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f29247ea900"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f29247eac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f29247eb240" loc="48:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SlaveAppC.Sht11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f29247eb240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29247ebe30"/>
        <function-ref name="readDone" scoped="" ref="0x7f29247ea300"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f29247edaa0" loc="47:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SlaveAppC.Sht11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f29247edaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f29247ede20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f29247ee310" loc="46:../../../tos/platforms/telosa/chips/sht11/SensirionSht11C.nc">
      <component-ref qname="SlaveAppC.Sht11"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f29247ee310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29247ed020"/>
        <function-ref name="readDone" scoped="" ref="0x7f29247ed4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Hum" ref="0x7f2923a0b020" loc="54:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SlaveAppC.Sht11.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Hum" scoped="" ref="0x7f2923a0b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f2923a0b3a0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f2923a0b530"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f2923a0b6c0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f2923a0b850"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f2923a0b9e0"/>
        <function-ref name="reset" scoped="" ref="0x7f2923a0bb70"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f2923a0bd00"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f2923a09020"/>
        <function-ref name="resetDone" scoped="" ref="0x7f2923a091b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f2923a09340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HumidityMetadata" ref="0x7f2923a10120" loc="48:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SlaveAppC.Sht11.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumidityMetadata" scoped="" ref="0x7f2923a10120"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f2923a104a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x7f2923a10890" loc="49:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SlaveAppC.Sht11.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Humidity" scoped="" ref="0x7f2923a10890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2923a0f4c0"/>
        <function-ref name="readDone" scoped="" ref="0x7f2923a0f940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TemperatureMetadata" ref="0x7f2923a122a0" loc="46:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SlaveAppC.Sht11.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TemperatureMetadata" scoped="" ref="0x7f2923a122a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f2923a12620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempResource" ref="0x7f2923a0e020" loc="51:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SlaveAppC.Sht11.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TempResource" scoped="" ref="0x7f2923a0e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2923a0e3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2923a0e530"/>
        <function-ref name="request" scoped="" ref="0x7f2923a0e6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2923a0e850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2923a0e9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Sht11Temp" ref="0x7f2923a0d9b0" loc="53:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SlaveAppC.Sht11.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Sht11Temp" scoped="" ref="0x7f2923a0d9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f2923a0dd30"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f2923a0c020"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f2923a0c1b0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f2923a0c340"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f2923a0c4d0"/>
        <function-ref name="reset" scoped="" ref="0x7f2923a0c660"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f2923a0c7f0"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f2923a0c980"/>
        <function-ref name="resetDone" scoped="" ref="0x7f2923a0cb10"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f2923a0cca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumResource" ref="0x7f2923a0ecb0" loc="52:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SlaveAppC.Sht11.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HumResource" scoped="" ref="0x7f2923a0ecb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2923a0d0a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2923a0d230"/>
        <function-ref name="request" scoped="" ref="0x7f2923a0d3c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2923a0d550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2923a0d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x7f2923a12a10" loc="47:../../../tos/chips/sht11/SensirionSht11ReaderP.nc">
      <component-ref qname="SlaveAppC.Sht11.SensirionSht11ReaderP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Temperature" scoped="" ref="0x7f2923a12a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2923a11670"/>
        <function-ref name="readDone" scoped="" ref="0x7f2923a11af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f2924908d50" loc="45:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7f2924908d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f2924907100"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f2924907290"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f2924907420"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f29249075b0"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f2924907740"/>
        <function-ref name="reset" scoped="" ref="0x7f29249078d0"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f2924907a60"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f2924907bf0"/>
        <function-ref name="resetDone" scoped="" ref="0x7f2924907d80"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f2924906020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f29249099d0" loc="44:../../../tos/platforms/telosa/chips/sht11/HalSensirionSht11C.nc">
      <component-ref qname="HalSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29249099d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924909d50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924908020"/>
        <function-ref name="request" scoped="" ref="0x7f29249081b0"/>
        <function-ref name="granted" scoped="" ref="0x7f2924908340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29249084d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptDATA" ref="0x7f292488a930" loc="58:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7f292488a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f292488acb0"/>
        <function-ref name="disable" scoped="" ref="0x7f292488ae40"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2924889020"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f29248891b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readSensor" ref="0x7f2924882800" loc="102:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readSensor" scoped="" ref="0x7f2924882800"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2924882b80"/>
        <function-ref name="runTask" scoped="" ref="0x7f2924882d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalStatusDone" ref="0x7f2924882020" loc="103:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="signalStatusDone" scoped="" ref="0x7f2924882020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f29248823a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2924882530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CLOCK" ref="0x7f292488c7a0" loc="57:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CLOCK" scoped="" ref="0x7f292488c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292488cb20"/>
        <function-ref name="isInput" scoped="" ref="0x7f292488ccb0"/>
        <function-ref name="toggle" scoped="" ref="0x7f292488ce40"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292488a020"/>
        <function-ref name="get" scoped="" ref="0x7f292488a1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292488a340"/>
        <function-ref name="set" scoped="" ref="0x7f292488a4d0"/>
        <function-ref name="clr" scoped="" ref="0x7f292488a660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SensirionSht11" ref="0x7f292488e020" loc="54:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SensirionSht11" scoped="" ref="0x7f292488e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SensirionSht11"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="measureHumidityDone" scoped="" ref="0x7f292488e3c0"/>
        <function-ref name="readStatusReg" scoped="" ref="0x7f292488e550"/>
        <function-ref name="measureHumidity" scoped="" ref="0x7f292488e6e0"/>
        <function-ref name="measureTemperature" scoped="" ref="0x7f292488e870"/>
        <function-ref name="writeStatusReg" scoped="" ref="0x7f292488ea00"/>
        <function-ref name="reset" scoped="" ref="0x7f292488eb90"/>
        <function-ref name="writeStatusRegDone" scoped="" ref="0x7f292488ed20"/>
        <function-ref name="readStatusRegDone" scoped="" ref="0x7f292488d020"/>
        <function-ref name="resetDone" scoped="" ref="0x7f292488d1b0"/>
        <function-ref name="measureTemperatureDone" scoped="" ref="0x7f292488d340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f292488d610" loc="56:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f292488d610"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292488d990"/>
        <function-ref name="isInput" scoped="" ref="0x7f292488db20"/>
        <function-ref name="toggle" scoped="" ref="0x7f292488dcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292488de40"/>
        <function-ref name="get" scoped="" ref="0x7f292488c020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292488c1b0"/>
        <function-ref name="set" scoped="" ref="0x7f292488c340"/>
        <function-ref name="clr" scoped="" ref="0x7f292488c4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f29248858d0" loc="62:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f29248858d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f2924885c50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f2924885de0"/>
        <function-ref name="led1On" scoped="" ref="0x7f2924883020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f29248831b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f2924883340"/>
        <function-ref name="get" scoped="" ref="0x7f29248834d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7f2924883660"/>
        <function-ref name="led2On" scoped="" ref="0x7f2924883ca0"/>
        <function-ref name="set" scoped="" ref="0x7f2924883980"/>
        <function-ref name="led2Off" scoped="" ref="0x7f29248837f0"/>
        <function-ref name="led0On" scoped="" ref="0x7f2924883b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f2924889560" loc="60:../../../tos/chips/sht11/SensirionSht11LogicP.nc">
      <component-ref qname="HalSensirionSht11C.SensirionSht11LogicP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f2924889560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2924886a20"/>
        <function-ref name="fired" scoped="" ref="0x7f2924887020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2924887da0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2924887920"/>
        <function-ref name="getdt" scoped="" ref="0x7f29248854a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f2924885020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f29248874a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f29248881b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2924886410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2924888680"/>
        <function-ref name="stop" scoped="" ref="0x7f2924888b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptDATA" ref="0x7f2924878020" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="InterruptDATA" scoped="" ref="0x7f2924878020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f29248783a0"/>
        <function-ref name="disable" scoped="" ref="0x7f2924878530"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f29248786c0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f2924878850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SCK" ref="0x7f292487ab40" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7f292487ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924879020"/>
        <function-ref name="isInput" scoped="" ref="0x7f29248791b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924879340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f29248794d0"/>
        <function-ref name="get" scoped="" ref="0x7f2924879660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29248797f0"/>
        <function-ref name="set" scoped="" ref="0x7f2924879980"/>
        <function-ref name="clr" scoped="" ref="0x7f2924879b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DATA" ref="0x7f292487b830" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f292487b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292487bbb0"/>
        <function-ref name="isInput" scoped="" ref="0x7f292487bd40"/>
        <function-ref name="toggle" scoped="" ref="0x7f292487a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292487a1b0"/>
        <function-ref name="get" scoped="" ref="0x7f292487a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292487a4d0"/>
        <function-ref name="set" scoped="" ref="0x7f292487a660"/>
        <function-ref name="clr" scoped="" ref="0x7f292487a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f292487c9e0" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11C.nc">
      <component-ref qname="HplSensirionSht11C"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f292487c9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f292487cd60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f292487b020"/>
        <function-ref name="request" scoped="" ref="0x7f292487b1b0"/>
        <function-ref name="granted" scoped="" ref="0x7f292487b340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292487b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f2924875de0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f2924875de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924874180"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924874310"/>
        <function-ref name="setResistor" scoped="" ref="0x7f29248744a0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f29248721b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f29248747c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924874950"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2924874ae0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2924874c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924874e00"/>
        <function-ref name="get" scoped="" ref="0x7f2924873020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f29248731b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2924873340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f29248734d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2924873760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29248738f0"/>
        <function-ref name="set" scoped="" ref="0x7f2924873a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2924873c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2924873da0"/>
        <function-ref name="clr" scoped="" ref="0x7f2924874630"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2924872020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2924877b70" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.DATAM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2924877b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f2924875020"/>
        <function-ref name="isInput" scoped="" ref="0x7f29248751b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924875340"/>
        <function-ref name="isOutput" scoped="" ref="0x7f29248754d0"/>
        <function-ref name="get" scoped="" ref="0x7f2924875660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29248757f0"/>
        <function-ref name="set" scoped="" ref="0x7f2924875980"/>
        <function-ref name="clr" scoped="" ref="0x7f2924875b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f292486f2f0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f292486f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292486f670"/>
        <function-ref name="isInput" scoped="" ref="0x7f292486f800"/>
        <function-ref name="setResistor" scoped="" ref="0x7f292486f990"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f292486d660"/>
        <function-ref name="toggle" scoped="" ref="0x7f292486fcb0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292486fe40"/>
        <function-ref name="getResistor" scoped="" ref="0x7f292486e020"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f292486e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292486e340"/>
        <function-ref name="get" scoped="" ref="0x7f292486e4d0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f292486e660"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f292486e7f0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f292486e980"/>
        <function-ref name="getRaw" scoped="" ref="0x7f292486ec10"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f292486eda0"/>
        <function-ref name="set" scoped="" ref="0x7f292486d020"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f292486d1b0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f292486d340"/>
        <function-ref name="clr" scoped="" ref="0x7f292486fb20"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f292486d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f2924870140" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.SCKM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f2924870140"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29248704c0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924870650"/>
        <function-ref name="toggle" scoped="" ref="0x7f29248707e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924870970"/>
        <function-ref name="get" scoped="" ref="0x7f2924870b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924870c90"/>
        <function-ref name="set" scoped="" ref="0x7f2924870e20"/>
        <function-ref name="clr" scoped="" ref="0x7f292486f020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplGeneralIO" ref="0x7f292486a7a0" loc="44:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplGeneralIO" scoped="" ref="0x7f292486a7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292486ab20"/>
        <function-ref name="isInput" scoped="" ref="0x7f292486acb0"/>
        <function-ref name="setResistor" scoped="" ref="0x7f292486ae40"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2924868a80"/>
        <function-ref name="toggle" scoped="" ref="0x7f29248691b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924869340"/>
        <function-ref name="getResistor" scoped="" ref="0x7f29248694d0"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2924869660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29248697f0"/>
        <function-ref name="get" scoped="" ref="0x7f2924869980"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2924869b10"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2924869ca0"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2924869e30"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2924868120"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29248682b0"/>
        <function-ref name="set" scoped="" ref="0x7f2924868440"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f29248685d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2924868760"/>
        <function-ref name="clr" scoped="" ref="0x7f2924869020"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f29248688f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x7f292486b630" loc="43:../../../tos/chips/msp430/pins/Msp430GpioC.nc">
      <component-ref qname="HplSensirionSht11C.PWRM"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="GeneralIO" scoped="" ref="0x7f292486b630"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292486b9b0"/>
        <function-ref name="isInput" scoped="" ref="0x7f292486bb40"/>
        <function-ref name="toggle" scoped="" ref="0x7f292486bcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292486be60"/>
        <function-ref name="get" scoped="" ref="0x7f292486a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292486a1b0"/>
        <function-ref name="set" scoped="" ref="0x7f292486a340"/>
        <function-ref name="clr" scoped="" ref="0x7f292486a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x7f2924865830" loc="43:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2924865830"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2924865bb0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2924865d40"/>
        <function-ref name="start" scoped="" ref="0x7f2924862020"/>
        <function-ref name="stop" scoped="" ref="0x7f29248621b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f2924859ba0" loc="50:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7f2924859ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2924858020"/>
        <function-ref name="runTask" scoped="" ref="0x7f29248581b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x7f292485a020" loc="47:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SCK" scoped="" ref="0x7f292485a020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292485a3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f292485a530"/>
        <function-ref name="toggle" scoped="" ref="0x7f292485a6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292485a850"/>
        <function-ref name="get" scoped="" ref="0x7f292485a9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292485ab70"/>
        <function-ref name="set" scoped="" ref="0x7f292485ad00"/>
        <function-ref name="clr" scoped="" ref="0x7f2924859020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PWR" ref="0x7f292485d990" loc="45:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PWR" scoped="" ref="0x7f292485d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292485dd10"/>
        <function-ref name="isInput" scoped="" ref="0x7f292485c020"/>
        <function-ref name="toggle" scoped="" ref="0x7f292485c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292485c340"/>
        <function-ref name="get" scoped="" ref="0x7f292485c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292485c660"/>
        <function-ref name="set" scoped="" ref="0x7f292485c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7f292485c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DATA" ref="0x7f292485cce0" loc="46:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DATA" scoped="" ref="0x7f292485cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292485b0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f292485b230"/>
        <function-ref name="toggle" scoped="" ref="0x7f292485b3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292485b550"/>
        <function-ref name="get" scoped="" ref="0x7f292485b6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292485b870"/>
        <function-ref name="set" scoped="" ref="0x7f292485ba00"/>
        <function-ref name="clr" scoped="" ref="0x7f292485bb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7f29248625e0" loc="44:../../../tos/platforms/telosa/chips/sht11/HplSensirionSht11P.nc">
      <component-ref qname="HplSensirionSht11P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f29248625e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f292485ea80"/>
        <function-ref name="fired" scoped="" ref="0x7f2924860090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2924860e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2924860990"/>
        <function-ref name="getdt" scoped="" ref="0x7f292485d4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f292485d020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2924860510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2924861200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f292485e470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f29248616d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2924861ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f292484ec10" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HplSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f292484ec10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2924849110"/>
        <function-ref name="fired" scoped="" ref="0x7f292484b6a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f292484a4a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f292484a020"/>
        <function-ref name="getdt" scoped="" ref="0x7f2924849a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f2924849590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f292484bb20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f292484d860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f292484aab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f292484dd30"/>
        <function-ref name="stop" scoped="" ref="0x7f292484b220"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplInterrupt" ref="0x7f29248467a0" loc="52:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplInterrupt" scoped="" ref="0x7f29248467a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2924846b20"/>
        <function-ref name="fired" scoped="" ref="0x7f2924846cb0"/>
        <function-ref name="disable" scoped="" ref="0x7f2924846e40"/>
        <function-ref name="edge" scoped="" ref="0x7f2924844020"/>
        <function-ref name="edgeFalling" scoped="" ref="0x7f29248441b0"/>
        <function-ref name="enable" scoped="" ref="0x7f2924844340"/>
        <function-ref name="edgeRising" scoped="" ref="0x7f29248444d0"/>
        <function-ref name="getValue" scoped="" ref="0x7f2924844660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x7f2924847b60" loc="51:../../../tos/chips/msp430/x1x2/pins/Msp430InterruptC.nc">
      <component-ref qname="HplSensirionSht11C.InterruptDATAC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Interrupt" scoped="" ref="0x7f2924847b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x7f2924846020"/>
        <function-ref name="disable" scoped="" ref="0x7f29248461b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x7f2924846340"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x7f29248464d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2924840020" loc="59:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2924840020"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f29248403c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2924840550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f292483fcf0" loc="64:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f292483fcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f292483e0e0"/>
        <function-ref name="configure" scoped="" ref="0x7f292483e270"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f29248407a0" loc="60:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f29248407a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924840b20"/>
        <function-ref name="requested" scoped="" ref="0x7f2924840cb0"/>
        <function-ref name="granted" scoped="" ref="0x7f2924840e40"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292483f020"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f292483f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f29248411b0" loc="58:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29248411b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924841550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29248416e0"/>
        <function-ref name="request" scoped="" ref="0x7f2924841870"/>
        <function-ref name="granted" scoped="" ref="0x7f2924841a00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924841b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f292483e4c0" loc="65:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f292483e4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f292483e840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f292483f400" loc="61:../../../tos/system/FcfsArbiterC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f292483f400"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f292483f780"/>
        <function-ref name="userId" scoped="" ref="0x7f292483f910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2923975810" loc="44:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2923975810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f2923975b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x7f2923975e20" loc="45:../../../tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="FcfsQueue" scoped="" ref="0x7f2923975e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f29239741c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f2923974350"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f29239744e0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f2923974670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f2923972d80" loc="99:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f2923972d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f2923971180"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2923971310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f292396e190" loc="105:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f292396e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f292396e530"/>
        <function-ref name="configure" scoped="" ref="0x7f292396e6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f292396e950" loc="106:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f292396e950"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f292396ecd0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f292396ee60"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f292396d020"/>
        <function-ref name="dequeue" scoped="" ref="0x7f292396d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x7f2923971560" loc="100:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2923971560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29239718e0"/>
        <function-ref name="requested" scoped="" ref="0x7f2923971a70"/>
        <function-ref name="granted" scoped="" ref="0x7f2923971c00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2923971d90"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2923970020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7f292396d400" loc="107:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Leds" scoped="" ref="0x7f292396d400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7f292396d780"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7f292396d910"/>
        <function-ref name="led1On" scoped="" ref="0x7f292396daa0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7f292396dc30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7f292396ddc0"/>
        <function-ref name="get" scoped="" ref="0x7f292396c020"/>
        <function-ref name="led1Off" scoped="" ref="0x7f292396c1b0"/>
        <function-ref name="led0On" scoped="" ref="0x7f292396c7f0"/>
        <function-ref name="set" scoped="" ref="0x7f292396c4d0"/>
        <function-ref name="led2On" scoped="" ref="0x7f292396c340"/>
        <function-ref name="led2Off" scoped="" ref="0x7f292396c660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2923972020" loc="98:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2923972020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29239723c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2923972550"/>
        <function-ref name="request" scoped="" ref="0x7f29239726e0"/>
        <function-ref name="granted" scoped="" ref="0x7f2923972870"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2923972a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwnerInfo" ref="0x7f2923970a30" loc="104:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwnerInfo" scoped="" ref="0x7f2923970a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2923970db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f2923970270" loc="101:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2923970270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f29239705f0"/>
        <function-ref name="userId" scoped="" ref="0x7f2923970780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f292396cac0" loc="155:../../../tos/system/ArbiterP.nc">
      <component-ref qname="HplSensirionSht11C.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f292396cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f292396ce40"/>
        <function-ref name="runTask" scoped="" ref="0x7f292396b020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f292480e020" loc="69:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f292480e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f292480e3a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f292480e530"/>
        <function-ref name="start" scoped="" ref="0x7f292480e6c0"/>
        <function-ref name="stop" scoped="" ref="0x7f292480e850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f292480eaa0" loc="71:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f292480eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f292480ee20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f292480d0e0" loc="72:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f292480d0e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f292480d460"/>
        <function-ref name="requested" scoped="" ref="0x7f292480d5f0"/>
        <function-ref name="granted" scoped="" ref="0x7f292480d780"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292480d910"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f292480daa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f292480dcf0" loc="73:../../../tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f292480dcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f292480c0a0"/>
        <function-ref name="userId" scoped="" ref="0x7f292480c230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x7f2923936780" loc="61:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SplitControl" scoped="" ref="0x7f2923936780"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2923936b00"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2923936c90"/>
        <function-ref name="start" scoped="" ref="0x7f2923936e20"/>
        <function-ref name="stop" scoped="" ref="0x7f2923935020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x7f2923935270" loc="63:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="PowerDownCleanup" scoped="" ref="0x7f2923935270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x7f29239355f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x7f2923934d70" loc="78:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="stopTask" scoped="" ref="0x7f2923934d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2923933180"/>
        <function-ref name="runTask" scoped="" ref="0x7f2923933310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x7f2923935840" loc="64:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x7f2923935840"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2923935bc0"/>
        <function-ref name="requested" scoped="" ref="0x7f2923935d50"/>
        <function-ref name="granted" scoped="" ref="0x7f2923934020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29239341b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f2923934340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x7f29239335e0" loc="73:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="startTask" scoped="" ref="0x7f29239335e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2923933960"/>
        <function-ref name="runTask" scoped="" ref="0x7f2923933af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x7f2923936020" loc="60:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="StdControl" scoped="" ref="0x7f2923936020"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f29239363a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2923936530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x7f2923934590" loc="65:../../../tos/lib/power/PowerManagerP.nc">
      <component-ref qname="HplSensirionSht11C.SplitControlPowerManagerC.PowerManager"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f2923934590"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2923934910"/>
        <function-ref name="userId" scoped="" ref="0x7f2923934aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f29247fe240" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="HalSensirionSht11C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f29247fe240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f29247fb6e0"/>
        <function-ref name="fired" scoped="" ref="0x7f29247fdc90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f29247fca70"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f29247fc5f0"/>
        <function-ref name="getdt" scoped="" ref="0x7f29247f9020"/>
        <function-ref name="gett0" scoped="" ref="0x7f29247fbb60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f29247fc170"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f29247fee30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f29247fb0d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f29247fd340"/>
        <function-ref name="stop" scoped="" ref="0x7f29247fd810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f29247e7db0" loc="42:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SlaveAppC.S10871"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f29247e7db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29243df9d0"/>
        <function-ref name="readDone" scoped="" ref="0x7f29243dfe50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f29243d6560" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SlaveAppC.S10871"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f29243d6560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f29243d3020"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f29243d41b0"/>
        <function-ref name="read" scoped="" ref="0x7f29243d4b20"/>
        <function-ref name="readDone" scoped="" ref="0x7f29243d3ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f29247e7680" loc="41:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrC.nc">
      <component-ref qname="SlaveAppC.S10871"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f29247e7680"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f29247e7a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f292391c460" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f292391c460"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f292391b090"/>
        <function-ref name="readDone" scoped="" ref="0x7f292391b510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f292391bc70" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f292391bc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f292391a8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResourceReadNow" ref="0x7f29247a86e0" loc="46:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SubResourceReadNow" scoped="" ref="0x7f29247a86e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29247a8a60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29247a8bf0"/>
        <function-ref name="request" scoped="" ref="0x7f29247a8d80"/>
        <function-ref name="granted" scoped="" ref="0x7f29247a7020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29247a71b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f29247b2020" loc="38:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f29247b2020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29247b2c10"/>
        <function-ref name="readDone" scoped="" ref="0x7f29247b10d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x7f29247af1d0" loc="39:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadNow" scoped="" ref="0x7f29247af1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29247afe00"/>
        <function-ref name="readDone" scoped="" ref="0x7f29247ae340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceReadNow" ref="0x7f29247aa020" loc="40:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceReadNow" scoped="" ref="0x7f29247aa020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29247aa3a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29247aa530"/>
        <function-ref name="request" scoped="" ref="0x7f29247aa6c0"/>
        <function-ref name="granted" scoped="" ref="0x7f29247aa850"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29247aa9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f29247a7d40" loc="48:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f29247a7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29247a59c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f29247a3450" loc="49:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f29247a3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f29247a37d0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f29247a3960"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f29247a3af0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f29247a3c80"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f29247a3e10"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f29247a2020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f29247a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceRead" ref="0x7f29247a9390" loc="44:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRead" scoped="" ref="0x7f29247a9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29247a9710"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29247a98a0"/>
        <function-ref name="request" scoped="" ref="0x7f29247a9a30"/>
        <function-ref name="granted" scoped="" ref="0x7f29247a9bc0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29247a9d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readDone" ref="0x7f292476fe40" loc="136:../../../tos/chips/msp430/adc12/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readDone" scoped="" ref="0x7f292476fe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f292476e1e0"/>
        <function-ref name="runTask" scoped="" ref="0x7f292476e370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f292390d270" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f292390d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f292390d5f0"/>
        <function-ref name="configure" scoped="" ref="0x7f292390d780"/>
        <function-ref name="dataReady" scoped="" ref="0x7f292390d910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f292390e270" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f292390e270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f292390e5f0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f292390e780"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f292390e910"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f292390eaa0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f292390ec30"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f292390edc0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f292390d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f292390db60" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f292390db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f292390b020"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f292390b1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f292390b5e0" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f292390b5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f292390a240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f292390f550" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f292390f550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f292390f8d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f292390fa60"/>
        <function-ref name="request" scoped="" ref="0x7f292390fbf0"/>
        <function-ref name="granted" scoped="" ref="0x7f292390fd80"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292390e020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f2924732960" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f2924732960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f2924732ce0"/>
        <function-ref name="configure" scoped="" ref="0x7f2924732e70"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2924731030"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f292472e1d0" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f292472e1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f292472e550"/>
        <function-ref name="stop" scoped="" ref="0x7f292472e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f2924731920" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f2924731920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f2924731ca0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f2924731e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f29247331d0" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f29247331d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f2924733550"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f29247336e0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f2924733870"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f2924733a00"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f2924733b90"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f2924733d20"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f2924732020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f2924737cc0" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12P.nc">
      <component-ref qname="Msp430Adc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f2924737cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29247340a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924734230"/>
        <function-ref name="request" scoped="" ref="0x7f29247343c0"/>
        <function-ref name="granted" scoped="" ref="0x7f2924734550"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29247346e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiChannel" ref="0x7f2924728af0" loc="52:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="MultiChannel" scoped="" ref="0x7f2924728af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f2924728e70"/>
        <function-ref name="configure" scoped="" ref="0x7f2924726030"/>
        <function-ref name="dataReady" scoped="" ref="0x7f29247261c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f29247160d0" loc="58:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f29247160d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f2924716450"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f29247165e0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f2924716770"/>
        <function-ref name="isBusy" scoped="" ref="0x7f2924716900"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f2924716a90"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f2924716c20"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f2924716db0"/>
        <function-ref name="startConversion" scoped="" ref="0x7f2924723020"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f29247231b0"/>
        <function-ref name="getMem" scoped="" ref="0x7f2924723340"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f29247234d0"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f2924723660"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f29247237f0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f2924723a80"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f2924723c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A3" ref="0x7f2924708520" loc="67:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="A3" scoped="" ref="0x7f2924708520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29247088a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924708a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2924708bc0"/>
        <function-ref name="clr" scoped="" ref="0x7f2924706980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924707020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f29247071b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2924707340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f29247074d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924707660"/>
        <function-ref name="get" scoped="" ref="0x7f29247077f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2924707980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2924707b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2924707ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2924706020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29247061b0"/>
        <function-ref name="set" scoped="" ref="0x7f2924706340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f29247064d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2924708d50"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2924706660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f29247067f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA1" ref="0x7f2924711e60" loc="63:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA1" scoped="" ref="0x7f2924711e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2924710210"/>
        <function-ref name="setEvent" scoped="" ref="0x7f29247103a0"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f2924710530"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f29247106c0"/>
        <function-ref name="fired" scoped="" ref="0x7f2924710850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A4" ref="0x7f2924706cf0" loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="A4" scoped="" ref="0x7f2924706cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29247050a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924705230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f29247053c0"/>
        <function-ref name="clr" scoped="" ref="0x7f29247031b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f29247056e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924705870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2924705a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2924705b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924705d20"/>
        <function-ref name="get" scoped="" ref="0x7f2924704020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f29247041b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2924704340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f29247044d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2924704760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29247048f0"/>
        <function-ref name="set" scoped="" ref="0x7f2924704a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2924704c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2924705550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2924704da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2924703020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA0" ref="0x7f2924715880" loc="60:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA0" scoped="" ref="0x7f2924715880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2924715c00"/>
        <function-ref name="getControl" scoped="" ref="0x7f2924715d90"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2924713020"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f29247131b0"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2924713340"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29247134d0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2924713660"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f29247137f0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2924713980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DMAExtension" ref="0x7f2924725910" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DMAExtension" scoped="" ref="0x7f2924725910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x7f2924725c90"/>
        <function-ref name="stop" scoped="" ref="0x7f2924725e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A7" ref="0x7f29246fe520" loc="72:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="A7" scoped="" ref="0x7f29246fe520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29246fe8a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f29246fea30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f29246febc0"/>
        <function-ref name="clr" scoped="" ref="0x7f29246fc980"/>
        <function-ref name="toggle" scoped="" ref="0x7f29246fd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f29246fd1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f29246fd340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f29246fd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f29246fd660"/>
        <function-ref name="get" scoped="" ref="0x7f29246fd7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f29246fd980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f29246fdb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f29246fdca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f29246fc020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29246fc1b0"/>
        <function-ref name="set" scoped="" ref="0x7f29246fc340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f29246fc4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f29246fed50"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f29246fc660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f29246fc7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Overflow" ref="0x7f2924726ab0" loc="53:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Overflow" scoped="" ref="0x7f2924726ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f2924726e30"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f2924725020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A1" ref="0x7f292470d520" loc="65:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="A1" scoped="" ref="0x7f292470d520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292470d8a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f292470da30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f292470dbc0"/>
        <function-ref name="clr" scoped="" ref="0x7f292470b980"/>
        <function-ref name="toggle" scoped="" ref="0x7f292470c020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292470c1b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f292470c340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f292470c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292470c660"/>
        <function-ref name="get" scoped="" ref="0x7f292470c7f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f292470c980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f292470cb10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f292470cca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f292470b020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f292470b1b0"/>
        <function-ref name="set" scoped="" ref="0x7f292470b340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f292470b4d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f292470dd50"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f292470b660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f292470b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f292472a660" loc="50:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f292472a660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f292472a9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerA" ref="0x7f2924722020" loc="59:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="TimerA" scoped="" ref="0x7f2924722020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29247223a0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2924722530"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f29247226c0"/>
        <function-ref name="get" scoped="" ref="0x7f2924722850"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29247229e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2924722b70"/>
        <function-ref name="getMode" scoped="" ref="0x7f2924722d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2924715020"/>
        <function-ref name="overflow" scoped="" ref="0x7f29247151b0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2924715340"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f29247154d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ADCArbiterInfo" ref="0x7f2924724280" loc="57:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ADCArbiterInfo" scoped="" ref="0x7f2924724280"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f2924724600"/>
        <function-ref name="userId" scoped="" ref="0x7f2924724790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A5" ref="0x7f2924703520" loc="69:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="A5" scoped="" ref="0x7f2924703520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29247038a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924703a30"/>
        <function-ref name="setResistor" scoped="" ref="0x7f2924703bc0"/>
        <function-ref name="clr" scoped="" ref="0x7f2924701980"/>
        <function-ref name="toggle" scoped="" ref="0x7f2924702020"/>
        <function-ref name="isOutput" scoped="" ref="0x7f29247021b0"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2924702340"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f29247024d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924702660"/>
        <function-ref name="get" scoped="" ref="0x7f29247027f0"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f2924702980"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2924702b10"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f2924702ca0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2924701020"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29247011b0"/>
        <function-ref name="set" scoped="" ref="0x7f2924701340"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f29247014d0"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2924703d50"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2924701660"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f29247017f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlA1" ref="0x7f2924713d30" loc="61:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ControlA1" scoped="" ref="0x7f2924713d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f29247120e0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2924712270"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2924712400"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2924712590"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f2924712720"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f29247128b0"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f2924712a40"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2924712bd0"/>
        <function-ref name="setControl" scoped="" ref="0x7f2924712d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SingleChannel" ref="0x7f2924729370" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f2924729370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f29247296f0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f2924729880"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f2924729a10"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f2924729ba0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f2924729d30"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f2924728020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f29247281b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CompareA0" ref="0x7f2924711120" loc="62:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="CompareA0" scoped="" ref="0x7f2924711120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f29247114a0"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2924711630"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29247117c0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2924711950"/>
        <function-ref name="fired" scoped="" ref="0x7f2924711ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A2" ref="0x7f292470bcf0" loc="66:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="A2" scoped="" ref="0x7f292470bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292470a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f292470a230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f292470a3c0"/>
        <function-ref name="clr" scoped="" ref="0x7f29247081b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f292470a6e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292470a870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f292470aa00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f292470ab90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292470ad20"/>
        <function-ref name="get" scoped="" ref="0x7f2924709020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f29247091b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f2924709340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f29247094d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f2924709760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29247098f0"/>
        <function-ref name="set" scoped="" ref="0x7f2924709a80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f2924709c10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f292470a550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f2924709da0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f2924708020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A6" ref="0x7f2924701cf0" loc="71:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="A6" scoped="" ref="0x7f2924701cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f29247000a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f2924700230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f29247003c0"/>
        <function-ref name="clr" scoped="" ref="0x7f29246fe1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f29247006e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f2924700870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f2924700a00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f2924700b90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f2924700d20"/>
        <function-ref name="get" scoped="" ref="0x7f29246ff020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f29246ff1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f29246ff340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f29246ff4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f29246ff760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f29246ff8f0"/>
        <function-ref name="set" scoped="" ref="0x7f29246ffa80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f29246ffc10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f2924700550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f29246ffda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f29246fe020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="A0" ref="0x7f2924710bc0" loc="64:../../../tos/chips/msp430/adc12/Msp430Adc12ImplP.nc">
      <component-ref qname="Msp430Adc12ImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="A0" scoped="" ref="0x7f2924710bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7f292470f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7f292470f230"/>
        <function-ref name="setResistor" scoped="" ref="0x7f292470f3c0"/>
        <function-ref name="clr" scoped="" ref="0x7f292470d1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7f292470f6e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7f292470f870"/>
        <function-ref name="getResistor" scoped="" ref="0x7f292470fa00"/>
        <function-ref name="setDriveStrength" scoped="" ref="0x7f292470fb90"/>
        <function-ref name="makeOutput" scoped="" ref="0x7f292470fd20"/>
        <function-ref name="get" scoped="" ref="0x7f292470e020"/>
        <function-ref name="getDriveStrength" scoped="" ref="0x7f292470e1b0"/>
        <function-ref name="selectIOFunc" scoped="" ref="0x7f292470e340"/>
        <function-ref name="resistorPullDown" scoped="" ref="0x7f292470e4d0"/>
        <function-ref name="getRaw" scoped="" ref="0x7f292470e760"/>
        <function-ref name="resistorOff" scoped="" ref="0x7f292470e8f0"/>
        <function-ref name="set" scoped="" ref="0x7f292470ea80"/>
        <function-ref name="selectModuleFunc" scoped="" ref="0x7f292470ec10"/>
        <function-ref name="resistorPullUp" scoped="" ref="0x7f292470f550"/>
        <function-ref name="isIOFunc" scoped="" ref="0x7f292470eda0"/>
        <function-ref name="isModuleFunc" scoped="" ref="0x7f292470d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAdc12" ref="0x7f292463d2b0" loc="59:../../../tos/chips/msp430/adc12/HplAdc12P.nc">
      <component-ref qname="HplAdc12P"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f292463d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f292463d630"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f292463d7c0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f292463d950"/>
        <function-ref name="isBusy" scoped="" ref="0x7f292463dae0"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f292463dc70"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f292463de00"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f292463c020"/>
        <function-ref name="startConversion" scoped="" ref="0x7f292463c1b0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f292463c340"/>
        <function-ref name="getMem" scoped="" ref="0x7f292463c4d0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f292463c660"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f292463c7f0"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f292463c980"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f292463cc10"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f292463cda0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f29245ab3a0" loc="86:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f29245ab3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f29245ab740"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f29245ab8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f29245aa570" loc="89:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29245aa570"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f29245aa910"/>
        <function-ref name="configure" scoped="" ref="0x7f29245aaaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f29245ad520" loc="85:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29245ad520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29245ad8c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29245ada50"/>
        <function-ref name="request" scoped="" ref="0x7f29245adbe0"/>
        <function-ref name="granted" scoped="" ref="0x7f29245add70"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29245ab020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f29245abb20" loc="87:../../../tos/system/SimpleRoundRobinArbiterC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f29245abb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f29245aa020"/>
        <function-ref name="userId" scoped="" ref="0x7f29245aa1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f29238e6620" loc="44:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f29238e6620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f29238e69a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x7f29238e6c30" loc="45:../../../tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RoundRobinQueue" scoped="" ref="0x7f29238e6c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f29238e5020"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f29238e51b0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f29238e5340"/>
        <function-ref name="dequeue" scoped="" ref="0x7f29238e54d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x7f29238e29e0" loc="52:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceRequested" scoped="" ref="0x7f29238e29e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x7f29238e2d80"/>
        <function-ref name="immediateRequested" scoped="" ref="0x7f29238e1020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x7f29238e1b60" loc="56:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ResourceConfigure" scoped="" ref="0x7f29238e1b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x7f29238e0020"/>
        <function-ref name="configure" scoped="" ref="0x7f29238e01b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x7f29238e0440" loc="57:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Queue" scoped="" ref="0x7f29238e0440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x7f29238e07c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x7f29238e0950"/>
        <function-ref name="isEnqueued" scoped="" ref="0x7f29238e0ae0"/>
        <function-ref name="dequeue" scoped="" ref="0x7f29238e0c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f29238e4b90" loc="51:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29238e4b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29238e2020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29238e21b0"/>
        <function-ref name="request" scoped="" ref="0x7f29238e2340"/>
        <function-ref name="granted" scoped="" ref="0x7f29238e24d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29238e2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x7f29238e1270" loc="53:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ArbiterInfo" scoped="" ref="0x7f29238e1270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x7f29238e15f0"/>
        <function-ref name="userId" scoped="" ref="0x7f29238e1780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x7f29238df020" loc="68:../../../tos/system/SimpleArbiterP.nc">
      <component-ref qname="Msp430Adc12P.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="grantedTask" scoped="" ref="0x7f29238df020"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f29238df3a0"/>
        <function-ref name="runTask" scoped="" ref="0x7f29238df530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f29245861d0" loc="55:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f29245861d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f2924586e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f292458dad0" loc="54:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f292458dad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f292458de50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924587020"/>
        <function-ref name="request" scoped="" ref="0x7f29245871b0"/>
        <function-ref name="granted" scoped="" ref="0x7f2924587340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29245874d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f292458e6b0" loc="52:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterP.nc">
      <component-ref qname="Msp430RefVoltArbiterP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f292458e6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f292458ea30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f292458ebc0"/>
        <function-ref name="request" scoped="" ref="0x7f292458ed50"/>
        <function-ref name="granted" scoped="" ref="0x7f292458d020"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292458d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAdc12" ref="0x7f29245804e0" loc="43:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="HplAdc12" scoped="" ref="0x7f29245804e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAdc12"/>
      </instance>
      <interface-functions>
        <function-ref name="getCtl0" scoped="" ref="0x7f2924580860"/>
        <function-ref name="getMCtl" scoped="" ref="0x7f29245809f0"/>
        <function-ref name="resetIFGs" scoped="" ref="0x7f2924580b80"/>
        <function-ref name="isBusy" scoped="" ref="0x7f2924580d10"/>
        <function-ref name="conversionDone" scoped="" ref="0x7f292457f020"/>
        <function-ref name="getCtl1" scoped="" ref="0x7f292457f1b0"/>
        <function-ref name="setMCtl" scoped="" ref="0x7f292457f340"/>
        <function-ref name="startConversion" scoped="" ref="0x7f292457f4d0"/>
        <function-ref name="setCtl0" scoped="" ref="0x7f292457f660"/>
        <function-ref name="getMem" scoped="" ref="0x7f292457f7f0"/>
        <function-ref name="setIEFlags" scoped="" ref="0x7f292457f980"/>
        <function-ref name="getIEFlags" scoped="" ref="0x7f292457fb10"/>
        <function-ref name="stopConversion" scoped="" ref="0x7f292457fca0"/>
        <function-ref name="enableConversion" scoped="" ref="0x7f292457e020"/>
        <function-ref name="setCtl1" scoped="" ref="0x7f292457e1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffTimer" ref="0x7f2924579bf0" loc="45:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffTimer" scoped="" ref="0x7f2924579bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2924574110"/>
        <function-ref name="fired" scoped="" ref="0x7f29245776a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f29245764a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f2924576020"/>
        <function-ref name="getdt" scoped="" ref="0x7f2924574a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f2924574590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2924577b20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2924578860"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f2924576ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2924578d30"/>
        <function-ref name="stop" scoped="" ref="0x7f2924577220"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_2_5V" ref="0x7f29245818e0" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f29245818e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2924581c60"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2924581df0"/>
        <function-ref name="start" scoped="" ref="0x7f2924580020"/>
        <function-ref name="stop" scoped="" ref="0x7f29245801b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOffSettleTimer" ref="0x7f2924573130" loc="46:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOffSettleTimer" scoped="" ref="0x7f2924573130"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f292456f630"/>
        <function-ref name="fired" scoped="" ref="0x7f2924572b70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f2924571920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f29245714a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f292456e020"/>
        <function-ref name="gett0" scoped="" ref="0x7f292456fab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2924571020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f2924573d20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f292456f020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f2924572220"/>
        <function-ref name="stop" scoped="" ref="0x7f29245726f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RefVolt_1_5V" ref="0x7f2924584cc0" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f2924584cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f29245810a0"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2924581230"/>
        <function-ref name="start" scoped="" ref="0x7f29245813c0"/>
        <function-ref name="stop" scoped="" ref="0x7f2924581550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SwitchOnTimer" ref="0x7f292457e670" loc="44:../../../tos/chips/msp430/adc12/Msp430RefVoltGeneratorP.nc">
      <component-ref qname="Msp430RefVoltGeneratorP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SwitchOnTimer" scoped="" ref="0x7f292457e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f292457bc40"/>
        <function-ref name="fired" scoped="" ref="0x7f292457c1e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f292457b020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f292457cae0"/>
        <function-ref name="getdt" scoped="" ref="0x7f2924579590"/>
        <function-ref name="gett0" scoped="" ref="0x7f2924579110"/>
        <function-ref name="isRunning" scoped="" ref="0x7f292457c660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f292457d390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f292457b630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f292457d860"/>
        <function-ref name="stop" scoped="" ref="0x7f292457dd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x7f2924520b90" loc="39:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Config" scoped="" ref="0x7f2924520b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f292451e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_2_5V" ref="0x7f29245216d0" loc="38:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_2_5V" scoped="" ref="0x7f29245216d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2924521a50"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2924521be0"/>
        <function-ref name="start" scoped="" ref="0x7f2924521d70"/>
        <function-ref name="stop" scoped="" ref="0x7f2924520020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcResource" ref="0x7f2924523c60" loc="36:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcResource" scoped="" ref="0x7f2924523c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924522020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29245221b0"/>
        <function-ref name="request" scoped="" ref="0x7f2924522340"/>
        <function-ref name="granted" scoped="" ref="0x7f29245224d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924522660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientResource" ref="0x7f29245248d0" loc="34:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ClientResource" scoped="" ref="0x7f29245248d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f2924524c50"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f2924524de0"/>
        <function-ref name="request" scoped="" ref="0x7f2924523020"/>
        <function-ref name="granted" scoped="" ref="0x7f29245231b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f2924523340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="switchOff" ref="0x7f292451c3a0" loc="48:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="switchOff" scoped="" ref="0x7f292451c3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f292451c720"/>
        <function-ref name="runTask" scoped="" ref="0x7f292451c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RefVolt_1_5V" ref="0x7f29245229f0" loc="37:../../../tos/chips/msp430/adc12/Msp430RefVoltArbiterImplP.nc">
      <component-ref qname="Msp430RefVoltArbiterImplP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="RefVolt_1_5V" scoped="" ref="0x7f29245229f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x7f2924522d70"/>
        <function-ref name="stopDone" scoped="" ref="0x7f2924521020"/>
        <function-ref name="start" scoped="" ref="0x7f29245211b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2924521340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f29244ed020" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOnDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f29244ed020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f29244e9630"/>
        <function-ref name="fired" scoped="" ref="0x7f29244eca60"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f29244eb920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f29244eb4a0"/>
        <function-ref name="getdt" scoped="" ref="0x7f29244e8020"/>
        <function-ref name="gett0" scoped="" ref="0x7f29244e9ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f29244eb020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f29244edc10"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f29244e9020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f29244ec110"/>
        <function-ref name="stop" scoped="" ref="0x7f29244ec5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f29244e7b40" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffDelayTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f29244e7b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f29244e2110"/>
        <function-ref name="fired" scoped="" ref="0x7f29244e55b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f29244e44a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f29244e4020"/>
        <function-ref name="getdt" scoped="" ref="0x7f29244e2a10"/>
        <function-ref name="gett0" scoped="" ref="0x7f29244e2590"/>
        <function-ref name="isRunning" scoped="" ref="0x7f29244e5a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f29244e6750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f29244e4ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f29244e6c20"/>
        <function-ref name="stop" scoped="" ref="0x7f29244e5130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7f29244e0560" loc="45:../../../tos/system/TimerMilliC.nc">
      <component-ref qname="Msp430RefVoltArbiterP.SwitchOffSettleTimer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Timer" scoped="" ref="0x7f29244e0560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f29244dca20"/>
        <function-ref name="fired" scoped="" ref="0x7f29244de020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7f29244deda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7f29244de920"/>
        <function-ref name="getdt" scoped="" ref="0x7f29244db4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7f29244db020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f29244de4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7f29244df1b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7f29244dc410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7f29244df680"/>
        <function-ref name="stop" scoped="" ref="0x7f29244dfb50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f29238fec60" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f29238fec60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29238fc8e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f29238fb020" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f29238fb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29238fbc50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f2923915df0" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923915df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f2923913ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f29239170b0" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f29239170b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f2923916b60"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f2923917ca0"/>
        <function-ref name="read" scoped="" ref="0x7f2923916690"/>
        <function-ref name="readDone" scoped="" ref="0x7f2923915690"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Adc12SingleChannel" ref="0x7f29244a3410" loc="23:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f29244a3410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f29244a3790"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f29244a3920"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f29244a3ab0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f29244a3c40"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f29244a3dd0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f29244a2020"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f29244a21b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f29244a5ce0" loc="22:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f29244a5ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29244a4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f29244a9830" loc="20:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f29244a9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f29244a7340"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f29244a8480"/>
        <function-ref name="read" scoped="" ref="0x7f29244a8df0"/>
        <function-ref name="readDone" scoped="" ref="0x7f29244a7df0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f29244a29c0" loc="24:../../../tos/chips/msp430/adc12/WireAdcStreamP.nc">
      <component-ref qname="WireAdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29244a29c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29244a2d40"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29244a0020"/>
        <function-ref name="request" scoped="" ref="0x7f29244a01b0"/>
        <function-ref name="granted" scoped="" ref="0x7f29244a0340"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29244a04d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="bufferDone" ref="0x7f292446b900" loc="156:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="bufferDone" scoped="" ref="0x7f292446b900"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f292446bc80"/>
        <function-ref name="runTask" scoped="" ref="0x7f292446be10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamDone" ref="0x7f2924478200" loc="119:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamDone" scoped="" ref="0x7f2924478200"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2924478580"/>
        <function-ref name="runTask" scoped="" ref="0x7f2924478710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="readStreamFail" ref="0x7f2924473820" loc="135:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="readStreamFail" scoped="" ref="0x7f2924473820"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7f2924473ba0"/>
        <function-ref name="runTask" scoped="" ref="0x7f2924473d30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7f2924494730" loc="54:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2924494730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2924490020"/>
        <function-ref name="fired" scoped="" ref="0x7f2924492020"/>
        <function-ref name="startAt" scoped="" ref="0x7f29244929a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f29244924e0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f29244904e0"/>
        <function-ref name="start" scoped="" ref="0x7f29244935b0"/>
        <function-ref name="stop" scoped="" ref="0x7f2924493ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f292449d9b0" loc="48:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f292449d9b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7f2926367800"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7f2926367800"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f292449dd30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f2924495300" loc="53:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f2924495300"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f2924494020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SingleChannel" ref="0x7f2924498a70" loc="52:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="SingleChannel" scoped="" ref="0x7f2924498a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f2924498df0"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f2924497020"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f29244971b0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f2924497340"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f29244974d0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f2924497660"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f29244977f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f292449c700" loc="49:../../../tos/chips/msp430/adc12/AdcStreamP.nc">
      <component-ref qname="AdcStreamP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f292449c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f2924499220"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f292449b390"/>
        <function-ref name="read" scoped="" ref="0x7f292449bd00"/>
        <function-ref name="readDone" scoped="" ref="0x7f2924499cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f292442fd80" loc="44:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f292442fd80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f292442c670"/>
        <function-ref name="fired" scoped="" ref="0x7f292442d5d0"/>
        <function-ref name="startAt" scoped="" ref="0x7f292442c020"/>
        <function-ref name="isRunning" scoped="" ref="0x7f292442da90"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f292442cb30"/>
        <function-ref name="start" scoped="" ref="0x7f292442ebc0"/>
        <function-ref name="stop" scoped="" ref="0x7f292442d110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f292442f530" loc="43:../../../tos/chips/msp430/timer/AlarmMilli32C.nc">
      <component-ref qname="WireAdcStreamP.Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f292442f530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f292442f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2923898870" loc="44:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2923898870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923894090"/>
        <function-ref name="fired" scoped="" ref="0x7f2923895090"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923895a10"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923895550"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923894550"/>
        <function-ref name="start" scoped="" ref="0x7f29238966a0"/>
        <function-ref name="stop" scoped="" ref="0x7f2923896bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f2923898020" loc="43:../../../tos/chips/msp430/timer/Alarm32khz16C.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f2923898020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f29238983a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Compare" ref="0x7f292387fda0" loc="41:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f292387fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f292387e180"/>
        <function-ref name="setEvent" scoped="" ref="0x7f292387e310"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f292387e4a0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f292387e630"/>
        <function-ref name="fired" scoped="" ref="0x7f292387e7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Timer" ref="0x7f2923881450" loc="39:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923881450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f29238817d0"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f2923881960"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923881af0"/>
        <function-ref name="get" scoped="" ref="0x7f2923881c80"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923881e10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2923880020"/>
        <function-ref name="getMode" scoped="" ref="0x7f29238801b0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2923880340"/>
        <function-ref name="overflow" scoped="" ref="0x7f29238804d0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2923880660"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f29238807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430TimerControl" ref="0x7f2923880a80" loc="40:../../../tos/chips/msp430/timer/Msp430Timer32khzC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Timer"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923880a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2923880e00"/>
        <function-ref name="getControl" scoped="" ref="0x7f292387f020"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f292387f1b0"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f292387f340"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f292387f4d0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f292387f660"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f292387f7f0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f292387f980"/>
        <function-ref name="setControl" scoped="" ref="0x7f292387fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Compare" ref="0x7f2923875a80" loc="49:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Compare" scoped="" ref="0x7f2923875a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Compare"/>
      </instance>
      <interface-functions>
        <function-ref name="getEvent" scoped="" ref="0x7f2923875e00"/>
        <function-ref name="setEvent" scoped="" ref="0x7f2923874020"/>
        <function-ref name="setEventFromPrev" scoped="" ref="0x7f29238741b0"/>
        <function-ref name="setEventFromNow" scoped="" ref="0x7f2923874340"/>
        <function-ref name="fired" scoped="" ref="0x7f29238744d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430Timer" ref="0x7f2923877190" loc="47:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Timer" scoped="" ref="0x7f2923877190"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Timer"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x7f2923877510"/>
        <function-ref name="setClockSource" scoped="" ref="0x7f29238776a0"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923877830"/>
        <function-ref name="get" scoped="" ref="0x7f29238779c0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923877b50"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f2923877ce0"/>
        <function-ref name="getMode" scoped="" ref="0x7f2923877e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f2923876030"/>
        <function-ref name="overflow" scoped="" ref="0x7f29238761c0"/>
        <function-ref name="setMode" scoped="" ref="0x7f2923876350"/>
        <function-ref name="setInputDivider" scoped="" ref="0x7f29238764e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f292387b020" loc="46:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f292387b020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923879870"/>
        <function-ref name="fired" scoped="" ref="0x7f292387a840"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923879220"/>
        <function-ref name="isRunning" scoped="" ref="0x7f292387ad00"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923879d30"/>
        <function-ref name="start" scoped="" ref="0x7f292387be30"/>
        <function-ref name="stop" scoped="" ref="0x7f292387a380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7f292387c660" loc="45:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Init" scoped="" ref="0x7f292387c660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7f292387c9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Msp430TimerControl" ref="0x7f2923876770" loc="48:../../../tos/chips/msp430/timer/Msp430AlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.AlarmFrom.Msp430Alarm"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430TimerControl" scoped="" ref="0x7f2923876770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430TimerControl"/>
      </instance>
      <interface-functions>
        <function-ref name="setControlAsCapture" scoped="" ref="0x7f2923876af0"/>
        <function-ref name="getControl" scoped="" ref="0x7f2923876c80"/>
        <function-ref name="enableEvents" scoped="" ref="0x7f2923876e10"/>
        <function-ref name="areEventsEnabled" scoped="" ref="0x7f2923875020"/>
        <function-ref name="setControlAsCompare" scoped="" ref="0x7f29238751b0"/>
        <function-ref name="disableEvents" scoped="" ref="0x7f2923875340"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x7f29238754d0"/>
        <function-ref name="clearPendingInterrupt" scoped="" ref="0x7f2923875660"/>
        <function-ref name="setControl" scoped="" ref="0x7f29238757f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7f2923892a90" loc="61:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Alarm" scoped="" ref="0x7f2923892a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f292388e2e0"/>
        <function-ref name="fired" scoped="" ref="0x7f29238902e0"/>
        <function-ref name="startAt" scoped="" ref="0x7f2923890c60"/>
        <function-ref name="isRunning" scoped="" ref="0x7f29238907a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f292388e7a0"/>
        <function-ref name="start" scoped="" ref="0x7f29238918d0"/>
        <function-ref name="stop" scoped="" ref="0x7f2923891de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x7f292388b210" loc="73:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AlarmFrom" scoped="" ref="0x7f292388b210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5e30"/>
            <typename><typedef-ref name="T32khz" ref="0x7f2925ec4200"/></typename>
          </type-tag>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7f2923888b30"/>
        <function-ref name="fired" scoped="" ref="0x7f292388aa60"/>
        <function-ref name="startAt" scoped="" ref="0x7f29238884e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7f2923888020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7f2923887020"/>
        <function-ref name="start" scoped="" ref="0x7f292388a090"/>
        <function-ref name="stop" scoped="" ref="0x7f292388a5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7f292388ee10" loc="68:../../../tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="WireAdcStreamP.Alarm.Transform"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Counter" scoped="" ref="0x7f292388ee10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f2925ec5680"/>
            <typename><typedef-ref name="TMilli" ref="0x7f2925ec59f0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7f292388dca0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7f292388c670"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7f292388c1b0"/>
        <function-ref name="overflow" scoped="" ref="0x7f292388cb30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x7f29243fb480" loc="26:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Service" scoped="" ref="0x7f29243fb480"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f29243f8020"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f29243f90d0"/>
        <function-ref name="read" scoped="" ref="0x7f29243f9a60"/>
        <function-ref name="readDone" scoped="" ref="0x7f29243f8af0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f29244275a0" loc="24:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f29244275a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f29243fc0d0"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f29243fe200"/>
        <function-ref name="read" scoped="" ref="0x7f29243feb90"/>
        <function-ref name="readDone" scoped="" ref="0x7f29243fcba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x7f29243f6210" loc="27:../../../tos/system/ArbitratedReadStreamC.nc">
      <component-ref qname="WireAdcStreamP.ArbitrateReadStream"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29243f6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29243f65b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29243f6740"/>
        <function-ref name="request" scoped="" ref="0x7f29243f68d0"/>
        <function-ref name="granted" scoped="" ref="0x7f29243f6a60"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29243f6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f29238a68b0" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f29238a68b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f29238a6c30"/>
        <function-ref name="configure" scoped="" ref="0x7f29238a6dc0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f29238a5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f29238a78b0" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f29238a78b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f29238a7c30"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f29238a7dc0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f29238a6020"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f29238a61b0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f29238a6340"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f29238a64d0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f29238a6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f29238a5270" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f29238a5270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f29238a55f0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f29238a5780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f29238a5bb0" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f29238a5bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29238a4820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f29238a9b90" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29238a9b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29238a7020"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29238a71b0"/>
        <function-ref name="request" scoped="" ref="0x7f29238a7340"/>
        <function-ref name="granted" scoped="" ref="0x7f29238a74d0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29238a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f2923834a60" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f2923834a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29238336b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f2923833cc0" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SlaveAppC.S10871.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f2923833cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f2923831980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f29243ded40" loc="44:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f29243ded40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29243dd9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f29243de3f0" loc="43:../../../tos/platforms/telosa/chips/s10871/HamamatsuS10871TsrP.nc">
      <component-ref qname="HamamatsuS10871TsrP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f29243de3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f29243de770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f29243d0cc0" loc="42:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="SlaveAppC.S1087"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f29243d0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f29243bc940"/>
        <function-ref name="readDone" scoped="" ref="0x7f29243bcdc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f29243b24e0" loc="43:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="SlaveAppC.S1087"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f29243b24e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f29243b0020"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f29243b1110"/>
        <function-ref name="read" scoped="" ref="0x7f29243b1a80"/>
        <function-ref name="readDone" scoped="" ref="0x7f29243b0ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f29243d0590" loc="41:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParC.nc">
      <component-ref qname="SlaveAppC.S1087"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f29243d0590"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f29243d0910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x7f29238271e0" loc="48:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Read" scoped="" ref="0x7f29238271e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x7f2923827dd0"/>
        <function-ref name="readDone" scoped="" ref="0x7f29238262a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f2923826a00" loc="49:../../../tos/chips/msp430/adc12/AdcReadClientC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923826a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29238256b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f2923819d30" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f2923819d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f29238180e0"/>
        <function-ref name="configure" scoped="" ref="0x7f2923818270"/>
        <function-ref name="dataReady" scoped="" ref="0x7f2923818400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f292381ade0" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f292381ade0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f2923819180"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f2923819310"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f29238194a0"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f2923819630"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f29238197c0"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f2923819950"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f2923819ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f2923818650" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f2923818650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f29238189d0"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f2923818b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f2923817020" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923817020"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f2923817c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f292381a1d0" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f292381a1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f292381a550"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f292381a6e0"/>
        <function-ref name="request" scoped="" ref="0x7f292381a870"/>
        <function-ref name="granted" scoped="" ref="0x7f292381aa00"/>
        <function-ref name="isOwner" scoped="" ref="0x7f292381ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f292380a390" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f292380a390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f2923809020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f2923809630" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f2923809630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29238073d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f2923820ac0" loc="49:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f2923820ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f292381f790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadStream" ref="0x7f2923824d90" loc="48:../../../tos/chips/msp430/adc12/AdcReadStreamClientC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadStreamClientC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ReadStream" scoped="" ref="0x7f2923824d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadStream"/>
        <arguments>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="bufferDone" scoped="" ref="0x7f2923821830"/>
        <function-ref name="postBuffer" scoped="" ref="0x7f29238239a0"/>
        <function-ref name="read" scoped="" ref="0x7f2923821360"/>
        <function-ref name="readDone" scoped="" ref="0x7f2923820360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12MultiChannel" ref="0x7f29237fc590" loc="48:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12MultiChannel" scoped="" ref="0x7f29237fc590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f29237fc910"/>
        <function-ref name="configure" scoped="" ref="0x7f29237fcaa0"/>
        <function-ref name="dataReady" scoped="" ref="0x7f29237fcc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12SingleChannel" ref="0x7f29237fd590" loc="47:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12SingleChannel" scoped="" ref="0x7f29237fd590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x7f29237fd910"/>
        <function-ref name="configureSingle" scoped="" ref="0x7f29237fdaa0"/>
        <function-ref name="configureSingleRepeat" scoped="" ref="0x7f29237fdc30"/>
        <function-ref name="configureMultipleRepeat" scoped="" ref="0x7f29237fddc0"/>
        <function-ref name="multipleDataReady" scoped="" ref="0x7f29237fc020"/>
        <function-ref name="configureMultiple" scoped="" ref="0x7f29237fc1b0"/>
        <function-ref name="singleDataReady" scoped="" ref="0x7f29237fc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Msp430Adc12Overflow" ref="0x7f29237fce80" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Msp430Adc12Overflow" scoped="" ref="0x7f29237fce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
      </instance>
      <interface-functions>
        <function-ref name="memOverflow" scoped="" ref="0x7f29237fb220"/>
        <function-ref name="conversionTimeOverflow" scoped="" ref="0x7f29237fb3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcConfigure" ref="0x7f29237fb7e0" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f29237fb7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29237fa440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x7f29237ff8a0" loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12ClientAutoRVGC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="Resource" scoped="" ref="0x7f29237ff8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x7f29237ffc20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x7f29237ffdb0"/>
        <function-ref name="request" scoped="" ref="0x7f29237fd020"/>
        <function-ref name="granted" scoped="" ref="0x7f29237fd1b0"/>
        <function-ref name="isOwner" scoped="" ref="0x7f29237fd340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfSub" ref="0x7f29237ed390" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfSub" scoped="" ref="0x7f29237ed390"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29237ec020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfUp" ref="0x7f29237ec630" loc="45:../../../tos/chips/msp430/adc12/Msp430Adc12ConfAlertC.nc">
      <component-ref qname="SlaveAppC.S1087.AdcReadStreamClientC.Msp430AdcClient.Msp430Adc12ConfAlertC"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="ConfUp" scoped="" ref="0x7f29237ec630"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29237eb3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AdcConfigure" ref="0x7f29243bbaa0" loc="44:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="AdcConfigure" scoped="" ref="0x7f29243bbaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AdcConfigure"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
              <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
            </type-qualified>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getConfiguration" scoped="" ref="0x7f29243ba6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DeviceMetadata" ref="0x7f29243bb150" loc="43:../../../tos/platforms/telosa/chips/s1087/HamamatsuS1087ParP.nc">
      <component-ref qname="HamamatsuS1087ParP"/>
      <type-interface size="I:2" alignment="I:2"><interface-ref name="DeviceMetadata" scoped="" ref="0x7f29243bb150"/></type-interface>
      <instance>
        <interfacedef-ref qname="DeviceMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="getSignificantBits" scoped="" ref="0x7f29243bb4d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:../../../tos/interfaces/Init.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2925eb8560" loc="62:../../../tos/interfaces/Init.nc">
        <documentation loc="53:../../../tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:../../../tos/interfaces/Boot.nc">
      <documentation loc="42:../../../tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7f2925eb9190" loc="60:../../../tos/interfaces/Boot.nc">
        <documentation loc="51:../../../tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Platform" loc="51:../../../tos/interfaces/Platform.nc">
      <function command="" provided="0" name="jiffiesRawSize" ref="0x7f2925eb07c0" loc="109:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="node_id" ref="0x7f2925eac660" loc="182:../../../tos/interfaces/Platform.nc">
        <documentation loc="164:../../../tos/interfaces/Platform.nc">
          <short>&#10; Platform dependent node id.</short>
          <long>&#10; Platform dependent node id.&#10;&#10; Get a Platform defined node id.  This will typically be a serial number&#10; or mac address.&#10;&#10; Platform define PLATFORM_SERIAL_NUM_SIZE determines the&#10; size.  If not defined defaults to 4 bytes (uint32_t).  But platforms&#10; really should define it to be clear.  (see platform.h)&#10;&#10; input:  *lenp      pointer where to place the length of the number.&#10;&#10; output: *lenp      length filled in if non-null.&#10; return: *uint8_t   pointer to the serial_num or NULL.&#10;&#10; a Node Id is assumed to be a sequence of bytes starting with the&#10; msb first.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lenp" ref="0x7f2925eac3a0" loc="182:../../../tos/interfaces/Platform.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRawSize" ref="0x7f2925eb2920" loc="79:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsRaw" ref="0x7f2925eb2190" loc="78:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesExpired" ref="0x7f2925eaf610" loc="126:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f2925eaf020" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f2925eaf380" loc="126:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIntPriority" ref="0x7f2925eada60" loc="162:../../../tos/interfaces/Platform.nc">
        <documentation loc="153:../../../tos/interfaces/Platform.nc">
          <short>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.</short>
          <long>**********************************************************************&#10;&#10; Platform configuration&#10;&#10; o Interrupt priority assignment.&#10;   modern computer hardware allows the assignment of different priorities&#10;   to interrupt sources.  This is inherently a platform thing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="irq_number" ref="0x7f2925ead7e0" loc="162:../../../tos/interfaces/Platform.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set_unaligned_traps" ref="0x7f2925ead0b0" loc="150:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on_off" ref="0x7f2925eafdc0" loc="150:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="jiffiesRaw" ref="0x7f2925eb0020" loc="108:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="localTime" ref="0x7f2925eb69c0" loc="64:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="usecsExpired" ref="0x7f2925eb1700" loc="95:../../../tos/interfaces/Platform.nc">
        <interfacedef-ref qname="Platform"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t_base" ref="0x7f2925eb1110" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
          <variable name="limit" ref="0x7f2925eb1470" loc="95:../../../tos/interfaces/Platform.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430ClockInit" loc="38:../../../tos/chips/msp430/Msp430ClockInit.nc">
      <documentation loc="33:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="defaultInitTimerB" ref="0x7f2925e6e5b0" loc="48:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerB" ref="0x7f2925e71870" loc="43:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitTimerA" ref="0x7f2925e70e60" loc="47:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initTimerA" ref="0x7f2925e71190" loc="42:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultSetupDcoCalibrate" ref="0x7f2925e70020" loc="45:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setupDcoCalibrate" ref="0x7f2925e72350" loc="40:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="initClocks" ref="0x7f2925e72a30" loc="41:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="defaultInitClocks" ref="0x7f2925e70740" loc="46:../../../tos/chips/msp430/Msp430ClockInit.nc">
        <interfacedef-ref qname="Msp430ClockInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:../../../tos/interfaces/McuPowerOverride.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerOverride.nc">
        <short>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state.</short>
        <long>&#10; Interface to allow high-level components to set a lower bound for a&#10; microcontroller's low power state. This is sometimes necessary,&#10; e.g., if a very low power state has a long wakeup latency that will&#10; violate application timing requirements. TEP 112 describes how&#10; TinyOS incorporates this information when the Scheduler tells&#10; the MCU to enter a low power state.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microconroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7f2925fde7e0" loc="62:../../../tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:../../../tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7f29262a6700"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="77:../../../tos/interfaces/McuSleep.nc">
      <documentation loc="65:../../../tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10; @date   Oct 25, 2016&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="irq_preamble" ref="0x7f2925f04a80" loc="85:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="irq_postamble" ref="0x7f2925f021f0" loc="86:../../../tos/interfaces/McuSleep.nc">
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x7f2925f042b0" loc="79:../../../tos/interfaces/McuSleep.nc">
        <documentation loc="78:../../../tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:../../../tos/interfaces/McuPowerState.nc">
      <documentation loc="35:../../../tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7f292607c020" loc="52:../../../tos/interfaces/McuPowerState.nc">
        <documentation loc="47:../../../tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:../../../tos/interfaces/Scheduler.nc">
      <documentation loc="42:../../../tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7f2926a1ce80" loc="57:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="54:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7f2926364e20" loc="72:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="67:../../../tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7f2926364610" loc="65:../../../tos/interfaces/Scheduler.nc">
        <documentation loc="59:../../../tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:../../../tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7f2926358770" loc="67:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="57:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event.&#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7f2926356020" loc="75:../../../tos/interfaces/TaskBasic.nc">
        <documentation loc="69:../../../tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:../../../tos/interfaces/Leds.nc">
      <documentation loc="33:../../../tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7f2925e0ba00" loc="61:../../../tos/interfaces/Leds.nc">
        <documentation loc="58:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7f2925e0a1f0" loc="67:../../../tos/interfaces/Leds.nc">
        <documentation loc="63:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7f2925e0a9d0" loc="72:../../../tos/interfaces/Leds.nc">
        <documentation loc="69:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7f2925e09940" loc="83:../../../tos/interfaces/Leds.nc">
        <documentation loc="79:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7f2925e06120" loc="100:../../../tos/interfaces/Leds.nc">
        <documentation loc="96:../../../tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2925e06930" loc="117:../../../tos/interfaces/Leds.nc">
        <documentation loc="103:../../../tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7f2925e09190" loc="77:../../../tos/interfaces/Leds.nc">
        <documentation loc="74:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2925e054c0" loc="134:../../../tos/interfaces/Leds.nc">
        <documentation loc="120:../../../tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f2925e05240" loc="134:../../../tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7f2925e0b270" loc="56:../../../tos/interfaces/Leds.nc">
        <documentation loc="53:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7f2925e08190" loc="89:../../../tos/interfaces/Leds.nc">
        <documentation loc="86:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7f2925e08920" loc="94:../../../tos/interfaces/Leds.nc">
        <documentation loc="91:../../../tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:../../../tos/interfaces/GeneralIO.nc">
      <documentation loc="34:../../../tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f2925dfb270" loc="44:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f2925dfb9a0" loc="45:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f2925dfd420" loc="42:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f2925dfa820" loc="47:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2925dfdb20" loc="43:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f2925dfa0e0" loc="46:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2925dfe610" loc="40:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f2925dfece0" loc="41:../../../tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430GeneralIO" loc="45:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7f2925dd0070" loc="79:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="76:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to input.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7f2925dd07c0" loc="80:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setResistor" ref="0x7f2925dcb2e0" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="100:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin pullup / pull down resistor mode.</short>
          <long>&#10; Set pin pullup / pull down resistor mode.&#10; @param mode One of the MSP430_PORT_RESISTOR_* values&#10; @return EINVAL if invalid mode or pin does not support resistor configuration;&#10; FAIL if pin is not an input;&#10; SUCCESS if pin supports resistor configuration, is an input, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2925dcb060" loc="107:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullUp" ref="0x7f2925dcad30" loc="126:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7f2925dd3870" loc="59:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Toggle pin status.</short>
          <long>&#10; Toggle pin status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7f2925dcf780" loc="86:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getResistor" ref="0x7f2925dc9520" loc="134:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="129:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the pin pullup / pulldown resistor mode.</short>
          <long>&#10; Get the pin pullup / pulldown resistor mode.&#10;&#10; @return one of the MSP430_PORT_RESISTOR_* values&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDriveStrength" ref="0x7f2925dc7020" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="136:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short> &#10; Set port drive strength.</short>
          <long> &#10; Set port drive strength.&#10; @param mode: MSP430_PORT_DRIVE_STRENGTH_*&#10; @return EINVAL if invalid mode or pin doesn't support drive&#10;     strength config.&#10; FAIL if pin is not an output&#10; SUCCESS if pin supports it, is an output, and mode is valid&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2925dc9d70" loc="144:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7f2925dcf020" loc="85:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin direction to output.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2925dd1870" loc="74:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Read pin value.</short>
          <long>&#10; Read pin value.&#10;&#10; @return TRUE if pin is high, FALSE otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDriveStrength" ref="0x7f2925dc7910" loc="150:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="146:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get drive strength.</short>
          <long>&#10; Get drive strength.&#10; @return MSP430_PORT_DRIVE_STRENGTH_*&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectIOFunc" ref="0x7f2925dcc020" loc="97:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="94:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for I/O functionality.</short>
          <long>&#10; Set pin for I/O functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorPullDown" ref="0x7f2925dca5f0" loc="125:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRaw" ref="0x7f2925dd1070" loc="67:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="61:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Get the port status that contains the pin.</short>
          <long>&#10; Get the port status that contains the pin.&#10;&#10; @return Status of the port that contains the given pin. The x'th&#10; pin on the port will be represented in the x'th bit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resistorOff" ref="0x7f2925dcbb80" loc="124:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="109:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; set resistor mode directly.</short>
          <long>&#10; set resistor mode directly.&#10;&#10; You have to know what you are doing when you use these.  These routines&#10; assume that the port is set for input (PxDIR).  The routines explicitly&#10; change the value of the bits setting in PxOUT.&#10;&#10; The advantage of using these routines is efficiency because there is no&#10; mode checking.  In addition, no error check is done to make sure that the&#10; port is in input mode.  The thing is, first, this is something that you&#10; get right once and then it doesn't change so why check and, second no&#10; one actually checks the error return because there really isn't any&#10; point to doing the check because this isn't something you actually need&#10; to check the return code for.  So why have one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2925dd69c0" loc="49:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to high.</short>
          <long>&#10; Set pin to high.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="selectModuleFunc" ref="0x7f2925dce020" loc="91:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="88:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin for module specific functionality.</short>
          <long>&#10; Set pin for module specific functionality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isIOFunc" ref="0x7f2925dcc7c0" loc="98:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isModuleFunc" ref="0x7f2925dce7e0" loc="92:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7f2925dd3120" loc="54:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430GeneralIO.nc">
          <short>&#10; Set pin to low.</short>
          <long>&#10; Set pin to low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:../../../tos/interfaces/SplitControl.nc">
      <documentation loc="72:../../../tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x7f2925a99df0" loc="113:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="106:../../../tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2925a99b70" loc="113:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x7f2925a97350" loc="138:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="132:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f2925a970d0" loc="138:../../../tos/interfaces/SplitControl.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2925a99190" loc="104:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="89:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2925a98680" loc="130:../../../tos/interfaces/SplitControl.nc">
        <documentation loc="115:../../../tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:../../../tos/lib/timer/Timer.nc">
      <documentation loc="36:../../../tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2925b2d8c0" loc="53:../../../tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2925b2d8c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f2925b247c0" loc="136:../../../tos/lib/timer/Timer.nc">
        <documentation loc="132:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2925b27020" loc="83:../../../tos/lib/timer/Timer.nc">
        <documentation loc="80:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7f2925b26da0" loc="114:../../../tos/lib/timer/Timer.nc">
        <documentation loc="100:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2925b267d0" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f2925b26b10" loc="114:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7f2925b26020" loc="98:../../../tos/lib/timer/Timer.nc">
        <documentation loc="94:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7f2925b228a0" loc="151:../../../tos/lib/timer/Timer.nc">
        <documentation loc="146:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7f2925b22020" loc="144:../../../tos/lib/timer/Timer.nc">
        <documentation loc="138:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f2925b27800" loc="92:../../../tos/lib/timer/Timer.nc">
        <documentation loc="86:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7f2925b2a4d0" loc="64:../../../tos/lib/timer/Timer.nc">
        <documentation loc="56:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2925b2a250" loc="64:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7f2925b25dc0" loc="129:../../../tos/lib/timer/Timer.nc">
        <documentation loc="116:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2925b257f0" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7f2925b25b30" loc="129:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7f2925b28020" loc="73:../../../tos/lib/timer/Timer.nc">
        <documentation loc="66:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2925b2ad10" loc="73:../../../tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2925b28820" loc="78:../../../tos/lib/timer/Timer.nc">
        <documentation loc="75:../../../tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:../../../tos/interfaces/Packet.nc">
      <function command="" provided="0" name="clear" ref="0x7f2925ac3a50" loc="65:../../../tos/interfaces/Packet.nc">
        <documentation loc="58:../../../tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925ac37d0" loc="65:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x7f2925ac0b20" loc="78:../../../tos/interfaces/Packet.nc">
        <documentation loc="67:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925ac08a0" loc="78:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2925abc020" loc="126:../../../tos/interfaces/Packet.nc">
        <documentation loc="109:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925abd910" loc="126:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2925abdc40" loc="126:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2925abd020" loc="106:../../../tos/interfaces/Packet.nc">
        <documentation loc="96:../../../tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x7f2925abe020" loc="94:../../../tos/interfaces/Packet.nc">
        <documentation loc="80:../../../tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925abf9e0" loc="94:../../../tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2925abfd10" loc="94:../../../tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:../../../tos/interfaces/AMSend.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f2925aa7c90" loc="80:../../../tos/interfaces/AMSend.nc">
        <documentation loc="60:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f2925aa7340" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f2925aa76c0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2925aa79f0" loc="80:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f2925aa2620" loc="135:../../../tos/interfaces/AMSend.nc">
        <documentation loc="126:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925aa2020" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2925aa2350" loc="135:../../../tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f2925aa16d0" loc="123:../../../tos/interfaces/AMSend.nc">
        <documentation loc="113:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2925aa52a0" loc="96:../../../tos/interfaces/AMSend.nc">
        <documentation loc="82:../../../tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925aa5020" loc="96:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2925aa47f0" loc="110:../../../tos/interfaces/AMSend.nc">
        <documentation loc="98:../../../tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925aa4210" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f2925aa4560" loc="110:../../../tos/interfaces/AMSend.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x7f2925a95e00" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2925a95820" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x7f2925a95b70" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNetwork" ref="0x7f2925a8f490" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2925a91e40" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="networkId" ref="0x7f2925a8f200" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x7f2925a93940" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x7f2926a10110"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2925a936c0" loc="64:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNetwork" ref="0x7f2925a91390" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2925a91110" loc="75:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x7f2925a95020" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2925aa0d40" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x7f2925a924b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2925a92230" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:../../../tos/interfaces/Read.nc">
      <documentation loc="33:../../../tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10;&#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f2925a9cc40" loc="49:../../../tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2925a9cc40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f2925a8d540" loc="55:../../../tos/interfaces/Read.nc">
        <documentation loc="50:../../../tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f2925a8c2b0" loc="63:../../../tos/interfaces/Read.nc">
        <documentation loc="57:../../../tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2925a9cc40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2925a8dcc0" loc="63:../../../tos/interfaces/Read.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f2925a8c020" loc="63:../../../tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f2925a9cc40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:../../../tos/interfaces/Receive.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f2925a9d6e0" loc="78:../../../tos/interfaces/Receive.nc">
        <documentation loc="58:../../../tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
              <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925aa9d00" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x7f2925a9d0d0" loc="78:../../../tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2925a9d400" loc="78:../../../tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:../../../tos/interfaces/AMPacket.nc">
      <documentation loc="42:../../../tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x7f2925aad9f0" loc="177:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="164:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2925ad5930"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2925aad770" loc="177:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x7f2925ab7600" loc="88:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="80:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2925ab7380" loc="88:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x7f2925b129e0" loc="68:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="63:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x7f2925ab8520" loc="78:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="70:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2925ab82a0" loc="78:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x7f2925ab4020" loc="121:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="105:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2925ab3950" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2925ab3ca0" loc="121:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x7f2925ab6a30" loc="103:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="90:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2925ab6450" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x7f2925ab67a0" loc="103:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x7f2925ab04a0" loc="147:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="138:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2925ab0220" loc="147:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x7f2925aaf850" loc="162:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="149:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2925aaf2a0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x7f2925aaf5c0" loc="162:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x7f2925ad5550"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x7f2925ab22a0" loc="136:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="123:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2925ab2020" loc="136:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x7f2925aae020" loc="187:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="179:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2925ad5930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x7f2925aab8c0" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x7f2925aabc10" loc="187:../../../tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2925ad5930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x7f2925aaee40" loc="195:../../../tos/interfaces/AMPacket.nc">
        <documentation loc="189:../../../tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2925ad5930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:../../../tos/lib/timer/LocalTime.nc">
      <documentation loc="36:../../../tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2925a36100" loc="53:../../../tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2925a36100"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2925a36a20" loc="61:../../../tos/lib/timer/LocalTime.nc">
        <documentation loc="55:../../../tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:../../../tos/lib/timer/Alarm.nc">
      <documentation loc="36:../../../tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2925a32b10" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2925a32b10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2925a32d50" loc="56:../../../tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925a32d50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7f2925a2b9c0" loc="109:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="105:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925a32d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2925a2e950" loc="78:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="75:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7f2925a2b020" loc="103:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="90:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925a32d50"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925a32d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7f2925a2d9b0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925a32d50"/></type-var>
          </variable>
          <variable name="dt" ref="0x7f2925a2dcf0" loc="103:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925a32d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7f2925a2d190" loc="88:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="81:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7f2925a2a1f0" loc="116:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="111:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925a32d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7f2925a2f8e0" loc="66:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="59:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925a32d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2925a2f660" loc="66:../../../tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925a32d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2925a2e190" loc="73:../../../tos/lib/timer/Alarm.nc">
        <documentation loc="68:../../../tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Compare" loc="40:../../../tos/chips/msp430/timer/Msp430Compare.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f2925a09020" loc="41:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEvent" ref="0x7f2925a099a0" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2925a09720" loc="42:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromPrev" ref="0x7f2925a083d0" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f2925a08150" loc="43:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setEventFromNow" ref="0x7f2925a08da0" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delta" ref="0x7f2925a08b20" loc="44:../../../tos/chips/msp430/timer/Msp430Compare.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f2925a064e0" loc="46:../../../tos/chips/msp430/timer/Msp430Compare.nc">
        <interfacedef-ref qname="Msp430Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Timer" loc="43:../../../tos/chips/msp430/timer/Msp430Timer.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f2925a179a0" loc="52:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f2925a152a0" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="clockSource" ref="0x7f2925a15020" loc="55:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f2925a16120" loc="53:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7f2925a1dbd0" loc="45:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f2925a16860" loc="54:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2925a1aad0" loc="47:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f2925a172b0" loc="51:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2925a1a390" loc="46:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f2925a19270" loc="48:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMode" ref="0x7f2925a19b80" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2925a19900" loc="50:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="int" size="I:2" alignment="I:2"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInputDivider" ref="0x7f2925a15cb0" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
        <interfacedef-ref qname="Msp430Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="inputDivider" ref="0x7f2925a15a30" loc="56:../../../tos/chips/msp430/timer/Msp430Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerControl" loc="40:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="setControlAsCapture" ref="0x7f2925a0e3a0" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="58:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short> &#10; Sets the timer in capture mode.</short>
          <long> &#10; Sets the timer in capture mode.&#10;&#10; It has a predefined idea of what mode that capture should occur in.&#10; If that doesn't work for you, use setControl.&#10;&#10; @param cm configures the capture to occur on none, rising, falling or rising_and_falling edges&#10; @param ccis configures which input channel to use.&#10;&#10; Msp430Timer.h has convenience definitions:&#10;&#10;     MSP430TIMER_CM_NONE,            MSP430TIMER_CCI_A&#10;     MSP430TIMER_CM_RISING,          MSP430TIMER_CCI_B&#10;     MSP430TIMER_CM_FALLING,         MSP430TIMER_CCI_GND&#10;     MSP430TIMER_CM_BOTH             MSP430TIMER_CCI_VCC&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f2925a0fd70" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="ccis" ref="0x7f2925a0e110" loc="74:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControl" ref="0x7f2925a11350" loc="41:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2925e66e70"/>
            <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2925e658e0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableEvents" ref="0x7f2925a0ed40" loc="76:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="areEventsEnabled" ref="0x7f2925a0cc40" loc="78:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlAsCompare" ref="0x7f2925a0f4e0" loc="56:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
          <short>&#10; Sets the time in compare mode.</short>
          <long>&#10; Sets the time in compare mode.&#10;&#10; setControlAsCompare has a predefined, hardcoded idea of&#10; how the control register should be set for doing a compare.&#10;&#10; Your mileage may vary and this may not work for you.   In&#10; which case you set use setControl.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableEvents" ref="0x7f2925a0c4b0" loc="77:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x7f2925a11af0" loc="42:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearPendingInterrupt" ref="0x7f2925a102b0" loc="43:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x7f2925a10d00" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
        <interfacedef-ref qname="Msp430TimerControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2925e66e70"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2925e658e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2925a10a80" loc="45:../../../tos/chips/msp430/timer/Msp430TimerControl.nc">
            <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7f2925e66e70"/>
              <typename><typedef-ref name="msp430_compare_control_t" ref="0x7f2925e658e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Capture" loc="41:../../../tos/chips/msp430/timer/Msp430Capture.nc">
      <documentation loc="34:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getEvent" ref="0x7f29259f87f0" loc="45:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="42:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Reads the value of the last capture event in TxCCRx&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSynchronous" ref="0x7f29259f2020" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="76:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set whether the capture should occur synchronously or asynchronously.</short>
          <long>&#10; Set whether the capture should occur synchronously or asynchronously.&#10; TinyOS default is synchronous captures.&#10; WARNING: if the capture signal is asynchronous to the timer clock,&#10;          it could case a race condition (see Timer documentation&#10;          in MSP430F1xx user guide)&#10; @param synchronous TRUE to synchronize the timer capture with the&#10;        next timer clock instead of occurring asynchronously.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="synchronous" ref="0x7f29259f3c60" loc="85:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f29259f2bb0" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="87:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Signalled when an event is captured.</short>
          <long>&#10; Signalled when an event is captured.&#10;&#10; @param time The time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f29259f2930" loc="92:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f29259f34b0" loc="74:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="71:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Clear the capture overflow flag for when multiple captures occur&#10;</short>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f29259f5bc0" loc="69:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="59:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Determine if a capture overflow is pending.</short>
          <long>&#10; Determine if a capture overflow is pending.&#10;&#10; TI calls this overflow but it is actually an overrun.&#10; If COV is set it says that another capture has occurred&#10; prior to reading a previous capture.  The previous value&#10; of a capture has been lost.&#10;&#10; @return TRUE if the capture register has overflowed&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setEdge" ref="0x7f29259f52a0" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
        <documentation loc="47:../../../tos/chips/msp430/timer/Msp430Capture.nc">
          <short>&#10; Set the edge that the capture should occur&#10;&#10; </short>
          <long>&#10; Set the edge that the capture should occur&#10;&#10; @param cm Capture Mode for edge capture.&#10; enums exist for:&#10;   MSP430TIMER_CM_NONE is no capture.&#10;   MSP430TIMER_CM_RISING is rising edge capture.&#10;   MSP430TIMER_CM_FALLING is a falling edge capture.&#10;   MSP430TIMER_CM_BOTH captures on both rising and falling edges.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cm" ref="0x7f29259f5020" loc="57:../../../tos/chips/msp430/timer/Msp430Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430TimerEvent" loc="37:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
      <documentation loc="33:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <short>&#10; </short>
        <long>&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f29259ca810" loc="39:../../../tos/chips/msp430/timer/Msp430TimerEvent.nc">
        <interfacedef-ref qname="Msp430TimerEvent"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:../../../tos/lib/timer/Counter.nc">
      <documentation loc="36:../../../tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2925878e10" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2925878e10"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2925873070" loc="57:../../../tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925873070"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7f2925873990" loc="64:../../../tos/lib/timer/Counter.nc">
        <documentation loc="59:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return counter value.</short>
          <long>&#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2925873070"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7f2925872ad0" loc="76:../../../tos/lib/timer/Counter.nc">
        <documentation loc="73:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7f2925872270" loc="71:../../../tos/lib/timer/Counter.nc">
        <documentation loc="66:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long>&#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7f2925871270" loc="82:../../../tos/lib/timer/Counter.nc">
        <documentation loc="78:../../../tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TimeSkew" loc="51:../../../tos/lib/timer/TimeSkew.nc">
      <documentation loc="35:../../../tos/lib/timer/TimeSkew.nc">
        <short>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.</short>
        <long>&#10; The TinyOS timing system is based on various layers, ultimately&#10; tying to the underlying timing h/w.  Under various circumstances&#10; adjustments may be made by this underlying timing that can result&#10; in time skew.&#10;&#10; Typically this can occur when the RTC (Real Time Clock) subsystem&#10; has had its time adjusted for example via a GPS providing synchronized&#10; time.  If this skew is below a reasonable threshold (platform dependent)&#10; TimeSkew.skew(skew_val) will be signalled.  Beyond that threshold&#10; it might be better to reboot and reestablish reasonable time via&#10; those mechanisms.&#10;&#10; @author Eric B.Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="skew" ref="0x7f29257b0e80" loc="62:../../../tos/lib/timer/TimeSkew.nc">
        <documentation loc="52:../../../tos/lib/timer/TimeSkew.nc">
          <short>&#10; Signaled when the underlying timing system has detected timing&#10; skew.</short>
          <long>&#10; Signaled when the underlying timing system has detected timing&#10; skew.&#10;&#10; @param skew    estimated skew computed.  in millisecs (units platform&#10;                dependent, typically binary millisecs).&#10;                > 0, time has been moved into the future (we were slow).&#10;                &#60; 0, time has been shifted backwards, (we were fast).&#10;                = 0, skew is beyond platform limits.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TimeSkew"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f2926a10930"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="skew" ref="0x7f29257b0c00" loc="62:../../../tos/lib/timer/TimeSkew.nc">
            <type-int cname="long" size="I:4" alignment="I:2">
              <typename><typedef-ref name="int32_t" ref="0x7f2926a10930"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x7f292570d320" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f292570d320"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f292570d560" loc="35:../../../tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f292570d560"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x7f2925703510" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f292570d560"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925703290" loc="63:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x7f29257026c0" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925702440" loc="70:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x7f29257042a0" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925704020" loc="49:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f29257009c0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:../../../tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f292570d560"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29257003d0" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x7f2925700730" loc="78:../../../tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f292570d560"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:../../../tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:../../../tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x7f29256f5b50" loc="65:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256f5530" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x7f29256f58c0" loc="65:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x7f29256f2d00" loc="71:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256f2a80" loc="71:../../../tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x7f29256f6c60" loc="57:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x7f29256f62a0" loc="52:../../../tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:../../../tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x7f29256f6020" loc="52:../../../tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:../../../tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:../../../tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x7f292570b770" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f292570b4f0" loc="59:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x7f2925709940" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29257096c0" loc="71:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x7f2925707ab0" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:../../../tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925707830" loc="85:../../../tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x7f29256d2430" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256d21b0" loc="95:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x7f29256d5720" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256d54a0" loc="81:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x7f29256d7dc0" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f29256d7b40" loc="66:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x7f29256d72a0" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x7f29256d7020" loc="60:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x7f29256d6880" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x7f29256d6600" loc="73:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x7f29256d45e0" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256d4360" loc="88:../../../tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:../../../tos/interfaces/SendNotifier.nc">
      <documentation loc="32:../../../tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x7f29256c7e60" loc="59:../../../tos/interfaces/SendNotifier.nc">
        <documentation loc="52:../../../tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x7f29256c7850" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x7f29256c7bd0" loc="59:../../../tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:../../../tos/interfaces/PacketLink.nc">
      <documentation loc="32:../../../tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x7f29256cb630" loc="65:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="61:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256cb3b0" loc="65:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x7f29256cf6f0" loc="46:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="39:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256cf0d0" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x7f29256cf460" loc="46:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x7f29256cc5f0" loc="59:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="55:../../../tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256cc370" loc="59:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x7f29256cdaf0" loc="53:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="48:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256cd4d0" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x7f29256cd860" loc="53:../../../tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x7f29256c9630" loc="71:../../../tos/interfaces/PacketLink.nc">
        <documentation loc="67:../../../tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256c93b0" loc="71:../../../tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:../../../tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x7f29256da0b0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:../../../tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256dddd0" loc="47:../../../tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:../../../tos/interfaces/Send.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f29256c0e00" loc="75:../../../tos/interfaces/Send.nc">
        <documentation loc="57:../../../tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256c0840" loc="75:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f29256c0b70" loc="75:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x7f29256b5620" loc="125:../../../tos/interfaces/Send.nc">
        <documentation loc="115:../../../tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256b5020" loc="125:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f29256b5350" loc="125:../../../tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x7f29256b4660" loc="112:../../../tos/interfaces/Send.nc">
        <documentation loc="102:../../../tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f29256b82a0" loc="89:../../../tos/interfaces/Send.nc">
        <documentation loc="77:../../../tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256b8020" loc="89:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f29256b6750" loc="100:../../../tos/interfaces/Send.nc">
        <documentation loc="91:../../../tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f29256b6170" loc="100:../../../tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f29256b64c0" loc="100:../../../tos/interfaces/Send.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:../../../tos/interfaces/Resource.nc">
      <documentation loc="63:../../../tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f29256becc0" loc="120:../../../tos/interfaces/Resource.nc">
        <documentation loc="104:../../../tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.&#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource&#10;&#10; @note This command should never be called between putting in a request&#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event,&#10;       we have opted to keep thing simple and warn you about the potential&#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x7f29256bfcc0" loc="97:../../../tos/interfaces/Resource.nc">
        <documentation loc="90:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x7f29256bf350" loc="88:../../../tos/interfaces/Resource.nc">
        <documentation loc="78:../../../tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f29256be4f0" loc="102:../../../tos/interfaces/Resource.nc">
        <documentation loc="99:../../../tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f29256bd8a0" loc="128:../../../tos/interfaces/Resource.nc">
        <documentation loc="122:../../../tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f29256933a0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2925697dc0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x7f2925693110" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f29256916a0" loc="65:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x7f292568fe70" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f292568f060" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f292568f8a0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f292568fbd0" loc="84:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2925690840" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x7f2925690260" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x7f29256905b0" loc="73:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x7f2925693e30" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x7f2925693bb0" loc="58:../../../tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:../../../tos/interfaces/Random.nc">
      <documentation loc="34:../../../tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x7f292568a0e0" loc="52:../../../tos/interfaces/Random.nc">
        <documentation loc="48:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x7f2925694870" loc="46:../../../tos/interfaces/Random.nc">
        <documentation loc="42:../../../tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
            <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:../../../tos/interfaces/StdControl.nc">
      <documentation loc="72:../../../tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f292569da40" loc="95:../../../tos/interfaces/StdControl.nc">
        <documentation loc="88:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f2925695270" loc="105:../../../tos/interfaces/StdControl.nc">
        <documentation loc="97:../../../tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getPayload" ref="0x7f29256842e0" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the payload region of the message, after any headers&#10;    works with extended addressing mode&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925684020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getHeader" ref="0x7f2925686710" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header" ref="0x7f2925b10e90"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x7f2925b0d830"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925686410" loc="42:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x7f2925683620" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="50:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata" ref="0x7f2925b0c3b0"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x7f2925b0bc60"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2925683320" loc="53:../../../tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007-07-04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x7f292569b6e0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x7f2925698840" loc="97:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x7f2925698070" loc="90:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x7f292569fe20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x7f292569ce80" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x7f292569a020" loc="76:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x7f292569a840" loc="83:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x7f292569c6c0" loc="56:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:../../../tos/interfaces/State.nc">
      <documentation loc="33:../../../tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x7f292567ed00" loc="71:../../../tos/interfaces/State.nc">
        <documentation loc="68:../../../tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x7f292567f350" loc="56:../../../tos/interfaces/State.nc">
        <documentation loc="53:../../../tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x7f292567e530" loc="66:../../../tos/interfaces/State.nc">
        <documentation loc="63:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x7f292567e2b0" loc="66:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x7f292567fac0" loc="61:../../../tos/interfaces/State.nc">
        <documentation loc="58:../../../tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x7f2925681020" loc="45:../../../tos/interfaces/State.nc">
        <documentation loc="40:../../../tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f2925688c90" loc="45:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x7f2925681ad0" loc="51:../../../tos/interfaces/State.nc">
        <documentation loc="47:../../../tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x7f2925681850" loc="51:../../../tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="46:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x7f2925623870" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="100:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x7f2925623290" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x7f29256235e0" loc="106:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x7f29256241f0" loc="93:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="90:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x7f2925625880" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="81:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x7f2925625210" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x7f29256255f0" loc="87:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x7f292562cc10" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x7f292562c990" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x7f2925624a70" loc="98:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="95:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x7f2925628730" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f29256284b0" loc="72:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x7f292562ad30" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x7f292562aab0" loc="61:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x7f2925622ae0" loc="117:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="114:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x7f29256279c0" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x7f2925627740" loc="78:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x7f29256222b0" loc="112:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="108:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x7f29256294d0" loc="66:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="63:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Get the long address of the radio: set in hardware&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f29256f0020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f29256f0780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x7f2925629cc0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="68:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x7f292562c1f0" loc="54:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="48:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x7f292562a390" loc="60:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x7f2925627020" loc="77:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:../../../tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="47:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f2925601ce0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2925b11090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2925601a60" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f29255fa7f0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2925b11090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f29255fa570" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:../../../tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:../../../tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x7f2925614c50" loc="48:../../../tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:../../../tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x7f29256f0020"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x7f29256f0780"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:../../../tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:../../../tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x7f29256030e0" loc="50:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x7f2925602070" loc="60:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x7f29256038c0" loc="55:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x7f2925ad5930"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x7f2925604860" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:../../../tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2925ad5930"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x7f2925604280" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x7f2925ad5930"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x7f29256045d0" loc="45:../../../tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0x7f2925ad5d10"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="44:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="33:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.3 $ $Date: 2010-06-29 22:07:44 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x7f29255f6e40" loc="53:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="46:../../../tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2925b11090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f29255ff060" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2925b11090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f29256001e0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f2925600a50" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2925600da0" loc="52:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f29255fd7b0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2925b11090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x7f29255ff930" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x7f29255fd1c0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f29255fd510" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:../../../tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:../../../tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f29256077e0" loc="68:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:../../../tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f2925607020" loc="61:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:../../../tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x7f2925608720" loc="54:../../../tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x7f292560bdb0" loc="53:../../../tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:../../../tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:../../../tos/interfaces/GpioCapture.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x7f29254e1190" loc="54:../../../tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f29254df350" loc="66:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="63:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x7f29254e1b30" loc="61:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="56:../../../tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f29254e18b0" loc="61:../../../tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x7f29254e48f0" loc="53:../../../tos/interfaces/GpioCapture.nc">
        <documentation loc="48:../../../tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Interrupt" loc="39:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
      <documentation loc="34:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x7f29254b7800" loc="54:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="51:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.</short>
          <long> &#10; Clears the MSP430 Interrupt Pending Flag for a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7f29254b3270" loc="85:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="82:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port.</short>
          <long>&#10; Signalled when an interrupt occurs on a port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x7f29254b7070" loc="49:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="46:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Disables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Disables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x7f29254b59a0" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="69:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets whether the edge should be high to low or low to high.</short>
          <long>&#10; Sets whether the edge should be high to low or low to high.&#10;&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition.&#10;&#10; DEPRECATED.&#10;&#10; The if generates extra code that doesn't need to be there.   Replaced&#10; by edge{Rising,Falling}();&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x7f29254b5720" loc="80:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeFalling" ref="0x7f29254b5020" loc="67:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x7f29254ba870" loc="44:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="41:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Enables MSP430 hardware interrupt on a particular port.</short>
          <long> &#10; Enables MSP430 hardware interrupt on a particular port.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edgeRising" ref="0x7f29254b6810" loc="66:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="63:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short>&#10; Sets rising or falling edge for the interrupt generation&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x7f29254b6030" loc="61:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
        <documentation loc="56:../../../tos/chips/msp430/pins/HplMsp430Interrupt.nc">
          <short> &#10; Gets the current input value of a port.</short>
          <long> &#10; Gets the current input value of a port.&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x7f2925362810" loc="24:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x7f29253600e0" loc="31:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x7f2925360920" loc="39:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:../../../tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008-06-03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x7f2925339420" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f292533ae10" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2925339190" loc="62:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x7f2925334700" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2925335d90" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2925334110" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2925334460" loc="91:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2925335020" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2925b11090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2925337970" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f2925337cc0" loc="82:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x7f292533a020" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x7f2925b11090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f292533c9d0" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f292533cd20" loc="51:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f2925338b90" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2925338250" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x7f29253385a0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f29253388f0" loc="71:../../../tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="60:../../../tos/interfaces/SpiPacket.nc">
      <documentation loc="34:../../../tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both.&#10;&#10; The SPI bus both sends and receives at the same time.  So this interface&#10; can be used to send, receive, or both.  The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; This is split phase and typically is implemented using interrupts.  However&#10; as the SPI clock is increased the interrupt overhead become more onerous&#10; wrt each byte time being transfered.  See SpiBLock for a single phase&#10; transfer mechanism that doesn't have interrupt overhead issues.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; @author Eric B. Decker&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x7f292531aa40" loc="76:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="62:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f292531a0d0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f292531a460" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f292531a7a0" loc="76:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x7f2925316020" loc="88:../../../tos/interfaces/SpiPacket.nc">
        <documentation loc="78:../../../tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x7f29253192a0" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x7f2925319630" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2925319970" loc="88:../../../tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x7f2925319ce0" loc="89:../../../tos/interfaces/SpiPacket.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:../../../tos/interfaces/SpiByte.nc">
      <documentation loc="34:../../../tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x7f292531c8f0" loc="45:../../../tos/interfaces/SpiByte.nc">
        <documentation loc="40:../../../tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x7f292531c670" loc="45:../../../tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:../../../tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x7f292523cb70" loc="53:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f29252394e0" loc="61:../../../tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430SpiConfigure" loc="38:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <short>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; </short>
        <long>&#10; Interface used by Msp430Spi clients to reconfigure the SPI before use&#10; @author Vlado Handziski &#60;handzisk@tkn.tu-berlin.de>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getConfig" ref="0x7f2925237aa0" loc="39:../../../tos/chips/msp430/usart/Msp430SpiConfigure.nc">
        <interfacedef-ref qname="Msp430SpiConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-qualified const="">
                <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f292526d2b0"/></typename>
              <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f292526ee00"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:../../../tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:../../../tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x7f29252366f0" loc="62:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2925236470" loc="62:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x7f2925235b30" loc="74:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f29252358b0" loc="74:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x7f2925235020" loc="68:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f29252345f0" loc="81:../../../tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:../../../tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2925234370" loc="81:../../../tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:../../../tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:../../../tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x7f2925229020" loc="65:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f292522a750" loc="59:../../../tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430UsartInterrupts" loc="43:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART. &#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information.&#10;&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="rxDone" ref="0x7f2925222740" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="51:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data has been received.</short>
          <long>&#10; A byte of data has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f29252224c0" loc="54:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x7f2925225cd0" loc="49:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
        <documentation loc="45:../../../tos/chips/msp430/usart/HplMsp430UsartInterrupts.nc">
          <short>&#10; A byte of data is about to be transmitted, ie.</short>
          <long>&#10; A byte of data is about to be transmitted, ie. the TXBuffer is&#10; empty and ready to accept next byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430UsartInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430Usart" loc="45:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
      <documentation loc="30:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <short>&#10; Byte-level interface to control a USART.</short>
        <long>&#10; Byte-level interface to control a USART.&#10; &#60;p>The USART can be switched to SPI- or UART-mode. The interface follows&#10; the convention of being stateless, thus a higher layer has to maintain&#10; state information. I.e. calling &#60;code>tx&#60;/done> will transmit a byte of&#10; data in the mode (SPI or UART) the USART has been set to before.&#10;&#10; @author Vlado Handziski (handzisk@tkn.tu-berlin.de)&#10; @author Jan Hauer (hauer@tkn.tu-berlin.de)&#10; @author Joe Polastre&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x7f29251fd7c0" loc="213:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="209:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; SUCCESS if the TX buffer is empty and all of the bits have been&#10; shifted out&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartRx" ref="0x7f29252092d0" loc="143:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="140:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart RX functionality of the USART module.</short>
          <long>&#10; Enables the Uart RX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUctl" ref="0x7f2925215020" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="47:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f292528a020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f292528a860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2925218cf0" loc="50:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f292528a020"/>
              <typename><typedef-ref name="msp430_uctl_t" ref="0x7f292528a860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUart" ref="0x7f292520b3b0" loc="123:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="120:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables both the Rx and the Tx Uart modules.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUrctl" ref="0x7f2925213530" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="67:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2925285020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2925285860"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f29252132b0" loc="70:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2925285020"/>
              <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2925285860"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x7f29252029e0" loc="180:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrRxIntr" ref="0x7f29251fe020" loc="197:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="194:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears RX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUtctl" ref="0x7f2925214a90" loc="65:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="62:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2925288ec0"/>
            <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2925287680"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getUrctl" ref="0x7f2925213d20" loc="75:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="72:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxRCTL Receive Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2925285020"/>
            <typename><typedef-ref name="msp430_urctl_t" ref="0x7f2925285860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetUsart" ref="0x7f292520fb90" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reset" ref="0x7f292520f910" loc="97:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUmctl" ref="0x7f292520f1f0" loc="95:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="92:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableIntr" ref="0x7f29252022b0" loc="179:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUtctl" ref="0x7f29252142a0" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="57:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxTCTL Transmit Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2925288ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2925287680"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7f2925214020" loc="60:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f2925288ec0"/>
              <typename><typedef-ref name="msp430_utctl_t" ref="0x7f2925287680"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUbr" ref="0x7f2925210020" loc="85:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="82:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x7f2925201190" loc="181:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUmctl" ref="0x7f2925210a00" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="87:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxMCTL Modulation Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="umctl" ref="0x7f2925210780" loc="90:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartRx" ref="0x7f292520c480" loc="113:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="110:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart RX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUart" ref="0x7f292520cc00" loc="118:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="115:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Uart mode (both RX and TX)&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x7f2925204420" loc="177:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpi" ref="0x7f2925206190" loc="163:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="160:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART is set to Spi mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableUartTx" ref="0x7f292520a350" loc="133:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="130:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the Uart TX functionality of the USART module.</short>
          <long>&#10; Enables the Uart TX functionality of the USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x7f2925204b60" loc="178:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartRx" ref="0x7f2925209ab0" loc="148:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="145:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart RX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableIntr" ref="0x7f29252018b0" loc="182:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x7f292520e390" loc="103:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="99:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.</short>
          <long>&#10; Returns an enum value corresponding to the current mode of the&#10; USART module.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref ref="0x7f2925290d80"/>
            <typename><typedef-ref name="msp430_usartmode_t" ref="0x7f292528c4d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isTxIntrPending" ref="0x7f2925200070" loc="187:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="184:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if TX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrIntr" ref="0x7f29251fd020" loc="207:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="204:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears both TX and RX interrupt pending flags&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setUbr" ref="0x7f2925211700" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="77:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Sets the UxBR0 and UxBR1 Baud Rate Control Registers&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ubr" ref="0x7f2925211480" loc="80:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x7f29251fc2a0" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="215:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Transmit a byte of data.</short>
          <long>&#10; Transmit a byte of data. When the transmission is completed,&#10; &#60;code>txDone&#60;/done> is generated. Only then a new byte may be&#10; transmitted, otherwise the previous byte will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f29251fc020" loc="220:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getUctl" ref="0x7f2925215800" loc="55:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="52:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Reads the UxCTL Control Register&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f292528a020"/>
            <typename><typedef-ref name="msp430_uctl_t" ref="0x7f292528a860"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUart" ref="0x7f292520bb20" loc="128:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="125:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables both the Rx and the Tx Uart modules.</short>
          <long>&#10; Disables both the Rx and the Tx Uart modules.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x7f2925207270" loc="153:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="150:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Enables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeUart" ref="0x7f2925205ba0" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="170:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.</short>
          <long>&#10; Switches USART to Uart mode (RX and TX enabled)&#10; Interrupts disabled by default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f2925259b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2925259730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f2925205920" loc="174:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_uart_union_config_t" ref="0x7f2925259b50"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2925259730"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeSpi" ref="0x7f2925206ca0" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="165:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Switches USART to Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f292526d2b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f292526ee00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f2925206a20" loc="168:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_spi_union_config_t" ref="0x7f292526d2b0"/></typename>
                <type-tag size="I:4" alignment="I:2"><union-ref ref="0x7f292526ee00"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x7f29251fcac0" loc="227:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="222:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Get current value from RX-buffer.</short>
          <long>&#10; Get current value from RX-buffer.&#10;&#10; @return byte received&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxIntrPending" ref="0x7f2925200860" loc="192:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="189:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; TRUE if RX interrupt pending, flag must be cleared explicitly&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isUartTx" ref="0x7f292520eba0" loc="108:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="105:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Returns TRUE if the USART has Uart TX mode enabled&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clrTxIntr" ref="0x7f29251fe780" loc="202:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="199:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Clears TX interrupt pending flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableSpi" ref="0x7f29252079e0" loc="158:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="155:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the USART when in Spi mode.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableUartTx" ref="0x7f292520ab30" loc="138:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
        <documentation loc="135:../../../tos/chips/msp430/usart/HplMsp430Usart.nc">
          <short>&#10; Disables the Uart TX module.</short>
        </documentation>
        <interfacedef-ref qname="HplMsp430Usart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2CInterrupts" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
      <documentation loc="32:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:11 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x7f2925195020" loc="39:../../../tos/chips/msp430/usart/HplMsp430I2CInterrupts.nc">
        <interfacedef-ref qname="HplMsp430I2CInterrupts"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplMsp430I2C" loc="4:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
      <function command="" provided="0" name="disableOwnAddress" ref="0x7f292516f9d0" loc="80:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartByte" ref="0x7f2925180020" loc="31:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveAddress" ref="0x7f2925175620" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f29251753a0" loc="62:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterMode" ref="0x7f29251895b0" loc="11:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTransmitReady" ref="0x7f2925172c50" loc="71:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPrescaler" ref="0x7f292517a5e0" loc="49:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransmitMode" ref="0x7f2925182070" loc="28:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStopBit" ref="0x7f292517f020" loc="34:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockSource" ref="0x7f2925183020" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x7f2925184d30" loc="25:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRepeatMode" ref="0x7f29251854b0" loc="21:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getData" ref="0x7f292517c020" loc="41:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableStartDetect" ref="0x7f2925174550" loc="66:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAccessReady" ref="0x7f292516f270" loc="78:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSlaveAddress" ref="0x7f2925176c30" loc="61:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isGeneralCallPending" ref="0x7f2925169350" loc="91:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getIV" ref="0x7f29251669d0" loc="100:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableI2C" ref="0x7f2925188420" loc="14:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartBit" ref="0x7f292517e740" loc="38:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransferByteCount" ref="0x7f292517b1f0" loc="45:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitReceiveMode" ref="0x7f29251838e0" loc="27:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearModeI2C" ref="0x7f292518a350" loc="7:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setOwnAddress" ref="0x7f2925176460" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x7f29251761e0" loc="58:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isI2C" ref="0x7f292518ec00" loc="6:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableGeneralCall" ref="0x7f29251724d0" loc="69:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableOwnAddress" ref="0x7f292516d190" loc="81:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAccessReadyPending" ref="0x7f2925168b00" loc="94:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isArbitrationLostPending" ref="0x7f2925166270" loc="97:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveReady" ref="0x7f2925171b90" loc="74:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableNoAck" ref="0x7f292516d8c0" loc="83:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableStartDetect" ref="0x7f2925175db0" loc="65:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableArbitrationLost" ref="0x7f292516b390" loc="87:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableI2C" ref="0x7f2925188b40" loc="15:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShiftClock" ref="0x7f29251797e0" loc="53:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableArbitrationLost" ref="0x7f292516c7b0" loc="86:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAccessReady" ref="0x7f2925170ac0" loc="77:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTransferByteCount" ref="0x7f292517bde0" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="count" ref="0x7f292517bb60" loc="46:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwnAddressPending" ref="0x7f29251672d0" loc="95:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getOwnAddress" ref="0x7f2925177a60" loc="57:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTransmitReady" ref="0x7f2925171420" loc="72:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setModeI2C" ref="0x7f292518ae10" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f29252454a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2925245080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f292518ab90" loc="8:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430_i2c_union_config_t" ref="0x7f29252454a0"/></typename>
                <type-tag size="I:8" alignment="I:2"><union-ref ref="0x7f2925245080"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartBit" ref="0x7f292517e020" loc="37:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setWordMode" ref="0x7f2925187cb0" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2925187a30" loc="19:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setData" ref="0x7f292517c980" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f292517c700" loc="42:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isStartDetectPending" ref="0x7f292516bb60" loc="90:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockSource" ref="0x7f2925184620" loc="24:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getWordMode" ref="0x7f2925187350" loc="18:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShiftClock" ref="0x7f29251772a0" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="shift" ref="0x7f2925177020" loc="54:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSlaveMode" ref="0x7f2925189ce0" loc="12:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableNoAck" ref="0x7f292516c020" loc="84:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveReady" ref="0x7f2925170350" loc="75:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableGeneralCall" ref="0x7f2925174cc0" loc="68:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPrescaler" ref="0x7f2925179020" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scaler" ref="0x7f292517ad30" loc="50:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setStopBit" ref="0x7f292517f740" loc="35:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setReceiveMode" ref="0x7f29251827b0" loc="29:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNoAckPending" ref="0x7f2925167a40" loc="96:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRepeatMode" ref="0x7f2925185e30" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x7f2925185bb0" loc="22:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isTransmitReadyPending" ref="0x7f2925169b10" loc="92:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStartByte" ref="0x7f2925180750" loc="32:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isReceiveReadyPending" ref="0x7f2925168350" loc="93:../../../tos/chips/msp430/usart/HplMsp430I2C.nc">
        <interfacedef-ref qname="HplMsp430I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:../../../tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:../../../tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x7f29250c5020" loc="90:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x7f29250c5880" loc="98:../../../tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:../../../tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="38:../../../tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x7f292508cdc0" loc="54:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="46:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x7f2925089020" loc="71:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="65:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x7f292508c530" loc="44:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="39:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x7f292508b6d0" loc="63:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="56:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;&#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x7f2925089950" loc="79:../../../tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="73:../../../tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwnerInfo" loc="2:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
      <function command="" provided="0" name="inUse" ref="0x7f2925088b20" loc="9:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
        <documentation loc="3:../../../tos/interfaces/ResourceDefaultOwnerInfo.nc">
          <short>&#10; Check whether a DefaultOwner has an active client.</short>
          <long>&#10; Check whether a DefaultOwner has an active client.&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwnerInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:../../../tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:../../../tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x7f292507d4c0" loc="79:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2925086490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f292507d240" loc="79:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2925086490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x7f292507f420" loc="53:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x7f292507e020" loc="62:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2925086490"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f292507fca0" loc="62:../../../tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x7f2925086490"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x7f292507e930" loc="70:../../../tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:../../../tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x7f2925086490"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadId48" loc="8:../../../tos/chips/ds2411/ReadId48.nc">
      <documentation loc="4:../../../tos/chips/ds2411/ReadId48.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f2924e735e0" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
        <interfacedef-ref qname="ReadId48"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x7f2924e73360" loc="13:../../../tos/chips/ds2411/ReadId48.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="OneWireReadWrite" loc="9:../../../tos/lib/onewire/OneWireReadWrite.nc">
      <documentation loc="5:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <short>&#10; </short>
        <long>&#10; @author: Andreas Koepke (koepke@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x7f2924e60b00" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="cmd" ref="0x7f2924e601c0" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x7f2924e60530" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2924e60860" loc="10:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x7f2924e5e880" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
        <interfacedef-ref qname="OneWireReadWrite"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f2924e5e2c0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x7f2924e5e5f0" loc="11:../../../tos/lib/onewire/OneWireReadWrite.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:../../../tos/lib/timer/BusyWait.nc">
      <documentation loc="36:../../../tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7f2924e46530" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7f2924e46530"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7f2924e46770" loc="59:../../../tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2924e46770"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x7f2924e452e0" loc="66:../../../tos/lib/timer/BusyWait.nc">
        <documentation loc="61:../../../tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2924e46770"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7f2924e45060" loc="66:../../../tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7f2924e46770"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x7f2924de2580" loc="43:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:../../../tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008-06-17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x7f2924db09e0" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x7f2924db0020" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x7f2924db0750" loc="63:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x7f2924db17f0" loc="55:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x7f2924db1020" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x7f2924db5d30" loc="49:../../../tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="43:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x7f2924dc63d0" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="52:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2924dc6150" loc="58:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x7f2924dc73d0" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="45:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2924dc7150" loc="50:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x7f2924dc3350" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="67:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2924dc30d0" loc="72:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7f2924dc4390" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="60:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x7f2924dc4110" loc="65:../../../tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x7f2925ac58c0"/>
                <typename><typedef-ref name="message_t" ref="0x7f2925ac3020"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:../../../tos/interfaces/ParameterInit.nc">
      <documentation loc="34:../../../tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x7f2924b9c5e0" loc="53:../../../tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f2924b9c5e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x7f2924b992a0" loc="64:../../../tos/interfaces/ParameterInit.nc">
        <documentation loc="55:../../../tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f2924b9c5e0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x7f2924b99020" loc="64:../../../tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x7f2924b9c5e0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBusy" loc="2:../../../tos/interfaces/SendBusy.nc">
      <function command="" provided="0" name="busy" ref="0x7f29249c81f0" loc="9:../../../tos/interfaces/SendBusy.nc">
        <documentation loc="3:../../../tos/interfaces/SendBusy.nc">
          <short>&#10; Check whether send queue entry is in use&#10;&#10; </short>
          <long>&#10; Check whether send queue entry is in use&#10;&#10; @return TRUE If client is active.&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBusy"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DeviceMetadata" loc="40:../../../tos/interfaces/DeviceMetadata.nc">
      <documentation loc="32:../../../tos/interfaces/DeviceMetadata.nc">
        <short>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID.</short>
        <long>&#10; DeviceMetadata is a way to obtain information about a generic data&#10; access device represented by a SID. See TEP109 and TEP114 for details.&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.1 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="getSignificantBits" ref="0x7f2924956350" loc="41:../../../tos/interfaces/DeviceMetadata.nc">
        <interfacedef-ref qname="DeviceMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SensirionSht11" loc="40:../../../tos/chips/sht11/SensirionSht11.nc">
      <documentation loc="32:../../../tos/chips/sht11/SensirionSht11.nc">
        <short>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor.</short>
        <long>&#10; SensirionSht11 is the rich interface to the Sensirion SHT11&#10; temperature/humidity sensor. &#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:12 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="measureHumidityDone" ref="0x7f29249412b0" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="78:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a humidity measurement.</short>
          <long>&#10; Presents the result of a humidity measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the humidity reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2924942b60" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f2924941020" loc="84:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readStatusReg" ref="0x7f2924941af0" loc="92:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="86:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Reads the current contents of the SHT11 status and control&#10; register.</short>
          <long>&#10; Reads the current contents of the SHT11 status and control&#10; register. See the datasheet for interpretation of this register.&#10;&#10; @return SUCCESS if the read will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureHumidity" ref="0x7f2924942390" loc="76:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="71:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a humidity measurement.</short>
          <long>&#10; Starts a humidity measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="measureTemperature" ref="0x7f2924945d10" loc="61:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="56:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Starts a temperature measurement.</short>
          <long>&#10; Starts a temperature measurement.&#10;&#10; @return SUCCESS if the measurement will be made&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="writeStatusReg" ref="0x7f292493f3b0" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="102:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Writes a new value to the SHT11 status and control register.</short>
          <long>&#10; Writes a new value to the SHT11 status and control register.&#10;&#10; @param val the new value to be written&#10;&#10; @return SUCCESS if the write will be performed&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7f292493f130" loc="109:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7f2924948af0" loc="47:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="42:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Resets the sensor.</short>
          <long>&#10; Resets the sensor.&#10;&#10; @return SUCCESS if the sensor will be reset&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="writeStatusRegDone" ref="0x7f292493fe50" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="111:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals the completion of the status register write.</short>
          <long>&#10; Signals the completion of the status register write.&#10;&#10; @param result SUCCESS if the write was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f292493fbd0" loc="116:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readStatusRegDone" ref="0x7f2924940900" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="94:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the value of the status register.</short>
          <long>&#10; Presents the value of the status register.&#10;&#10; @param result SUCCESS if the read succeeded&#10; @param val the value of the register&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2924940340" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f2924940670" loc="100:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="resetDone" ref="0x7f29249454e0" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="49:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Signals that the sensor has been reset.</short>
          <long>&#10; Signals that the sensor has been reset.&#10;&#10; @param result SUCCESS if the reset succeeded&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2924945260" loc="54:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="measureTemperatureDone" ref="0x7f2924944b00" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
        <documentation loc="63:../../../tos/chips/sht11/SensirionSht11.nc">
          <short>&#10; Presents the result of a temperature measurement.</short>
          <long>&#10; Presents the result of a temperature measurement.&#10;&#10; @param result SUCCESS if the measurement was successful&#10; @param val the temperature reading&#10;</long>
        </documentation>
        <interfacedef-ref qname="SensirionSht11"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f2924944530" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f2924944870" loc="69:../../../tos/chips/sht11/SensirionSht11.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:../../../tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:../../../tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x7f2924836420" loc="62:../../../tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:../../../tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadStream" loc="57:../../../tos/interfaces/ReadStream.nc">
      <documentation loc="33:../../../tos/interfaces/ReadStream.nc">
        <short>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices.</short>
        <long>&#10; The ReadStream interface is intended for buffered high data rate&#10; reading, usually from sensor devices. The type of the values being&#10; read is given as a template argument. &#10;&#10; &#60;p> To use this interface, allocate one or more buffers in your own&#10; space. Then, call postBuffer to pass these buffers into the&#10; device. Call read() to begin the sampling process. The buffers will&#10; be filled in the order originally posted, and a bufferDone() event&#10; will be signaled once each buffer has been filled with data. At any&#10; time while the read() is running, you may post new buffers to be&#10; filled. If the lower layer finishes signaling readDone() and then&#10; finds that no more buffers have been posted, it will consider the&#10; read to be finished, and signal readDone(). &#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f29247e4bf0" loc="57:../../../tos/interfaces/ReadStream.nc">
          <interfacedef-ref qname="ReadStream"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f29247e4bf0"/></type-var>
        </typedef>
      </parameters>
      <function event="" provided="0" name="bufferDone" ref="0x7f29247dd020" loc="89:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="80:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a previously posted buffer has been filled by the&#10; device.</short>
          <long>&#10; Signalled when a previously posted buffer has been filled by the&#10; device. In the event of a read error, result will not equal&#10; SUCCESS, and the buffer will be filled with zeroes.&#10;&#10; @param result SUCCESS if the buffer was filled without errors&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer that has been filled&#10; @param count the number of values actually read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f29247e4bf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f29247df650" loc="89:../../../tos/interfaces/ReadStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="buf" ref="0x7f29247df9d0" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f29247e4bf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f29247dfd30" loc="90:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="postBuffer" ref="0x7f29247e1b10" loc="68:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="58:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer.</short>
          <long>&#10; Passes a buffer to the device, and indicates how many values&#10; should be placed into the buffer. Make sure your count doesn't&#10; overrun the buffer.&#10;&#10; @param 'val_t* COUNT(count) buf' a pointer to the buffer&#10; @param count the number of values the buffer should hold&#10;&#10; @return SUCCESS if the post was successful&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f29247e4bf0"/></type-var>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x7f29247e1520" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f29247e4bf0"/></type-var>
            </type-pointer>
          </variable>
          <variable name="count" ref="0x7f29247e1880" loc="68:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x7f29247ded90" loc="78:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="70:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period.</short>
          <long>&#10; Directs the device to start filling buffers by sampling with the&#10; specified period. &#10; &#10; @param usPeriod the between-sample period in microseconds&#10; &#10; @return SUCCESS if the reading process began&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="usPeriod" ref="0x7f29247deb10" loc="78:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f29247db660" loc="102:../../../tos/interfaces/ReadStream.nc">
        <documentation loc="92:../../../tos/interfaces/ReadStream.nc">
          <short>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted.</short>
          <long>&#10; Signalled when a buffer has been filled but no more buffers have&#10; been posted. In the event of a read error, all previously posted&#10; buffers will have their bufferDone() event signalled, and then&#10; this event will be signalled with a non-SUCCESS argument.&#10;&#10; @param result SUCCESS if all buffers were filled without errors&#10; @param usActualPeriod Actual sampling period used - may be different&#10;   from period requested at read time. Undefined if result != SUCCESS.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f29247db020" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="usActualPeriod" ref="0x7f29247db3d0" loc="102:../../../tos/interfaces/ReadStream.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:2">
              <typename><typedef-ref name="uint32_t" ref="0x7f2926a0f920"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AdcConfigure" loc="45:../../../tos/interfaces/AdcConfigure.nc">
      <documentation loc="36:../../../tos/interfaces/AdcConfigure.nc">
        <short> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration.</short>
        <long> &#10; This interface is intended to be provided by an ADC client and used by the&#10; ADC subsystem to retrieve the client's ADC configuration. &#10; &#10; @author Jan Hauer &#10; @see  Please refer to TEP 101 for more information about this interface and&#10; its intended use.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="adc_config_t" ref="0x7f29247b88e0" loc="45:../../../tos/interfaces/AdcConfigure.nc">
          <interfacedef-ref qname="AdcConfigure"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f29247b88e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getConfiguration" ref="0x7f29247b5350" loc="58:../../../tos/interfaces/AdcConfigure.nc">
        <documentation loc="48:../../../tos/interfaces/AdcConfigure.nc">
          <short> &#10; Returns the configuration of an ADC client.</short>
          <long> &#10; Returns the configuration of an ADC client.  &#60;code>adc_config_t&#60;/code> is&#10; a hardware specific data type that contains all information necessary to&#10; configure the respective ADC hardware for the client. A client MUST always&#10; return the same configuration and, if configuration data is passed as a&#10; pointer, the ADC subsystem (HIL component) MUST NOT reference it after the&#10; return of this command.&#10;  &#10; @return chip specific configuration.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AdcConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="adc_config_t" scoped="" ref="0x7f29247b88e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:../../../tos/interfaces/ReadNow.nc">
      <documentation loc="33:../../../tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x7f29247b1de0" loc="52:../../../tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f29247b1de0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x7f29247ad700" loc="58:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="53:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x7f29247ac5d0" loc="66:../../../tos/interfaces/ReadNow.nc">
        <documentation loc="60:../../../tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f29247b1de0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x7f29247ac020" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
              <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
            </type-tag>
          </variable>
          <variable name="val" ref="0x7f29247ac340" loc="66:../../../tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x7f29247b1de0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12SingleChannel" loc="68:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample a single adc channel once or repeatedly (one event is&#10; signalled per conversion result) or perform multiple conversions for a&#10; single channel once or repeatedly (one event is signalled per multiple&#10; conversion results). It cannot be used to sample different adc channels with&#10; a single command (use the Msp430Adc12MultiChannel interface instead).&#10; Sampling a channel requires calling a sequence of two commands, configureX()&#10; and getData(), where X is either 'Single', 'SingleRepeat', 'Multiple' or&#10; 'MultipleRepeat'. Conversion results will be signalled by the&#10; dataReadySingle() or dataReadyMultiple() event, depending on the previous&#10; configuration, i.e. there are four possible sequences:&#10; &#10; &#60;p> configureSingle()          -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureSingleRepeat()    -> ( getData() -> singleDataReady() )*&#10; &#60;p> configureMultiple()        -> ( getData() -> multipleDataReady() )*&#10; &#60;p> configureMultipleRepeat()  -> getData() -> multipleDataReady()&#10;&#10; &#60;p> where configureX() and getData() are commands called by the client and&#10; singleDataReady() and multipleDataReady() are events signalled back to the&#10; client by the adc subsystem. Note that a configuration is valid until the&#10; client reconfigures or releases the ADC (using the Resource interface),&#10; except for configureMultipleRepeat(), which is only valid for a single call&#10; to getData(). This means that after a successful configuration with, for&#10; example, configureSingle() the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface).&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f2924798df0" loc="187:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="178:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.</short>
          <long> &#10; Starts sampling an adc channel using the configuration as specified by&#10; the last call to any of the four available configuration commands.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event singleDataReady() or multipleDataReady() will be signalled&#10; (depending on the previous configuration). Otherwise no such event will be&#10; signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingle" ref="0x7f29247a18c0" loc="83:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="71:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC to perform a single conversion.</short>
          <long> &#10; Configures the ADC to perform a single conversion. Any previous&#10; configuration will be overwritten.  If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>singleDataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config ADC12 configuration data.  &#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f29247a1640" loc="83:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureSingleRepeat" ref="0x7f29247a0de0" loc="105:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="85:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for repeated single channel conversion mode.</short>
          <long> &#10; Configures the ADC for repeated single channel conversion mode. Any&#10; previous configuration will be overwritten. If SUCCESS is returned calling&#10; &#60;code>getData()&#60;/code> will start sampling the adc channel periodically&#10; (the first conversion is started immediately).  The sampling period is&#10; specified by the &#60;code>jiffies&#60;/code> parameter, which defines the time&#10; between successive conversions in terms of clock ticks of clock source&#10; &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34; as specified in the&#10; &#60;code>config&#60;/code> parameter. If jiffies is zero successive conversions&#10; are performed as quickly as possible.  Conversion result are signalled&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>singleDataReady()&#60;/code> event handler.&#10; &#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34; and&#10; input divider &#34;sampcon_id&#34;.&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f29247a07e0" loc="105:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="jiffies" ref="0x7f29247a0b50" loc="105:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultipleRepeat" ref="0x7f292479a9c0" loc="175:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="139:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel multiple times repeatedly.</short>
          <long> &#10; Configures the ADC for sampling a channel multiple times repeatedly.  Any&#10; previous configuration will be overwritten. In contrast to the&#10; &#60;code>configureSingleRepeat()&#60;/code> command this configuration means that&#10; an event with &#60;code>numSamples&#60;/code> conversion results will be&#10; signalled, where 0 &#60; &#60;code>numSamples&#60;/code> &#60;= 16. In contrast to the&#10; &#60;code>configureMultiple()&#60;/code> command, this configuration means that&#10; &#60;code>numSamples&#60;/code> conversion results will be signalled repeatedly&#10; until the client returns &#60;code>FAIL&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler. &#10;&#10; If &#60;code>configureMultipleRepeat()&#60;/code> returns SUCCESS calling&#10; &#60;code>getData()&#60;/code> will start the the first conversion immediately.&#10; The sampling period is specified by the &#60;code>jiffies&#60;/code> parameter,&#10; which defines the time between successive conversions in terms of clock&#10; ticks of clock source &#34;sampcon_ssel&#34; and clock input divider &#34;sampcon_id&#34;&#10; as specified in the &#60;code>config&#60;/code> parameter. If jiffies is zero&#10; successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with &#60;code>numSamples&#60;/code>&#10; conversion results. If the client returns &#60;code>SUCCESS&#60;/code> in the&#10; &#60;code>multipleDataReady()&#60;/code> event handler, &#60;code>numSamples&#60;/code>&#10; new conversions will be performed, otherwise not.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples to take, 0 &#60;&#10; &#60;code>numSamples&#60;/code> &#60;= 16&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f292479b700" loc="175:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f292479a020" loc="175:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f292479a3a0" loc="175:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f292479a710" loc="175:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="multipleDataReady" ref="0x7f2924795770" loc="225:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="206:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Multiple ADC conversion results are ready.</short>
          <long> &#10; Multiple ADC conversion results are ready.  If the ADC was configured&#10; with the &#60;code>configureMultiple()&#60;/code> command, then the return value&#10; is ignored. If the ADC was configured with the&#10; &#60;code>configureMultipleRepeat()&#60;/code> command then the returned pointer&#10; defines where to store the next &#60;code>numSamples&#60;/code>&#10; conversion results (the client must make sure that the buffer is big&#10; enough!).  Returning a null pointer means that the repeated conversion&#10; mode will be stopped.&#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of samples stored in &#60;code>buffer&#60;/code> &#10;&#10; @return&#10; A null pointer stops a repeated conversion mode. Any non-zero value is&#10; interpreted as the next buffer, which must have at least&#10; &#60;code>numSamples&#60;/code> entries. The return value is ignored if the ADC&#10; was configured with &#60;code>configureMultiple()&#60;/code>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f29247950d0" loc="225:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f2924795460" loc="225:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="configureMultiple" ref="0x7f292479c2d0" loc="137:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period.</short>
          <long> &#10; Configures the ADC for sampling a channel &#60;code>numSamples&#60;/code> times&#10; with a given sampling period. Any previous configuration will be&#10; overwritten.  In contrast to the &#60;code>configureSingleRepeat()&#60;/code>&#10; command, this configuration means that only one event will be signalled&#10; after all samples have been taken (which is useful for high-frequency&#10; sampling). If SUCCESS is returned calling &#60;code>getData()&#60;/code> will&#10; start sampling the adc channel &#60;code>numSamples&#60;/code> times and the first&#10; conversion is started immediately. Conversion results are stored in a&#10; buffer allocated by the client (the &#60;code>buffer&#60;/code>&#10; parameter). The sampling period is specified by the &#60;code>jiffies&#60;/code>&#10; parameter, which defines the time between successive conversions in terms&#10; of clock ticks of clock source &#34;sampcon_ssel&#34; and clock input divider&#10; &#34;sampcon_id&#34; as specified in the &#60;code>config&#60;/code> parameter. If jiffies&#10; is zero successive conversions are performed as quickly as possible. After&#10; &#60;code>numSamples&#60;/code> conversions an event&#10; &#60;code>multipleDataReady()&#60;/code> is signalled with the conversion results.&#10;&#10; @param config ADC12 configuration data.  &#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;.&#10; @param buffer The user-allocated buffer in which the conversion results&#10; will be stored. It must have at least &#60;code>numSamples&#60;/code> entries,&#10; i.e. it must have a size of at least &#60;code>numSamples&#60;/code> * 2 byte.&#10; @param numSamples Number of adc samples&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start with the first conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f292479d020" loc="137:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="buffer" ref="0x7f292479d8c0" loc="137:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f292479dc50" loc="137:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f292479c020" loc="137:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="singleDataReady" ref="0x7f2924797ad0" loc="204:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
        <documentation loc="189:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
          <short> &#10; A single ADC conversion result is ready.</short>
          <long> &#10; A single ADC conversion result is ready. If the ADC was configured with&#10; the &#60;code>configureSingle()&#60;/code> command, then the return value is&#10; ignored. If the ADC was configured with the&#10; &#60;code>configureSingleRepeat()&#60;/code> command then the return value tells&#10; whether another conversion should be performed (&#60;code>SUCCESS()&#60;/code>) or&#10; not (&#60;code>FAIL&#60;/code>).&#10; &#10; @param data Conversion result (lower 12 bit).  &#10;&#10; @return If this event is signalled as response to a call to&#10; &#60;code>configureSingleRepeat()&#60;/code> then &#60;code>SUCCESS&#60;/code> results in&#10; another sampling and &#60;code>FAIL&#60;/code> stops the repeated sampling.&#10; Otherwise the return value is ignored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12SingleChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x7f2924797850" loc="204:../../../tos/chips/msp430/adc12/Msp430Adc12SingleChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12MultiChannel" loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <short> &#10; This interface provides access to the ADC12 on the level of HAL.</short>
        <long> &#10; This interface provides access to the ADC12 on the level of HAL. It can be&#10; used to sample up to 16 (different) ADC channels. It separates between&#10; configuration and data collection: every time a client has been granted&#10; access to the ADC subsystem (via the Resource interface), it first has to&#10; configure the ADC.  Afterwards the client may call getData() more than once&#10; without reconfiguring the ADC in between (if the client has not released the&#10; ADC via the Resource interface), i.e.&#60;p>&#10; &#10;    configure() -> ( getData() -> dataReady() )*&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x7f292473dce0" loc="97:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="90:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.</short>
          <long> &#10; Starts sampling the adc channels using the configuration as specified by&#10; the last call to &#60;code>configure()&#60;/code>.&#10;&#10; @return SUCCESS means that the conversion was started successfully and an&#10; event dataReady() will be signalled. Otherwise no event will be signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x7f292473d020" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Configures the ADC to perform conversion(s) on multiple channels.</short>
          <long> &#10; Configures the ADC to perform conversion(s) on multiple channels.  Any&#10; previous configuration will be overwritten.  If SUCCESS is returned&#10; calling &#60;code>getData()&#60;/code> will start the conversion immediately and a&#10; &#60;code>dataReady()&#60;/code> event will be signalled with the conversion&#10; result when the conversion has finished.&#10;&#10; @param config Main ADC12 configuration and configuration of the first&#10; channel &#10;&#10; @param memctl List of additional channels and respective reference&#10; voltages&#10;&#10; @param numMemctl Number of entries in the list&#10; &#10; @param buffer Buffer to store the conversion results, it must have&#10; numSamples entries. Results will be stored in the order the channels where&#10; specified.&#10;&#10; @param numSamples Total number of samples. Note: numSamples %&#10; (numMemctl+1) must be zero. For example, to sample every channel twice use&#10; numSamples = (numMemctl+1) * 2&#10;&#10; @param jiffies Sampling period in terms of clock ticks of &#34;sampcon_ssel&#34;&#10; and input divider &#34;sampcon_id&#34;. Samples are taken equally-spaced in&#10; time iterating round-robin over the channels (different channels are  &#10; not sampled simultaneously but one after another).&#10;&#10; @return SUCCESS means that the ADC was configured successfully and&#10; &#60;code>getData()&#60;/code> can be called to start the conversion.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f29247d0110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f29247d05e0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="config" ref="0x7f292473f970" loc="86:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-qualified const="">
                  <typename><typedef-ref name="msp430adc12_channel_config_t" ref="0x7f29247d34e0"/></typename>
                <type-tag size="I:4" alignment="I:2"><struct-ref ref="0x7f29247d5bb0"/></type-tag>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="memctl" ref="0x7f292473fd60" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f29247d0110"/>
                <typename><typedef-ref name="adc12memctl_t" ref="0x7f29247d05e0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="numMemctl" ref="0x7f292473e110" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="buffer" ref="0x7f292473e4b0" loc="87:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f292473e860" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
          <variable name="jiffies" ref="0x7f292473ebd0" loc="88:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x7f292473bd40" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
        <documentation loc="99:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
          <short> &#10; Conversion results are ready.</short>
          <long> &#10; Conversion results are ready. Results are stored in the buffer in the&#10; order the channels where specified in the &#60;code>configure()&#60;/code>&#10; command, i.e. every (numMemctl+1)-th entry maps to the same channel. &#10; &#10; @param buffer Conversion results (lower 12 bit are valid, respectively).&#10; @param numSamples Number of results stored in &#60;code>buffer&#60;/code> &#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12MultiChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x7f292473b720" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-pointer size="I:2" alignment="I:2">
              <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
                <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="numSamples" ref="0x7f292473bab0" loc="107:../../../tos/chips/msp430/adc12/Msp430Adc12MultiChannel.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Msp430Adc12Overflow" loc="44:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <short> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.</short>
        <long> &#10; Signals an ADC12MEMx overflow or conversion time overflow condition to the&#10; client.&#10;&#10; @author Jan Hauer &#10;</long>
      </documentation>
      <function event="" provided="0" name="memOverflow" ref="0x7f2924739780" loc="49:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="46:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; An ADC12MEMx overflow condition has occured.</short>
          <long> &#10; An ADC12MEMx overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionTimeOverflow" ref="0x7f2924738020" loc="54:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
        <documentation loc="51:../../../tos/chips/msp430/adc12/Msp430Adc12Overflow.nc">
          <short> &#10; A conversion time overflow condition has occured.</short>
          <long> &#10; A conversion time overflow condition has occured.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Msp430Adc12Overflow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:../../../tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:../../../tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x7f292472fda0" loc="95:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7f292472c6a0" loc="105:../../../tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:../../../tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><enum-ref name="__nesc_unnamed4242" ref="0x7f2926362020"/>
            <typename><typedef-ref name="error_t" ref="0x7f292635a1b0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAdc12" loc="45:../../../tos/chips/msp430/adc12/HplAdc12.nc">
      <documentation loc="36:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <short>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.</short>
        <long>&#10; The HplAdc12 interface exports low-level access to the ADC12 registers&#10; of the MSP430 MCU.&#10;&#10; @author Jan Hauer&#10; @see  Please refer to TEP 101 for more information about this component and its&#10;          intended use.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCtl0" ref="0x7f2924720ac0" loc="63:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="59:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Returns the ADC12 control register ADC12CTL0.&#10; @return ADC12CTL0&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f29247bf990"/>
            <typename><typedef-ref name="adc12ctl0_t" ref="0x7f29247be430"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMCtl" ref="0x7f292471dc30" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="77:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Returns the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @return memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f29247d0110"/>
            <typename><typedef-ref name="adc12memctl_t" ref="0x7f29247d05e0"/></typename>
          </type-tag>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f292471d9b0" loc="82:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetIFGs" ref="0x7f2924719350" loc="106:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="103:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Resets the ADC12 interrupt flag register, ADC12IFG.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isBusy" ref="0x7f2924718550" loc="118:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="114:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 BUSY flag.</short>
          <long> &#10; Returns the ADC12 BUSY flag.&#10; @return ADC12BUSY &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7f2926368090"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="conversionDone" ref="0x7f2924719d50" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="108:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Signals a conversion result.</short>
          <long> &#10; Signals a conversion result. &#10; @param iv ADC12 interrupt vector value 0x6, 0x8, ... , 0x24&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iv" ref="0x7f2924719ad0" loc="112:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtl1" ref="0x7f292471e350" loc="68:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="65:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> Returns the ADC12 control register ADC12CTL1.</short>
          <long> Returns the ADC12 control register ADC12CTL1. &#10;  @return ADC12CTL1&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f29247bcb20"/>
            <typename><typedef-ref name="adc12ctl1_t" ref="0x7f29247bb430"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMCtl" ref="0x7f292471d130" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="70:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.</short>
          <long> &#10; Sets the ADC12 conversion memory control register ADC12MCTLx.&#10; @param idx The register index (the 'x' in ADC12MCTLx) [0..15] &#10; @param memControl ADC12MCTLx register data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f29247d0110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f29247d05e0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f292471eac0" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
          <variable name="memControl" ref="0x7f292471ee80" loc="75:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x7f29247d0110"/>
              <typename><typedef-ref name="adc12memctl_t" ref="0x7f29247d05e0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x7f2924717600" loc="128:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="125:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Starts a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl0" ref="0x7f2924721760" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="47:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL0.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL0.&#10; @param control0 ADC12CTL0 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f29247bf990"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f29247be430"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control0" ref="0x7f29247214e0" loc="51:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f29247bf990"/>
              <typename><typedef-ref name="adc12ctl0_t" ref="0x7f29247be430"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMem" ref="0x7f292471c750" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="84:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 conversion memory register ADC12MEMx.</short>
          <long> &#10; Returns the ADC12 conversion memory register ADC12MEMx.&#10; @param idx The register index (the 'x' in ADC12MEMx) [0..15] &#10; @return ADC12MEMx &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x7f292471c4d0" loc="89:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7f2926a0f160"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setIEFlags" ref="0x7f292471b2a0" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="91:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Sets the ADC12 interrupt enable register, ADC12IE.&#10; @param mask Bitmask (0 means interrupt disabled, 1 menas interrupt enabled) &#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7f292471b020" loc="95:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIEFlags" ref="0x7f292471bb10" loc="101:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="97:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Returns the ADC12 interrupt enable register, ADC12IE.</short>
          <long> &#10; Returns the ADC12 interrupt enable register, ADC12IE.&#10; @return ADC12IE&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0x7f2926a0f520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopConversion" ref="0x7f2924718d10" loc="123:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="120:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Stops a conversion.</short>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableConversion" ref="0x7f2924717da0" loc="133:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="130:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short>&#10; Enables conversion (sets the ENC bit).</short>
          <long>&#10; Enables conversion (sets the ENC bit).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtl1" ref="0x7f29247202a0" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
        <documentation loc="53:../../../tos/chips/msp430/adc12/HplAdc12.nc">
          <short> &#10; Sets the ADC12 control register ADC12CTL1.</short>
          <long> &#10; Sets the ADC12 control register ADC12CTL1. &#10; @param control1 ADC12CTL1 register data.&#10;*</long>
        </documentation>
        <interfacedef-ref qname="HplAdc12"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f29247bcb20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f29247bb430"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control1" ref="0x7f2924720020" loc="57:../../../tos/chips/msp430/adc12/HplAdc12.nc">
            <type-tag size="I:2" alignment="I:2"><struct-ref ref="0x7f29247bcb20"/>
              <typename><typedef-ref name="adc12ctl1_t" ref="0x7f29247bb430"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
